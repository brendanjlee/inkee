import {React, useEffect, useState} from 'react';
import { Link, history } from 'react-router-dom';
import { Button } from 'react-bootstrap';
import CreateHeader from '../../components/header/header';
import './createLobby.css';
import Sound from '../../assets/buttonClick.mp3';

function CreateLobby({socket, history}) {
  // Game Settings
  const [numRounds, setNumRounds] = useState(2);
  const [roundLength, setRoundLength] = useState(30);
  
  // Custom Words 
  const [textAreaContent, setTextAreaContent] = useState('');
  const [usingCustomWords, setUsingCustomWords] = useState(null);
  
  window.history.replaceState(null, 'Inkee Create Lobby', '/');

  /**
   * User sets round numbers
   * @param {onChange} event 
   */
  const handleNumRoundChange = (event) => {
    setNumRounds(event.target.value);
  };

  /**
   * User sets round lenght
   * @param {onChange} event 
   */
  const handleRoundLengthChange = (event) => {
    setRoundLength(event.target.value);
  };

  /**
   * User enters custom words in textArea
   * @param {onChange} event 
   */
  const handleTextAreaChange = (event) => {
    let text = event.target.value;
    setTextAreaContent(text); 
  };

  const handleCustomWordsCheckChange = (event) => {
    setUsingCustomWords(event.target.value);
  };

  useEffect(() => {
    socket.on('inviteCode', (inviteCode) => {
      console.log(inviteCode);
      // Join game room generated by server.
      sessionStorage.setItem('inviteCode', inviteCode);
      history.push({
        pathname: '/prestartLobby'
      });
    });

    return () => {
      socket.off('inviteCode');
    };
  }, [socket, history]);

  /**
   * Submit game configeration to backend
   * @param {onClick} event 
   */
  const handleSubmit = (event) => {
    var ButtonClick = new Audio (Sound);
    ButtonClick.play();
    event.preventDefault();

    // create gameConfiguration
    // Use default word list if custom_words is empty
    const gameConfiguration = {
      numRounds: numRounds,
      roundLength: roundLength,
      customWords: [],
      onlyCustomWords: usingCustomWords === null
        || usingCustomWords === 'no' ? false : true,
    };

    const custom_words = document.getElementById('custom_words').value.split(/[ ,]+/);
    
    if (usingCustomWords === 'yes') {
      if (custom_words.length > 10) {
        gameConfiguration.customWords = custom_words; 
      } else {
        alert('There must be more than 10 custom words!');
        return;
      }
    } else if (custom_words.length > 0) {
      gameConfiguration.customWords = custom_words; 
    }

    // create userData
    const userData = {
      uid: sessionStorage.getItem('username'),
      avatar: sessionStorage.getItem('avatar'),
    };
    
    console.log(userData.avatar);
    socket.emit('createGame', {
      gameConfiguration,
      userData,
    });
    console.log('socket emit invite code');
  };

  return (
    <div className='lobbyRoot'>
      <form onSubmit={handleSubmit} className="form">
        <select
          id="numRounds"
          name="numRounds"
          onChange={handleNumRoundChange}
          value={numRounds}
          className="select"
        >
          <option hidden={true}>choose rounds</option>
          <option value="1rounds">1</option>
          <option value="2rounds">2</option>
          <option value="3rounds">3</option>
          <option value="4rounds">4</option>
          <option value="5rounds">5</option>
          <option value="6rounds">6</option>
          <option value="7rounds">7</option>
          <option value="8rounds">8</option>
          <option value="9rounds">9</option>
          <option value="10rounds">10</option>
        </select>
        <select
          id="roundLength"
          name="roundLength"
          onChange={handleRoundLengthChange}
          value={roundLength}
          className="select"
        >
          <option hidden={true}>drawing time</option>
          <option value="30seconds">30</option>
          <option value="40seconds">40</option>
          <option value="50seconds">50</option>
          <option value="60seconds">60</option>
          <option value="70seconds">70</option>
          <option value="80seconds">80</option>
          <option value="90seconds">90</option>
          <option value="120seconds">120</option>
          <option value="180seconds">180</option>
        </select>
        <select
          id="exclusiveCustomWords"
          name="customWords"
          onChange={handleCustomWordsCheckChange}
          value={usingCustomWords}
          className="select"
        >
          <option hidden={true}>use custom words only</option>
          <option value="yes">yes</option>
          <option value="no">no</option>
        </select>
        <div className='wordlist'>
          <textarea className='words'
            id='custom_words'
            placeholder='enter comma-separated custom words...'
            value={textAreaContent}
            onChange={handleTextAreaChange}
          >
          </textarea>
        </div> 
        <Button variant='primary' onClick={handleSubmit}>start game</Button>
      </form>
    </div>
  );
}

export default CreateLobby;