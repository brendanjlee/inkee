{"version":3,"sources":["assets/inkee-logo.png","components/CanvasContext.js","components/GameCanvas.js","components/ClearCanvasButton.js","pages/home/home.js","components/header/header.js","pages/createLobby/createLobby.js","pages/joinLobby/joinLobby.js","pages/prestartLobby/prestartLobby.js","components/ColorPalette.js","components/UserProfile.js","components/StrokeThickness.js","pages/game/game.js","App.js","reportWebVitals.js","index.js"],"names":["CanvasContext","React","createContext","CanvasProvider","children","socket","canvasRef","useRef","contextRef","useState","isDrawing","setIsDrawing","canvasEmpty","setCanvasEmpty","x","y","color","lineThickness","currentState","setCurrentState","renderSplashPrompt","canvas","current","context","getContext","drawing","Image","width","height","crossOrigin","onload","drawImage","src","draw","x0","y0","x1","y1","emit","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","clearCanvas","fillStyle","fillRect","Provider","value","prepareCanvas","style","offsetWidth","offsetHeight","scale","lineCap","startDrawing","nativeEvent","offsetX","offsetY","tempState","inDrawing","finishDrawing","changeColor","changeLineWidth","lineWidthValue","undoStroke","undo","redoStroke","useCanvas","useContext","GameCanvas","useEffect","onDrawingEvent","drawingData","onClearCanvas","on","off","id","onMouseDown","onMouseUp","onMouseMove","ref","ClearCanvasButton","className","onClick","Home","history","inviteCode","URLSearchParams","window","location","search","get","avatar","setAvatar","defaultCanvas","setDefaultCanvas","localStorage","setItem","startGameHandler","push","pathname","inviteCodeHandler","document","getElementById","exportCanvasImage","uri","toDataURL","blank","createElement","console","log","handleHomeSubmit","path","userNameInput","userData","uid","getItem","alert","Logo","alt","type","placeholder","align","Button","variant","size","CreateHeader","CreateLobby","numRounds","setNumRounds","roundLength","setRoundLength","textAreaContent","setTextAreaContent","csvContent","setCsvContent","replaceState","handleSubmit","event","preventDefault","customWords","length","lines","split","i","line","filter","Boolean","j","word","toLowerCase","includes","parseCustomWords","gameConfiguration","num_rounds","round_length","custom_words","onSubmit","name","onChange","target","hidden","text","onDrop","words","data","onError","err","file","inputElem","reason","addRemoveButton","onRemoveFile","JoinLobby","prestartLobbyHandler","joinById","PrestartLobby","setInviteCode","origin","inviteCodeURL","setInviteCodeURL","setUsers","setSettings","copyBtn","querySelector","handleClick","e","select","execCommand","addEventListener","removeEventListener","userListener","userToAdd","prevUsers","deleteUser","userId","user","settingListener","settingUpdate","prevSettings","key","populateSettings","settingsData","settings","startGame","readOnly","EmailShareButton","url","quote","EmailIcon","TwitterShareButton","TumblrIcon","FacebookMessengerShareButton","FacebookMessengerIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","WhatsappIcon","ColorPalette","UserProfile","users","listItems","map","score","StrokeThickness","min","max","defaultValue","step","slider","parseInt","writeMessage","message","correctGuess","closeGuess","p","chatBox","createTextNode","messages","span","textContent","classList","add","append","appendChild","scrollTop","scrollHeight","Game","setMessages","loadPlayers","loadNewPlayer","disconnectPlayer","sendMessage","keyPressFunc","messageData","App","setSocket","useHistory","clear","domain","hostname","newSocket","io","transports","upgrade","secure","opts","msg","removeAllListeners","close","exact","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"0LAAe,G,MAAA,IAA0B,wC,OCEnCA,EAAgBC,IAAMC,gBAEfC,EAAiB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAA8B,IAApBC,cAAoB,MAAX,KAAW,EACvDC,EAAYC,iBAAO,MACnBC,EAAaD,iBAAO,MAC1B,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwCJ,mBAAS,CAC/CK,EAAG,EACHC,EAAG,EACHC,MAAO,QACPC,cAAe,IAJjB,mBAAOC,EAAP,KAAqBC,EAArB,KAuBMC,EAAqB,WACzB,IAAKf,EAAQ,CACX,IAAMgB,EAASf,EAAUgB,QACnBC,EAAUF,EAAOG,WAAW,MAG5BC,EAAU,IAAIC,MAAML,EAAOM,MAAON,EAAOO,QAC/CH,EAAQI,YAAc,YACtBJ,EAAQK,OAAS,WACfP,EAAQQ,UAAUN,EAAS,EAAG,IAEhCA,EAAQO,IAAM,wCA2CZC,EAAO,SAACC,EAAIC,EAAIC,EAAIC,EAAIpB,EAAeD,EAAOsB,GAClD9B,EAAWc,QAAQiB,YACnB/B,EAAWc,QAAQkB,OAAON,EAAIC,GAC9B3B,EAAWc,QAAQmB,OAAOL,EAAIC,GAC9B7B,EAAWc,QAAQoB,YAAc1B,EACjCR,EAAWc,QAAQqB,UAAY1B,EAC/BT,EAAWc,QAAQsB,SAEfvC,GAAUiC,GACZjC,EAAOiC,KAAK,eAAgB,CAC1BJ,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJpB,cAAeA,EACfD,MAAOA,KAqBP6B,EAAc,SAACP,GACnB,IAAMjB,EAASf,EAAUgB,QACnBC,EAAUF,EAAOG,WAAW,MAClCD,EAAQuB,UAAY,QACpBvB,EAAQwB,SAAS,EAAG,EAAG1B,EAAOM,MAAON,EAAOO,QAC5Cf,GAAe,GACXR,GAAUiC,GACZjC,EAAOiC,KAAK,gBAgBhB,OACE,cAACtC,EAAcgD,SAAf,CACEC,MAAO,CACL3C,YACA4C,cArIgB,WACpB,IAAM7B,EAASf,EAAUgB,QACzBD,EAAO8B,MAAMxB,MAAO,OACpBN,EAAO8B,MAAMvB,OAAO,OACpBP,EAAOM,MAA8B,EAArBN,EAAO+B,YACvB/B,EAAOO,OAA+B,EAAtBP,EAAOgC,aAEvB,IAAM9B,EAAUF,EAAOG,WAAW,MAClCD,EAAQ+B,MAAM,EAAG,GACjB/B,EAAQgC,QAAU,QAClBhC,EAAQmB,YAAc,QACtBnB,EAAQoB,UAAY,EACpBnC,EAAWc,QAAUC,EACrBH,KAyHIoC,aAvGe,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAClB7C,IACFiC,GAAY,GACZhC,GAAe,IAEjB,IAAQ6C,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjBhD,GAAa,GACb,IAAMiD,EAAY1C,EAClB0C,EAAU9C,EAAI4C,EACdE,EAAU7C,EAAI4C,EACdxC,EAAgByC,IA8FZC,UAhFY,SAAC,GAAqB,IAAnBJ,EAAkB,EAAlBA,YACnB,GAAK/C,EAAL,CAIA,IAAQgD,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjB1B,EAAKf,EAAaJ,EAAGI,EAAaH,EAAG2C,EAASC,EAC5CzC,EAAaD,cAAeC,EAAaF,OAAO,GAElD,IAAM4C,EAAY1C,EAClB0C,EAAU9C,EAAI4C,EACdE,EAAU7C,EAAI4C,EACdxC,EAAgByC,KAqEZE,cA5FgB,SAAC,GAAqB,IAAnBL,EAAkB,EAAlBA,YACvB,GAAK/C,EAAL,CAIA,IAAQgD,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjB1B,EAAKf,EAAaJ,EAAGI,EAAaH,EAAG2C,EAASC,EAC5CzC,EAAaD,cAAeC,EAAaF,OAAO,GAClDL,GAAa,KAqFTkC,cACAkB,YArBc,SAAA/C,GAAK,OAAI,WAC3B,IAAM4C,EAAY1C,EAClB0C,EAAU5C,MAAQA,EAClBG,EAAgByC,KAmBZI,gBAhBkB,SAACC,GACvB,IAAML,EAAY1C,EAClB0C,EAAU3C,cAAgBgD,EAC1B9C,EAAgByC,IAcZ3B,OACAiC,WAnDa,SAAC5B,GAClB9B,EAAWc,QAAQ6C,OAEf7B,GAAQjC,GACVA,EAAOiC,KAAK,SAgDV8B,WA5Ca,SAAC9B,GAClB9B,EAAWc,QAAQ6C,OAEf7B,GAAQjC,GACVA,EAAOiC,KAAK,UA4Bd,SAeGlC,KAKMiE,EAAY,kBAAMC,qBAAWtE,ICjH3BuE,MAlDR,YAAsC,IAAD,IAAhBlE,cAAgB,MAAP,KAAO,EAC1C,EAQIgE,IAPF/D,EADF,EACEA,UACA4C,EAFF,EAEEA,cACAM,EAHF,EAGEA,aACAM,EAJF,EAIEA,cACAD,EALF,EAKEA,UACA5B,EANF,EAMEA,KACAY,EAPF,EAOEA,YA+BF,OA5BA2B,qBAAU,WACRtB,MACC,IAGHsB,qBAAU,WACR,IAAMC,EAAiB,SAACC,GACtBzC,EAAKyC,EAAYxC,GAAIwC,EAAYvC,GAAIuC,EAAYtC,GAAIsC,EAAYrC,GAC/DqC,EAAYzD,cAAeyD,EAAY1D,OAAO,IAG5C2D,EAAgB,WACpB9B,GAAY,IAQd,OALIxC,IACFA,EAAOuE,GAAG,eAAgBH,GAC1BpE,EAAOuE,GAAG,cAAeD,IAGpB,WACDtE,IACFA,EAAOwE,IAAI,eAAgBJ,GAC3BpE,EAAOwE,IAAI,cAAeF,OAG7B,CAACtE,IAGF,wBACEyE,GAAG,SACHC,YAAavB,EACbwB,UAAWlB,EACXmB,YAAapB,EACbqB,IAAK5E,K,SC7CE6E,EAAoB,WAC/B,IAAQtC,EAAgBwB,IAAhBxB,YAER,OAAO,wBAAQuC,UAAU,OAAOC,QAASxC,EAAlC,oBCkIMyC,MAhIf,YAAkC,IAAnBjF,EAAkB,EAAlBA,OAAQkF,EAAU,EAAVA,QAEfC,EADQ,IAAIC,gBAAgBC,OAAOC,SAASC,QACzBC,IAAI,UAC7B,EAA4BpF,mBAAS,IAArC,mBAAOqF,EAAP,KAAeC,EAAf,KACA,EAA0CtF,mBAAS,MAAnD,mBAAOuF,EAAP,KAAsBC,EAAtB,KAEmB,OAAfT,GACFU,aAAaC,QAAQ,aAAcX,GAGrChB,qBAAU,WACR,IAAM4B,EAAmB,SAACZ,GACxBU,aAAaC,QAAQ,aAAcX,GACnCD,EAAQc,KAAK,CACXC,SAAU,WAIRC,EAAoB,WACxBL,aAAaC,QAAQ,aAAcX,GACnCD,EAAQc,KAAK,CACXC,SAAU,oBASd,OALIjG,IACFA,EAAOuE,GAAG,YAAawB,GACvB/F,EAAOuE,GAAG,aAAc2B,IAGnB,WACDlG,IACFA,EAAOwE,IAAI,YAAauB,GACxB/F,EAAOwE,IAAI,aAAc0B,OAG5B,CAAClG,IAEJmE,qBAAU,WACRyB,EAAiBO,SAASC,eAAe,aACxC,IAEH,IAAMC,EAAoB,WACxB,IAAMrF,EAASmF,SAASC,eAAe,UACjCE,EAAMtF,EAAOuF,UAAU,aAEvBC,EAAQL,SAASM,cAAc,UAIrC,OAHAD,EAAMlF,MAAQN,EAAOM,MACrBkF,EAAMjF,OAASP,EAAOO,OAElB+E,IAAQX,EAAcY,UAAU,cAC/BD,IAAQE,EAAMD,UAAU,cAC3BG,QAAQC,IAAI,wBACL,IAGTD,QAAQC,IAAIL,GACZZ,EAAUY,IACH,IAGHM,EAAmB,SAACC,GAA6B,IAAvB1B,EAAsB,uDAAT,KACrC2B,EAAgBX,SAASC,eAAe,kBAClB,KAAxBU,EAAclE,OAChBiD,aAAaC,QAAQ,WAAYgB,EAAclE,OAC/C8D,QAAQC,IAAIG,EAAclE,OAMvByD,MAIDlB,EACFnF,EAAOiC,KAAK,WAAY,CACtB8E,SAAU,CACRC,IAAKnB,aAAaoB,QAAQ,YAC1BxB,OAAQA,GAEVN,WAAYU,aAAaoB,QAAQ,gBAGnC/B,EAAQc,KAAK,CACXC,SAAUY,MAlBZK,MAAM,8BAuBV,OACE,qBAAKnC,UAAU,OAAf,SACE,cAAC,EAAD,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,OAAOpD,IAAKwF,EAAMC,IAAI,iBAEvC,+BACE,uBAAOrC,UAAU,WAAWN,GAAG,iBAAiB4C,KAAK,OAAOC,YAAY,wBAE1E,sBAAKC,MAAM,SAAX,UACE,qBAAKxC,UAAU,eAAf,SACE,cAAC,EAAD,MAEF,8BACE,cAAC,EAAD,MAEF,8BACE,cAACyC,EAAA,EAAD,CAAQxC,QAAS,WACf4B,EAAiB,aAAcf,aAAaoB,QAAQ,gBACnDlC,UAAU,MAAM0C,QAAQ,YAAYC,KAAK,KAF5C,yBAIF,+BAEK7B,aAAaoB,QAAQ,eACxB,cAACO,EAAA,EAAD,CAAQxC,QAAS,WACf4B,EAAiB,iBAChB7B,UAAU,MAAM0C,QAAQ,kBAAkBC,KAAK,KAFlD,wCChHDC,MARf,WACE,OACE,qBAAK5C,UAAU,SAAf,SACE,qBAAKA,UAAU,OAAOpD,IAAKwF,EAAMC,IAAI,kB,cC6N5BQ,MA7Nf,YAAyC,IAAnB5H,EAAkB,EAAlBA,OAAQkF,EAAU,EAAVA,QAE5B,EAAkC9E,mBAAS,GAA3C,mBAAOyH,EAAP,KAAkBC,EAAlB,KACA,EAAsC1H,mBAAS,IAA/C,mBAAO2H,EAAP,KAAoBC,EAApB,KAEA,EAA8C5H,mBAAS,IAAvD,mBAAO6H,EAAP,KAAwBC,EAAxB,KACA,EAAoC9H,mBAAS,MAA7C,mBAAO+H,EAAP,KAAmBC,EAAnB,KACA/C,OAAOH,QAAQmD,aAAa,KAAM,qBAAsB,KAiGxDlE,qBAAU,WAUR,OATAnE,EAAOuE,GAAG,cAAc,SAACY,GACvBuB,QAAQC,IAAIxB,GAEZU,aAAaC,QAAQ,aAAcX,GACnCD,EAAQc,KAAK,CACXC,SAAU,sBAIP,WACLjG,EAAOwE,IAAI,iBAEZ,CAACxE,EAAQkF,IAMZ,IAAMoD,EAAe,SAACC,GACpBA,EAAMC,iBAGN,IAAIC,EA3DmB,SAACR,EAAiBE,GACzCzB,QAAQC,IAAI,sBACZ,IAAI8B,EAAc,GAClB,GAAIR,EAAgBS,OAAS,EAAG,CAE9B,IADA,IAAIC,EAAQV,EAAgBW,MAAM,cACzBC,EAAE,EAAGA,EAAEF,EAAMD,OAAQG,IAE5B,IADA,IAAIC,EAAOH,EAAME,GAAGD,MAAM,SAASG,OAAOC,SACjCC,EAAI,EAAGA,EAAIH,EAAKJ,OAAQO,IAAK,CACpC,IAAMC,EAAOJ,EAAKG,GAAGE,cAChBV,EAAYW,SAASF,IACxBT,EAAYzC,KAAKkD,GAIvBxC,QAAQC,IAAI,2BAGd,GAAkB,MAAdwB,EAAoB,CACtB,IAAK,IAAIU,EAAE,EAAGA,EAAIV,EAAWO,OAAQG,IAAK,CACxC,IAAIK,EAAOf,EAAWU,GACtBK,EAAOA,EAAKC,cACPV,EAAYW,SAASF,IACxBT,EAAYzC,KAAKkD,GAGrBxC,QAAQC,IAAI,sBAQd,OAJI8B,EAAYC,OAAS,IAAMD,EAAYC,OAAS,GAClDxB,MAAM,qCAGDuB,EA0BWY,CAAiBpB,EAAiBE,GAIhDmB,EAAoB,CACtBC,WAAY1B,EACZ2B,aAAczB,EACd0B,aAAc,IAIZhB,EAAYC,OAAS,IACvBY,EAAiB,aAAmBb,GAMtC,IAAM1B,EAAW,CACfC,IAAKnB,aAAaoB,QAAQ,YAC1BxB,OAAQ,cAGVzF,EAAOiC,KAAK,aAAc,CACxBqH,oBACAvC,aAEFL,QAAQC,IAAI,4BAGd,OACE,qBAAK5B,UAAU,YAAf,SACE,uBAAM2E,SAAUpB,EAAcvD,UAAU,OAAxC,UACE,yBACEN,GAAG,YACHkF,KAAK,YACLC,SAtJqB,SAACrB,GAC5BT,EAAaS,EAAMsB,OAAOjH,QAsJpBA,MAAOiF,EACP9C,UAAU,SALZ,UAOE,wBAAQ+E,QAAQ,EAAhB,2BACA,wBAAQlH,MAAM,UAAd,eACA,wBAAQA,MAAM,UAAd,eACA,wBAAQA,MAAM,UAAd,eACA,wBAAQA,MAAM,UAAd,eACA,wBAAQA,MAAM,UAAd,eACA,wBAAQA,MAAM,UAAd,eACA,wBAAQA,MAAM,UAAd,eACA,wBAAQA,MAAM,UAAd,eACA,wBAAQA,MAAM,UAAd,eACA,wBAAQA,MAAM,WAAd,mBAEF,yBACE6B,GAAG,cACHkF,KAAK,cACLC,SAjKwB,SAACrB,GAC/BP,EAAeO,EAAMsB,OAAOjH,QAiKtBA,MAAOmF,EACPhD,UAAU,SALZ,UAOE,wBAAQ+E,QAAQ,EAAhB,0BACA,wBAAQlH,MAAM,YAAd,gBACA,wBAAQA,MAAM,YAAd,gBACA,wBAAQA,MAAM,YAAd,gBACA,wBAAQA,MAAM,YAAd,gBACA,wBAAQA,MAAM,YAAd,gBACA,wBAAQA,MAAM,YAAd,gBACA,wBAAQA,MAAM,YAAd,gBACA,wBAAQA,MAAM,aAAd,iBACA,wBAAQA,MAAM,aAAd,oBAEF,sBAAKmC,UAAU,WAAf,UACE,0BAAUA,UAAU,QAClBuC,YAAY,wBACZ1E,MAAOqF,EACP2B,SA5KmB,SAACrB,GAC5B,IAAIwB,EAAOxB,EAAMsB,OAAOjH,MACxBsF,EAAmB6B,MA6Kb,qBAAKhF,UAAU,YAAf,SACE,cAAC,IAAD,CACEiF,OAxKS,SAACzB,GAEpB,IADA,IAAI0B,EAAQ,GACHpB,EAAE,EAAGA,EAAEN,EAAMG,OAAQG,IAAK,CACjC,IAAIK,EAAOX,EAAMM,GAAGqB,KACfD,EAAMb,SAASF,EAAK,KAAKe,EAAMjE,KAAKkD,EAAK,IAEhDd,EAAc6B,IAmKJE,QArJU,SAACC,EAAKC,EAAMC,EAAWC,GAC3C7D,QAAQC,IAAIyD,IAqJFI,iBAAe,EACfC,aA9Je,SAAClC,GAC1BH,EAAc,OAyJN,SAME,oEAIN,cAACZ,EAAA,EAAD,CAAQC,QAAQ,UAAUzC,QAASsD,EAAnC,8B,MCxJOoC,MAjEf,YAAuC,IAAnB1K,EAAkB,EAAlBA,OAAQkF,EAAU,EAAVA,QAC1BG,OAAOH,QAAQmD,aAAa,KAAM,mBAAoB,KACtDlE,qBAAU,WACR,IAAM4B,EAAmB,SAACZ,GACxBU,aAAaC,QAAQ,aAAcX,GACnCD,EAAQc,KAAK,CACXC,SAAU,WAIR0E,EAAuB,SAACxF,GAC5BU,aAAaC,QAAQ,aAAcX,GACnCD,EAAQc,KAAK,CACXC,SAAU,oBAOd,OAHAjG,EAAOuE,GAAG,YAAawB,GACvB/F,EAAOuE,GAAG,aAAcoG,GAEjB,WACL3K,EAAOwE,IAAI,YAAauB,GACxB/F,EAAOwE,IAAI,aAAcmG,MAE1B,CAAC3K,EAAQkF,IAEZ,IAAMoD,EAAe,WAAkC,IAAjCnD,EAAgC,uDAAnB,KAAMyF,EAAa,uCAC9C7D,EAAW,CACfA,SAAU,CACRC,IAAKnB,aAAaoB,QAAQ,YAC1BxB,OAAQ,cAEVN,WAAYA,GAGVyF,GAA2B,KAAfzF,EACd+B,MAAM,8BACG0D,GAA2B,KAAfzF,GACrB4B,EAAQ,WAAiB5B,EACzBnF,EAAOiC,KAAK,WAAY8E,IACd6D,GACV5K,EAAOiC,KAAK,iBAAkB8E,IAIlC,OACE,qBAAKhC,UAAU,OAAf,SACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,uBAAMA,UAAU,aAAhB,UACE,uBAAON,GAAG,WAAWM,UAAU,WAAWsC,KAAK,OAAOC,YAAY,qBAAoB,uBACtF,cAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUzC,QAAS,WACjCsD,EAAanC,SAASC,eAAe,YAAYxD,OAAO,IAD1D,6BAIF,cAAC4E,EAAA,EAAD,CAAQC,QAAQ,UAAUzC,QAAS,WACjCsD,EAAanC,SAASC,eAAe,YAAYxD,OAAO,IAD1D,sC,0GCqGKiI,MAhJf,YAA2C,IAAnB7K,EAAkB,EAAlBA,OAAQkF,EAAU,EAAVA,QAC9B,EAAoC9E,mBAAS,IAA7C,mBAAO+E,EAAP,KAAmB2F,EAAnB,KACA,EAA0C1K,mBAASiF,OAAOC,SAASyF,QAAnE,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0B7K,mBAAS,IAAnC,mBAAc8K,GAAd,WACA,EAAgC9K,mBAAS,IAAzC,mBAAiB+K,GAAjB,WA4FA,OA3FA9F,OAAOH,QAAQmD,aAAa,KAAM,uBAAlC,WACMxC,aAAaoB,QAAQ,gBAG3B9C,qBAAU,WACR,IAAMiH,EAAUjF,SAASkF,cAAc,iBACjCC,EAAc,SAACC,GACnBA,EAAE/C,iBACFrC,SAASkF,cAAc,aAAaG,SACpCrF,SAASsF,YAAY,SAKvB,OAFAL,EAAQM,iBAAiB,QAASJ,GAE3B,WACLF,EAAQO,oBAAoB,QAASL,MAEtC,IAIHnH,qBAAU,WACR,IAAMyH,EAAe,SAACC,GACpBX,GAAS,SAACY,GAER,MADc,sBAAOA,GAAP,CAAkBD,QAK9BE,EAAa,SAACC,GAClBd,GAAS,SAACY,GAER,OADiBA,EAAU/C,QAAO,SAACkD,GAAD,OAAUA,EAAKjF,MAAQgF,SAS7D,OAJAhM,EAAOuE,GAAG,UAAWqH,GACrB5L,EAAOuE,GAAG,gBAAiBwH,GAC3B/L,EAAOiC,KAAK,cAEL,WACLjC,EAAOwE,IAAI,UAAWoH,GACtB5L,EAAOwE,IAAI,gBAAiBuH,MAE7B,CAAC/L,IAGJmE,qBAAU,WACR,IAAM+H,EAAkB,SAACC,GACvBhB,GAAY,SAACiB,GACX,IAAMC,EAAMF,EAAcE,IACpBzJ,EAAQuJ,EAAcvJ,MAG5B,OADAwJ,EAAaC,GAAOzJ,EACbwJ,MAILE,EAAmB,SAACC,GACxBpB,EAAYoB,EAAaC,WAO3B,OAJAxM,EAAOuE,GAAG,gBAAiB2H,GAC3BlM,EAAOuE,GAAG,eAAgB+H,GAC1BtM,EAAOiC,KAAK,eAEL,WACLjC,EAAOwE,IAAI,gBAAiB0H,GAC5BlM,EAAOwE,IAAI,eAAgB8H,MAE5B,CAACtM,IAGJmE,qBAAU,WACR,IAAMsI,EAAY,WAChBvH,EAAQc,KAAK,CACXC,SAAU,WAKd,OAFAjG,EAAOuE,GAAG,YAAakI,GAEhB,WACLzM,EAAOwE,IAAI,YAAaiI,MAEzB,CAACzM,EAAQkF,IAEZf,qBAAU,WACR2G,EAAcjF,aAAaoB,QAAQ,eACnCgE,EAAiBD,EAAgB,IAAM7F,KACtC,CAACD,IAGF,qBAAKH,UAAU,eAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAGA,UAAU,SAAb,sBAAgCI,KAChC,8BACE,uBAAOJ,UAAU,UAAUsC,KAAK,OAAO5C,GAAG,WACxC7B,MAAOyC,OAAOC,SAASyF,OAAS,IAAM5F,EAAYuH,UAAQ,MAG9D,sBAAK3H,UAAU,iBAAf,UACE,wBAAQA,UAAU,UAAUsC,KAAK,SAAS5C,GAAG,OAA7C,uBACA,sBAAKM,UAAU,WAAf,UACE,cAAC4H,EAAA,EAAD,CACEC,IAAK5B,EACL6B,MAAO,yBAFT,SAIE,cAACC,EAAA,EAAD,CAAWpF,KAAM,OAEnB,cAACqF,EAAA,EAAD,CACEH,IAAKvH,OAAOC,SAASyF,OAAS,IAAM5F,EACpC0H,MAAO,yBAFT,SAGE,cAACG,EAAA,EAAD,CAAYtF,KAAM,OAEpB,cAACuF,EAAA,EAAD,CACEL,IAAKvH,OAAOC,SAASyF,OAAS,IAAM5F,EACpC0H,MAAO,yBAFT,SAGE,cAACK,EAAA,EAAD,CAAuBxF,KAAM,OAE/B,cAACyF,EAAA,EAAD,CACEP,IAAKvH,OAAOC,SAASyF,OAAS,IAAM5F,EACpC0H,MAAO,yBAFT,SAGE,cAACO,EAAA,EAAD,CAAc1F,KAAM,OAEtB,cAAC2F,EAAA,EAAD,CACET,IAAKvH,OAAOC,SAASyF,OAAS,IAAM5F,EACpC0H,MAAO,yBAFT,SAGE,cAACS,EAAA,EAAD,CAAc5F,KAAM,aAI1B,cAACF,EAAA,EAAD,CAAQxC,QAAS,WACfhF,EAAOiC,KAAK,cACXwF,QAAQ,UAFX,yBCvJK8F,G,MAAe,WAC1B,IAAQ7J,EAAgBM,IAAhBN,YAER,OACE,gCACE,wBAAQe,GAAG,cAAcM,UAAU,QAAQC,QAAStB,EAAY,UAChE,wBAAQe,GAAG,cAAcM,UAAU,QAAQC,QAAStB,EAAY,SAChE,wBAAQe,GAAG,cAAcM,UAAU,QAAQC,QAAStB,EAAY,WAChE,wBAAQe,GAAG,cAAcM,UAAU,QAAQC,QAAStB,EAAY,YAChE,wBAAQe,GAAG,cAAcM,UAAU,QAAQC,QAAStB,EAAY,UAChE,wBAAQe,GAAG,cAAcM,UAAU,QAAQC,QAAStB,EAAY,YAChE,wBAAQe,GAAG,cAAcM,UAAU,QAAQC,QAAStB,EAAY,YAChE,wBAAQe,GAAG,cAAcM,UAAU,QAAQC,QAAStB,EAAY,WAChE,wBAAQe,GAAG,cAAcM,UAAU,QAAQC,QAAStB,EAAY,gBCd/D,SAAS8J,EAAT,GAAoC,IAAD,IAAbC,MACrBC,QADkC,MAAL,GAAK,GAChBC,KAAI,SAAC1B,GAAD,OAC1B,sBAAKlH,UAAU,cAAf,UACE,8BACE,4BAAIkH,EAAKjF,QAEX,0CACUiF,EAAK2B,WALiB3B,EAAKjF,QASzC,OACE,qBAAKjC,UAAU,WAAf,SACG2I,IAKQF,IChBFK,EAAkB,WAC7B,IAAQlK,EAAoBK,IAApBL,gBAER,OACE,8BACE,uBAAOc,GAAG,UACR4C,KAAK,QACLyG,IAAI,IACJC,IAAI,KACJC,aAAa,IACbC,KAAK,IACLrE,SAAU,SAACrB,GACT,IAAI2F,EAAUC,SAAS5F,EAAMsB,OAAOjH,OACpCe,EAAgBuK,SCsH1B,IAAME,EAAe,SAAC,GAA4E,IAAD,IAAzEzE,YAAyE,MAAlE,GAAkE,EAA9D0E,EAA8D,EAA9DA,QAA8D,yDAAP,GAAO,IAAnDC,oBAAmD,aAA7BC,kBAA6B,SACzFC,EAAIrI,SAASM,cAAc,KAC3BgI,EAAUtI,SAASuI,eAAT,UAA2BL,IACrCM,EAAWxI,SAASC,eAAe,QACzC,GAAa,KAATuD,EAAa,CACf,IAAMiF,EAAOzI,SAASM,cAAc,QACpCmI,EAAKC,YAAL,UAAsBlF,EAAtB,MACAiF,EAAKE,UAAUC,IAAI,WACnBP,EAAEQ,OAAOJ,GAEXJ,EAAEM,UAAUC,IAAI,MAAO,QACvBP,EAAEQ,OAAOP,GACLF,GACFC,EAAEM,UAAUC,IAAI,eAGdT,GACFE,EAAEM,UAAUC,IAAI,iBAGlBJ,EAASM,YAAYT,GACrBG,EAASO,UAAYP,EAASQ,cAGjBC,EApJf,YAAkC,IAAnBpP,EAAkB,EAAlBA,OACb,GAD+B,EAAVkF,QACW9E,mBAAS,KAAzC,mBAAOuO,EAAP,KAAiBU,EAAjB,KACA,EAA0BjP,mBAAS,IAAnC,mBAAOqN,EAAP,KAAcvC,EAAd,KAwFA,OAvFA7F,OAAOH,QAAQmD,aAAa,KAAM,QAAlC,WACMxC,aAAaoB,QAAQ,gBAG3B9C,qBAAU,WACR,IAAMmL,EAAc,SAAC7B,GACnBvC,EAASuC,IAGXzN,EAAOuE,GAAG,aAAc+K,GAExB,IAAMC,EAAgB,SAACxI,GACrBmE,GAAS,SAACY,GAER,MADc,sBAAOA,GAAP,CAAkB/E,QAKpC/G,EAAOuE,GAAG,YAAagL,GAEvB,IAAMC,EAAmB,SAACxD,GACxBd,GAAS,SAACY,GAER,OADiBA,EAAU/C,QAAO,SAACkD,GAAD,OAAUA,EAAKjF,MAAQgF,SAS7D,OAJAhM,EAAOuE,GAAG,gBAAiBiL,GAE3BxP,EAAOiC,KAAK,cAEL,WACLjC,EAAOwE,IAAI,aAAc8K,GACzBtP,EAAOwE,IAAI,YAAa+K,GACxBvP,EAAOwE,IAAI,gBAAiBgL,MAE7B,CAACxP,IAEJmE,qBAAU,WACR,IAAMsL,EAActJ,SAASkF,cAAc,gBACrCqE,EAAe,SAACnE,GACpB,GAAc,UAAVA,EAAEc,IAAiB,CACrBd,EAAE/C,iBACF,IAAM6F,EAAUoB,EAAY7M,MAC5B6M,EAAY7M,MAAQ,GACpB5C,EAAOiC,KAAK,cAAe,CAAEoM,YAC7B3H,QAAQC,IAAI0H,KAgChB,OA7BAoB,EAAY/D,iBAAiB,WAAYgE,GAEzC1P,EAAOuE,GAAG,eAAe,SAAC2F,GACxBxD,QAAQC,IAAIuD,GACZmF,EAAY,GAAD,mBAAKV,GAAL,CAAezE,KAC1BkE,EAAa,CACXzE,KAAMO,EAAKlD,IACXqH,QAASnE,EAAKmE,aAIlBrO,EAAOuE,GAAG,cAAc,SAAC2F,GACvBxD,QAAQC,IAAIuD,GACZmF,EAAY,GAAD,mBAAKV,GAAL,CAAezE,KAC1BkE,EAAa,CACXzE,KAAMO,EAAKlD,IACXqH,QAASnE,EAAKmE,SACb,CAAEE,YAAY,OAGnBvO,EAAOuE,GAAG,gBAAgB,SAACoL,GACzBjJ,QAAQC,IAAIgJ,GACZN,EAAY,GAAD,mBAAKV,GAAL,CAAegB,KAC1BvB,EAAa,CACXzE,KAAMgG,EAAY3I,IAClBqH,QAASsB,EAAYtB,SACpB,CAAEC,cAAc,OAGd,WACLtO,EAAOwE,IAAI,SACXxE,EAAOwE,IAAI,gBACXxE,EAAOwE,IAAI,cACXxE,EAAOwE,IAAI,eACXiL,EAAY9D,oBAAoB,WAAY+D,MAE7C,CAAC1P,EAAQ2O,IAGV,qBAAK5J,UAAU,WAAf,SACE,cAAC,EAAD,CAAgB/E,OAAQA,EAAxB,SACE,qBAAK+E,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,kBACA,qBAAKA,UAAU,OAAf,uBAEF,sBAAKA,UAAU,kBAAf,UACE,cAACyI,EAAD,CAAaC,MAAOA,IACpB,qBAAK1I,UAAU,WAAf,SACE,cAAC,EAAD,CAAY/E,OAAQA,MAEtB,qBAAK+E,UAAU,OAAON,GAAG,YAE3B,sBAAKM,UAAU,kBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,uBAAOsC,KAAK,OAAO5C,GAAG,cAAc6C,YAAY,qBAElD,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,mB,QCxDDsI,MAzDf,WACE,MAA4BxP,mBAAS,MAArC,mBAAOJ,EAAP,KAAe6P,EAAf,KACM3K,EAAU4K,cAyChB,OAvCA3L,qBAAU,WAGR,OAFA0B,aAAakK,QAEN,WACLlK,aAAakK,WAEd,IAEH5L,qBAAU,WAER,IAAI6L,EAEFA,EAD+B,cAA7B3K,OAAOC,SAAS2K,SACZ,iBAAa5K,OAAOC,SAAS2K,SAA7B,SAEA,gBAAY5K,OAAOC,SAAS2K,SAA5B,KAER,IAAMC,EAAYC,YAAGH,EAAQ,CAC3BI,WAAY,CAAC,YAAa,WAC1BC,SAAS,EACTC,QAAQ,IAcV,OAPAJ,EAAU3L,GAAG,iBAJK,WAChB2L,EAAUC,GAAGI,KAAKH,WAAa,CAAC,UAAW,gBAI7CF,EAAU3L,GAAG,SAAS,SAACiM,GACrB9J,QAAQC,IAAI6J,MAEdX,EAAUK,GAGH,WACLA,EAAUO,qBACVP,EAAUQ,WAEX,CAACb,IAGF,cAAC,IAAD,UACE,qBAAK9K,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8B,KAAK,IAAI8J,OAAK,EAACC,OAAQ,SAACC,GAAD,OAAY,cAAC,EAAD,aAAM7Q,OAAQA,EAAQkF,QAASA,GAAa2L,OACtF,cAAC,IAAD,CAAOhK,KAAK,eAAe+J,OAAQ,SAACC,GAAD,OAAY,cAAC,EAAD,aAAa7Q,OAAQA,EAAQkF,QAASA,GAAa2L,OAClG,cAAC,IAAD,CAAOhK,KAAK,aAAa+J,OAAQ,SAACC,GAAD,OAAY,cAAC,EAAD,aAAW7Q,OAAQA,EAAQkF,QAASA,GAAa2L,OAC9F,cAAC,IAAD,CAAOhK,KAAK,iBAAiB+J,OAAQ,SAACC,GAAD,OAAY,cAAC,EAAD,aAAe7Q,OAAQA,EAAQkF,QAASA,GAAa2L,OACtG,cAAC,IAAD,CAAOhK,KAAK,QAAQ+J,OAAQ,SAACC,GAAD,OAAY,cAAC,EAAD,aAAM7Q,OAAQA,EAAQkF,QAASA,GAAa2L,eClD/EC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFrL,SAASC,eAAe,SAM1B0K,K","file":"static/js/main.d7ed23cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inkee-logo.b7363c11.png\";","import React, { useContext, useRef, useState } from 'react';\n\nconst CanvasContext = React.createContext();\n\nexport const CanvasProvider = ({ children, socket = null }) => {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [canvasEmpty, setCanvasEmpty] = useState(true);\n  const [currentState, setCurrentState] = useState({\n    x: 0,\n    y: 0,\n    color: 'black',\n    lineThickness: 5,\n  });\n\n  const prepareCanvas = () => {\n    const canvas = canvasRef.current;\n    canvas.style.width ='100%';\n    canvas.style.height='100%';\n    canvas.width  = canvas.offsetWidth * 2;\n    canvas.height = canvas.offsetHeight * 2;\n    \n    const context = canvas.getContext('2d');\n    context.scale(2, 2);\n    context.lineCap = 'round';\n    context.strokeStyle = 'black';\n    context.lineWidth = 5;\n    contextRef.current = context;\n    renderSplashPrompt();\n  };\n\n  const renderSplashPrompt = () => {\n    if (!socket) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      // context.font = '38px Chalkduster';\n      // context.fillText('Draw your avatar!', 50, 50);\n      const drawing = new Image(canvas.width, canvas.height);\n      drawing.crossOrigin = 'anonymous';\n      drawing.onload = () => {\n        context.drawImage(drawing, 5, 0);\n      };\n      drawing.src = 'https://i.ibb.co/GxP0h8k/output.png';\n    }\n  };\n\n  const startDrawing = ({ nativeEvent }) => {\n    if (canvasEmpty) {\n      clearCanvas(false);\n      setCanvasEmpty(false);\n    }\n    const { offsetX, offsetY } = nativeEvent;\n    setIsDrawing(true);\n    const tempState = currentState;\n    tempState.x = offsetX;\n    tempState.y = offsetY;\n    setCurrentState(tempState);\n  };\n\n  const finishDrawing = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    const { offsetX, offsetY } = nativeEvent;\n    draw(currentState.x, currentState.y, offsetX, offsetY,\n      currentState.lineThickness, currentState.color, true);\n    setIsDrawing(false);\n  };\n\n  const inDrawing = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    const { offsetX, offsetY } = nativeEvent;\n    draw(currentState.x, currentState.y, offsetX, offsetY,\n      currentState.lineThickness, currentState.color, true);\n    \n    const tempState = currentState;\n    tempState.x = offsetX;\n    tempState.y = offsetY;\n    setCurrentState(tempState);\n  };\n\n  const draw = (x0, y0, x1, y1, lineThickness, color, emit) => { //{ nativeEvent }) => {\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(x0, y0);\n    contextRef.current.lineTo(x1, y1);\n    contextRef.current.strokeStyle = color;\n    contextRef.current.lineWidth = lineThickness;\n    contextRef.current.stroke();\n\n    if (socket && emit) {\n      socket.emit('drawingEvent', {\n        x0: x0,\n        y0: y0,\n        x1: x1,\n        y1: y1,\n        lineThickness: lineThickness,\n        color: color,\n      });\n    }\n  };\n\n  const undoStroke = (emit) => {\n    contextRef.current.undo();\n\n    if (emit && socket) {\n      socket.emit('undo');\n    }\n  }\n\n  const redoStroke = (emit) => {\n    contextRef.current.undo();\n\n    if (emit && socket) {\n      socket.emit('redo');\n    }\n  }\n\n  const clearCanvas = (emit) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    setCanvasEmpty(true);\n    if (socket && emit) {\n      socket.emit('clearCanvas');\n    }\n  };\n\n  const changeColor = color => () => {\n    const tempState = currentState;\n    tempState.color = color;\n    setCurrentState(tempState);\n  };\n\n  const changeLineWidth = (lineWidthValue) => {\n    const tempState = currentState;\n    tempState.lineThickness = lineWidthValue;\n    setCurrentState(tempState);\n  };\n\n  return (\n    <CanvasContext.Provider\n      value={{\n        canvasRef,\n        prepareCanvas,\n        startDrawing,\n        inDrawing,\n        finishDrawing,\n        clearCanvas,\n        changeColor,\n        changeLineWidth,\n        draw,\n        undoStroke,\n        redoStroke,\n      }}\n    >\n      {children}\n    </CanvasContext.Provider>\n  );\n};\n\nexport const useCanvas = () => useContext(CanvasContext);","import React, { useEffect } from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport function GameCanvas({socket = null}) {\n  const {\n    canvasRef,\n    prepareCanvas,\n    startDrawing,\n    finishDrawing,\n    inDrawing,\n    draw,\n    clearCanvas,\n  } = useCanvas();\n\n  useEffect(() => {\n    prepareCanvas();\n  }, []);\n\n  // Socket game handlers.\n  useEffect(() => {\n    const onDrawingEvent = (drawingData) => {\n      draw(drawingData.x0, drawingData.y0, drawingData.x1, drawingData.y1,\n        drawingData.lineThickness, drawingData.color, false);\n    };\n\n    const onClearCanvas = () => {\n      clearCanvas(false);\n    };\n\n    if (socket) {\n      socket.on('drawingEvent', onDrawingEvent);\n      socket.on('clearCanvas', onClearCanvas);\n    }\n    \n    return () => {\n      if (socket) {\n        socket.off('drawingEvent', onDrawingEvent);\n        socket.off('clearCanvas', onClearCanvas);\n      }\n    };\n  }, [socket]);\n\n  return (\n    <canvas\n      id='canvas'\n      onMouseDown={startDrawing}\n      onMouseUp={finishDrawing}\n      onMouseMove={inDrawing}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default GameCanvas;","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const ClearCanvasButton = () => {\n  const { clearCanvas } = useCanvas();\n\n  return <button className=\"btn2\" onClick={clearCanvas}>Clear</button>;\n};","import './home.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport Logo from '../../assets/inkee-logo.png';\nimport GameCanvas from '../../components/GameCanvas';\nimport { Button } from 'react-bootstrap';\nimport { CanvasProvider } from '../../components/CanvasContext';\nimport { ClearCanvasButton } from '../../components/ClearCanvasButton';\n\nfunction Home({socket, history}) {\n  const query = new URLSearchParams(window.location.search);\n  const inviteCode = query.get('gameId');\n  const [avatar, setAvatar] = useState('');\n  const [defaultCanvas, setDefaultCanvas] = useState(null);\n\n  if (inviteCode !== null) {\n    localStorage.setItem('inviteCode', inviteCode);\n  }\n\n  useEffect(() => {\n    const startGameHandler = (inviteCode) => {\n      localStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/game',\n      });\n    };\n\n    const inviteCodeHandler = () => {\n      localStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby',\n      });\n    };\n\n    if (socket) {\n      socket.on('startGame', startGameHandler);\n      socket.on('inviteCode', inviteCodeHandler);\n    }\n\n    return () => {\n      if (socket) {\n        socket.off('startGame', startGameHandler);\n        socket.off('inviteCode', inviteCodeHandler);\n      }\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    setDefaultCanvas(document.getElementById('canvas'));\n  }, []);\n\n  const exportCanvasImage = () => {\n    const canvas = document.getElementById('canvas');\n    const uri = canvas.toDataURL('image/png');\n\n    const blank = document.createElement('canvas');\n    blank.width = canvas.width;\n    blank.height = canvas.height;\n\n    if (uri === defaultCanvas.toDataURL('image/png')\n      || uri === blank.toDataURL('image/png')) {\n      console.log('Draw a nice avatar!');\n      return false;\n    }\n\n    console.log(uri);\n    setAvatar(uri);\n    return true;\n  };\n\n  const handleHomeSubmit = (path, inviteCode = null) => {\n    const userNameInput = document.getElementById('username_input');\n    if (userNameInput.value !== '') {\n      localStorage.setItem('username', userNameInput.value);\n      console.log(userNameInput.value);\n    } else {\n      alert('Username cannot be empty!');\n      return;\n    }\n\n    if (!exportCanvasImage()) {\n      return;\n    }\n\n    if (inviteCode) {\n      socket.emit('joinRoom', {\n        userData: {\n          uid: localStorage.getItem('username'),\n          avatar: avatar,\n        },\n        inviteCode: localStorage.getItem('inviteCode'),\n      });\n    } else {\n      history.push({\n        pathname: path,\n      });\n    }\n  };\n\n  return (\n    <div className='root'>\n      <CanvasProvider>\n        <div className='purpleSplat'>\n          <div className='orangeSplat'>\n            <div className='header'>\n              <img className='logo' src={Logo} alt='inkee-logo'/>\n            </div>\n            <form>\n              <input className='username' id='username_input' type='text' placeholder=\"enter username...\"/>\n            </form>\n            <div align=\"center\">\n              <div className=\"homeDrawArea\">\n                <GameCanvas />\n              </div>\n              <div>\n                <ClearCanvasButton />\n              </div>\n              <div>\n                <Button onClick={() => {\n                  handleHomeSubmit('/joinLobby', localStorage.getItem('inviteCode')); \n                }} className='btn' variant=\"secondary\" size='lg'>join game</Button>\n              </div>\n              <div>\n                {\n                  !localStorage.getItem('inviteCode') &&\n                <Button onClick={() => {\n                  handleHomeSubmit('/createLobby');\n                }} className='btn' variant=\"outline-primary\" size='lg'>create game</Button>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </CanvasProvider>\n    </div>\n  );\n}\nexport default Home;","import React from 'react';\n// Assets\nimport Logo from '../../assets/inkee-logo.png';\n\nfunction CreateHeader() {\n  return (\n    <div className='header'>\n      <img className='logo' src={Logo} alt='inkee-logo' />\n    </div>\n  );\n} \n\nexport default CreateHeader;","import {React, useEffect, useState} from 'react';\nimport { Link, history } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport CreateHeader from '../../components/header/header';\nimport { CSVReader } from 'react-papaparse';\nimport './createLobby.css';\n\nfunction CreateLobby({socket, history}) {\n  // Game Settings\n  const [numRounds, setNumRounds] = useState(2);\n  const [roundLength, setRoundLength] = useState(30);\n  // Custom Words \n  const [textAreaContent, setTextAreaContent] = useState('');\n  const [csvContent, setCsvContent] = useState(null);\n  window.history.replaceState(null, 'Inkee Create Lobby', '/');\n\n  /**\n   * User sets round numbers\n   * @param {onChange} event \n   */\n  const handleNumRoundChange = (event) => {\n    setNumRounds(event.target.value);\n  };\n\n  /**\n   * User sets round lenght\n   * @param {onChange} event \n   */\n  const handleRoundLengthChange = (event) => {\n    setRoundLength(event.target.value);\n  };\n\n  /**\n   * User enters custom words in textArea\n   * @param {onChange} event \n   */\n  const handleTextAreaChange = (event) => {\n    let text = event.target.value;\n    setTextAreaContent(text); \n  };\n\n  /**\n   *  User drops csv file into CSVReader\n   * @param {onDrop} event \n   */\n  const handleOnDrop = (event) => {\n    let words = [];\n    for (let i=0; i<event.length; i++) {\n      let word = event[i].data;\n      if (!words.includes(word[0])) words.push(word[0]);\n    }\n    setCsvContent(words);\n  };\n\n  /**\n   * User removes csv file from CSVReader\n   * @param {onRemoveFile} event \n   */\n  const handleOnRemoveFile = (event) => {\n    setCsvContent(null);\n  };\n\n  /**\n   * Error\n   */\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  /**\n   *  Parses through text area content and csv content and adds them to the\n   * custom word list.\n   * @param {String} textAreaContent \n   * @param {List} csvContent \n   */\n  const parseCustomWords = (textAreaContent, csvContent) => {\n    console.log('Parse Custom Words');\n    let customWords = [];\n    if (textAreaContent.length > 0) {\n      let lines = textAreaContent.split(/\\r\\n|\\r|\\n/);\n      for (let i=0; i<lines.length; i++) {\n        let line = lines[i].split(/[ ,]+/).filter(Boolean);\n        for (let j = 0; j < line.length; j++) {\n          const word = line[j].toLowerCase();\n          if (!customWords.includes(word)) {\n            customWords.push(word);\n          }\n        }\n      }\n      console.log('textAreaContent Created');\n    }\n\n    if (csvContent != null) {\n      for (let i=0; i < csvContent.length; i++) {\n        let word = csvContent[i];\n        word = word.toLowerCase();\n        if (!customWords.includes(word)) {\n          customWords.push(word);\n        }\n      }\n      console.log('csvContent Created');\n    }\n\n    // delete after sprint reivew\n    if (customWords.length < 10 && customWords.length > 0) {\n      alert('Entered less than 10 custom words');\n    }\n\n    return customWords;\n  };\n\n  useEffect(() => {\n    socket.on('inviteCode', (inviteCode) => {\n      console.log(inviteCode);\n      // Join game room generated by server.\n      localStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby'\n      });\n    });\n\n    return () => {\n      socket.off('inviteCode');\n    };\n  }, [socket, history]);\n\n  /**\n   * Submit game configeration to backend\n   * @param {onClick} event \n   */\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Populate customWordList\n    let customWords = parseCustomWords(textAreaContent, csvContent);\n\n    // create gameConfiguration\n    // Use default word list if custom_words is empty\n    let gameConfiguration = {\n      num_rounds: numRounds,\n      round_length: roundLength,\n      custom_words: [],\n    };\n\n    // add custom words if possible\n    if (customWords.length > 0) {\n      gameConfiguration['custom_words'] = customWords;\n    }\n\n    //console.log(gameConfiguration)\n\n    // create userData\n    const userData = {\n      uid: localStorage.getItem('username'),\n      avatar: 'tempAvatar',\n    };\n    \n    socket.emit('createGame', {\n      gameConfiguration,\n      userData,\n    });\n    console.log('socket emit invite code');\n  };\n\n  return (\n    <div className='lobbyRoot'>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <select\n          id=\"numRounds\"\n          name=\"numRounds\"\n          onChange={handleNumRoundChange}\n          value={numRounds}\n          className=\"select\"\n        >\n          <option hidden={true}>choose rounds</option>\n          <option value=\"1rounds\">1</option>\n          <option value=\"2rounds\">2</option>\n          <option value=\"3rounds\">3</option>\n          <option value=\"4rounds\">4</option>\n          <option value=\"5rounds\">5</option>\n          <option value=\"6rounds\">6</option>\n          <option value=\"7rounds\">7</option>\n          <option value=\"8rounds\">8</option>\n          <option value=\"9rounds\">9</option>\n          <option value=\"10rounds\">10</option>\n        </select>\n        <select\n          id=\"roundLength\"\n          name=\"roundLength\"\n          onChange={handleRoundLengthChange}\n          value={roundLength}\n          className=\"select\"\n        >\n          <option hidden={true}>drawing time</option>\n          <option value=\"30seconds\">30</option>\n          <option value=\"40seconds\">40</option>\n          <option value=\"50seconds\">50</option>\n          <option value=\"60seconds\">60</option>\n          <option value=\"70seconds\">70</option>\n          <option value=\"80seconds\">80</option>\n          <option value=\"90seconds\">90</option>\n          <option value=\"120seconds\">120</option>\n          <option value=\"180seconds\">180</option>\n        </select>\n        <div className='wordlist'>\n          <textarea className='words'\n            placeholder='enter custom words...'\n            value={textAreaContent}\n            onChange={handleTextAreaChange}\n          >\n          </textarea>\n          <div className='csvReader'>\n            <CSVReader\n              onDrop={handleOnDrop}\n              onError={handleOnError}\n              addRemoveButton\n              onRemoveFile={handleOnRemoveFile}\n            >\n              <span>drop a csv file or upload</span>\n            </CSVReader>\n          </div>\n        </div> \n        <Button variant='primary' onClick={handleSubmit}>start game</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateLobby;","import React, { useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport CreateHeader from '../../components/header/header';\nimport './joinLobby.css';\n\nfunction JoinLobby({socket, history}) {\n  window.history.replaceState(null, 'Inkee Join Lobby', '/');\n  useEffect(() => {\n    const startGameHandler = (inviteCode) => {\n      localStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/game',\n      });\n    };\n\n    const prestartLobbyHandler = (inviteCode) => {\n      localStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby',\n      });\n    };\n\n    socket.on('startGame', startGameHandler);\n    socket.on('inviteCode', prestartLobbyHandler);\n\n    return () => {\n      socket.off('startGame', startGameHandler);\n      socket.off('inviteCode', prestartLobbyHandler);\n    };\n  }, [socket, history]);\n\n  const handleSubmit = (inviteCode = null, joinById) => {\n    const userData = {\n      userData: {\n        uid: localStorage.getItem('username'),\n        avatar: 'tempAvatar',\n      },\n      inviteCode: inviteCode,\n    };\n\n    if (joinById && inviteCode === '') {\n      alert('Game ID text box is empty!');\n    } else if (joinById && inviteCode !== '') {\n      userData['inviteCode'] = inviteCode;\n      socket.emit('joinRoom', userData);\n    } else if (!joinById) {\n      socket.emit('joinRandomRoom', userData);\n    }\n  };\n\n  return (\n    <div className='root'>\n      <div className='greenSplat'>\n        <div className='orangeSplatTwo'>\n          <CreateHeader/>\n          <form className='form-group'>\n            <input id='id_input' className='username' type=\"text\" placeholder=\"enter game ID...\"/><br />\n            <Button variant='primary' onClick={() => {\n              handleSubmit(document.getElementById('id_input').value, true);\n            }}>join with ID</Button>\n          </form>\n          <Button variant='primary' onClick={() => {\n            handleSubmit(document.getElementById('id_input').value, false);\n          }}>join random game</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default JoinLobby;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './prestartLobby.css';\nimport {\n  EmailShareButton,\n  FacebookMessengerShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  WhatsappShareButton\n} from 'react-share';\nimport {\n  EmailIcon,\n  FacebookMessengerIcon,\n  TelegramIcon,\n  TumblrIcon,\n  WhatsappIcon\n} from 'react-share';\n\nfunction PrestartLobby({socket, history}) {\n  const [inviteCode, setInviteCode] = useState('');\n  const [inviteCodeURL, setInviteCodeURL] = useState(window.location.origin);\n  const [users, setUsers] = useState([]);\n  const [settings, setSettings] = useState({});\n  window.history.replaceState(null, 'Inkee Prestart Lobby',\n    `/${localStorage.getItem('inviteCode')}`);\n\n  // Copy button setup.\n  useEffect(() => {\n    const copyBtn = document.querySelector('#copy.copyBtn');\n    const handleClick = (e) => {\n      e.preventDefault();\n      document.querySelector('#gameLink').select();\n      document.execCommand('copy');\n    };\n\n    copyBtn.addEventListener('click', handleClick);\n\n    return () => {\n      copyBtn.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  \n  // User routines.\n  useEffect(() => {\n    const userListener = (userToAdd) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers, userToAdd];\n        return newUsers;\n      });\n    };\n    \n    const deleteUser = (userId) => {\n      setUsers((prevUsers) => {\n        const newUsers = prevUsers.filter((user) => user.uid !== userId);\n        return newUsers;\n      });\n    };\n  \n    socket.on('newUser', userListener);\n    socket.on('disconnection', deleteUser);\n    socket.emit('getPlayers');\n\n    return () => {\n      socket.off('newUser', userListener);\n      socket.off('disconnection', deleteUser);\n    };\n  }, [socket]);\n\n  // Setting routines.\n  useEffect(() => {\n    const settingListener = (settingUpdate) => {\n      setSettings((prevSettings) => {\n        const key = settingUpdate.key;\n        const value = settingUpdate.value;\n\n        prevSettings[key] = value;\n        return prevSettings;\n      });\n    };\n\n    const populateSettings = (settingsData) => {\n      setSettings(settingsData.settings);\n    };\n\n    socket.on('settingUpdate', settingListener);\n    socket.on('loadSettings', populateSettings);\n    socket.emit('getSettings');\n\n    return () => {\n      socket.off('settingUpdate', settingListener);\n      socket.off('loadSettings', populateSettings);\n    };\n  }, [socket]);\n\n  // Start-game routines.\n  useEffect(() => {\n    const startGame = () => {\n      history.push({\n        pathname: '/game',\n      });\n    };\n    socket.on('startGame', startGame);\n\n    return () => {\n      socket.off('startGame', startGame);\n    };\n  }, [socket, history]);\n\n  useEffect(() => {\n    setInviteCode(localStorage.getItem('inviteCode'));\n    setInviteCodeURL(inviteCodeURL + \"/\" + inviteCode);\n  }, [history]);\n\n  return (\n    <div className='prestartRoot'>\n      <div className=\"form\">\n        <p className='gameId'>game ID: {inviteCode}</p>\n        <div>\n          <input className=\"linkBox\" type=\"text\" id=\"gameLink\" \n            value={window.location.origin + '/' + inviteCode} readOnly>\n          </input>\n        </div>\n        <div className=\"shareContainer\">\n          <button className=\"copyBtn\" type=\"button\" id=\"copy\">Copy Link</button>\n          <div className=\"shareBtn\">\n            <EmailShareButton\n              url={inviteCodeURL}\n              quote={'Join my Inkee.io game!'}\n            >\n              <EmailIcon size={43} />\n            </EmailShareButton>\n            <TwitterShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <TumblrIcon size={43}  />\n            </TwitterShareButton>\n            <FacebookMessengerShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <FacebookMessengerIcon size={43} />\n            </FacebookMessengerShareButton>\n            <TelegramShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <TelegramIcon size={43} />\n            </TelegramShareButton>\n            <WhatsappShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <WhatsappIcon size={43} />\n            </WhatsappShareButton>\n          </div>\n        </div>\n        <Button onClick={() => {\n          socket.emit('startGame');\n        }} variant='primary'>ready</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default PrestartLobby;","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const ColorPalette = () => {\n  const { changeColor } = useCanvas();\n\n  return (\n    <div>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('blue')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('red')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('green')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('yellow')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('pink')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('orange')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('purple')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('brown')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('black')}></button>\n    </div>\n  );\n};","import { React } from 'react';\n\nexport function UserProfile({users = []}) {\n  const listItems = users.map((user) =>\n    <div className=\"userProfile\" key={user.uid}>\n      <div>\n        <b>{user.uid}</b>\n      </div>\n      <div>\n        Score: {user.score}\n      </div>\n    </div>);\n\n  return (\n    <div className=\"profiles\">\n      {listItems}\n    </div>\n  );\n}\n\nexport default UserProfile;","import React from 'react';\nimport { useState } from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const StrokeThickness = () => {\n  const { changeLineWidth } = useCanvas();\n\n  return (\n    <div>\n      <input id=\"typeinp\"\n        type=\"range\"\n        min=\"1\"\n        max=\"15\"\n        defaultValue=\"5\"\n        step=\"1\"\n        onChange={(event) => {\n          let slider = (parseInt(event.target.value));\n          changeLineWidth(slider);\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n//Style\nimport './game.css';\n// Assets\nimport GameCanvas from '../../components/GameCanvas';\nimport { CanvasProvider } from '../../components/CanvasContext';\nimport { ClearCanvasButton } from '../../components/ClearCanvasButton';\nimport { ColorPalette } from '../../components/ColorPalette';\nimport { UserProfile } from '../../components/UserProfile';\nimport { StrokeThickness } from '../../components/StrokeThickness';\n\nfunction Game({socket, history}) {\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  window.history.replaceState(null, 'Inkee',\n    `/${localStorage.getItem('inviteCode')}`);\n\n  /* Load player routine */\n  useEffect(() => {\n    const loadPlayers = (users) => {\n      setUsers(users);\n    };\n\n    socket.on('getPlayers', loadPlayers);\n  \n    const loadNewPlayer = (userData) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers, userData];\n        return newUsers;\n      });\n    };\n\n    socket.on('newPlayer', loadNewPlayer);\n\n    const disconnectPlayer = (userId) => {\n      setUsers((prevUsers) => {\n        const newUsers = prevUsers.filter((user) => user.uid !== userId);\n        return newUsers;\n      });\n    };\n\n    socket.on('disconnection', disconnectPlayer);\n\n    socket.emit('getPlayers');\n\n    return () => {\n      socket.off('getPlayers', loadPlayers);\n      socket.off('newPlayer', loadNewPlayer);\n      socket.off('disconnection', disconnectPlayer);\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    const sendMessage = document.querySelector('#sendMessage');\n    const keyPressFunc = (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        const message = sendMessage.value;\n        sendMessage.value = '';\n        socket.emit('chatMessage', { message });\n        console.log(message);\n      }\n    };\n    sendMessage.addEventListener('keypress', keyPressFunc);\n\n    socket.on('chatMessage', (data) => {\n      console.log(data);\n      setMessages([...messages, data]);\n      writeMessage({\n        name: data.uid,\n        message: data.message\n      });\n    });\n\n    socket.on('closeGuess', (data) => {\n      console.log(data);\n      setMessages([...messages, data]);\n      writeMessage({\n        name: data.uid,\n        message: data.message,\n      }, { closeGuess: true });\n    });\n\n    socket.on('correctGuess', (messageData) => {\n      console.log(messageData);\n      setMessages([...messages, messageData]);\n      writeMessage({\n        name: messageData.uid,\n        message: messageData.message,\n      }, { correctGuess: true });\n    });\n\n    return () => {\n      socket.off('ERROR');\n      socket.off('correctGuess');\n      socket.off('closeGuess');\n      socket.off('chatMessage');\n      sendMessage.removeEventListener('keypress', keyPressFunc);\n    };\n  }, [socket, messages]);\n\n  return (\n    <div className='gameRoot'>\n      <CanvasProvider socket={socket}>\n        <div className='purpleSplatTwo'>\n          <div className='limeSplat'>\n            <div className='inkeeLogo'>\n              <div className=\"topContainer\" >\n                <div className=\"word\" >word</div>\n                <div className=\"time\" > 3:19 </div>\n              </div>\n              <div className=\"middleContainer\">\n                <UserProfile users={users}/>\n                <div className=\"drawArea\">\n                  <GameCanvas socket={socket}/>\n                </div>\n                <div className=\"chat\" id='chat'></div>\n              </div>\n              <div className=\"bottomContainer\">\n                <div className=\"sendMessage\">\n                  <input type='text' id='sendMessage' placeholder=\"enter guess...\"/>\n                </div>\n                <ClearCanvasButton/>\n                <StrokeThickness />\n                <ColorPalette/>\n              </div>\n            </div>\n          </div>\n        \n        </div>\n      </CanvasProvider>\n    </div>\n  );\n}\n\nconst writeMessage = ({ name = '', message}, {correctGuess = false, closeGuess = false} = {}) => {\n  const p = document.createElement('p');\n  const chatBox = document.createTextNode(`${message}`);\n  const messages = document.getElementById('chat');\n  if (name !== '') {\n    const span = document.createElement('span');\n    span.textContent = `${name}: `;\n    span.classList.add('fw-bold');\n    p.append(span);\n  }\n  p.classList.add('p-2', 'mb-0');\n  p.append(chatBox);\n  if (closeGuess) {\n    p.classList.add('closeAnswer');\n  }\n\n  if (correctGuess) {\n    p.classList.add('correctAnswer');\n  }\n\n  messages.appendChild(p);\n  messages.scrollTop = messages.scrollHeight;\n};\n\nexport default Game;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './pages/home/home';\nimport CreateLobby from './pages/createLobby/createLobby';\nimport JoinLobby from './pages/joinLobby/joinLobby';\nimport PrestartLobby from './pages/prestartLobby/prestartLobby';\nimport Game from './pages/game/game';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [socket, setSocket] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    localStorage.clear();\n\n    return () => {\n      localStorage.clear();\n    };\n  }, []);\n\n  useEffect(() => {\n    // Initialize Socket connection.\n    let domain;\n    if (window.location.hostname === 'localhost') {\n      domain = `http://${window.location.hostname}:8080`;\n    } else {\n      domain = `wss://${window.location.hostname}/`;\n    }\n    const newSocket = io(domain, {\n      transports: ['websocket', 'polling'],\n      upgrade: true,\n      secure: true,\n    });\n    \n    const reconnect = () => {\n      newSocket.io.opts.transports = ['polling', 'websocket'];\n    };\n\n    newSocket.on('connect_error', reconnect);\n    newSocket.on('ERROR', (msg) => {\n      console.log(msg);\n    });\n    setSocket(newSocket);\n\n    // Clean-up routine for socket.\n    return () => {\n      newSocket.removeAllListeners();\n      newSocket.close();\n    };\n  }, [setSocket]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/' exact render={(props) => (<Home socket={socket} history={history} {...props} />)}/>\n          <Route path='/createLobby' render={(props) => (<CreateLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/joinLobby' render={(props) => (<JoinLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/prestartLobby' render={(props) => (<PrestartLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/game' render={(props) => (<Game socket={socket} history={history} {...props} />)}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}