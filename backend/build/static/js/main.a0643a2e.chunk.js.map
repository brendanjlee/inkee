{"version":3,"sources":["assets/inkee-logo.png","components/CanvasContext.js","components/GameCanvas.js","components/ClearCanvasButton.js","components/UndoStroke.js","components/RedoStrokeButton.js","assets/buttonClick.mp3","pages/home/home.js","pages/createLobby/createLobby.js","components/header/header.js","pages/joinLobby/joinLobby.js","components/UserProfile.js","pages/prestartLobby/prestartLobby.js","components/ColorPalette.js","components/StrokeThickness.js","components/WordSelector.js","pages/game/game.js","pages/finalScores/finalScores.js","assets/vanille-fraise.mp3","components/PlaySound.js","App.js","reportWebVitals.js","index.js"],"names":["CanvasContext","React","createContext","CanvasProvider","children","socket","canvasRef","useRef","contextRef","undoList","redoList","useState","isDrawing","setIsDrawing","canvasEmpty","setCanvasEmpty","x","y","color","lineThickness","currentState","setCurrentState","renderSplashPrompt","canvas","current","context","getContext","drawing","Image","width","height","crossOrigin","onload","drawImage","src","draw","x0","y0","x1","y1","emit","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","saveCanvasState","list","keep_redo","console","log","push","document","getElementById","toDataURL","restoreCanvasState","pop","length","restore_state","clearRect","clearCanvas","changed","Provider","value","prepareCanvas","style","offsetWidth","offsetHeight","scale","lineCap","startDrawing","nativeEvent","offsetX","offsetY","tempState","inDrawing","finishDrawing","changeColor","changeLineWidth","lineWidthValue","undo","redo","useCanvas","useContext","GameCanvas","isDrawer","useEffect","onDrawingEvent","drawingData","onClearCanvas","handleUndo","handleRedo","on","off","id","onMouseDown","undefined","onMouseUp","onMouseMove","ref","ClearCanvasButton","className","onClick","UndoStrokeButton","RedoStrokeButton","Home","history","inviteCode","URLSearchParams","window","location","search","get","sessionStorage","setItem","clear","startGameHandler","pathname","inviteCodeHandler","exportCanvasImage","uri","alert","handleHomeSubmit","path","ButtonClick","Audio","Sound","play","userNameInput","userData","uid","getItem","avatar","Logo","alt","type","placeholder","maxLength","align","Button","variant","size","CreateLobby","numRounds","setNumRounds","roundLength","setRoundLength","textAreaContent","setTextAreaContent","usingCustomWords","setUsingCustomWords","isPrivate","setIsPrivate","replaceState","handleSubmit","event","preventDefault","gameConfiguration","customWords","customWordsOnly","custom_words","split","onSubmit","name","onChange","target","text","CreateHeader","JoinLobby","prestartLobbyHandler","joinById","UserProfile","users","isPrestartLobby","isFinalScreen","currentUser","isAdmin","listItems","map","user","score","PrestartLobby","setInviteCode","origin","inviteCodeURL","setInviteCodeURL","setUsers","copyBtn","querySelector","handleClick","e","gameLink","navigator","clipboard","writeText","addEventListener","removeEventListener","renderUserAvatar","userCanvas","image","loadPlayers","renderAvatars","loadNewPlayer","prevUsers","disconnectPlayer","userId","filter","handleDisconnectPlayer","startGame","readOnly","LinkedinShareButton","url","quote","LinkedinIcon","TwitterShareButton","TumblrIcon","FacebookMessengerShareButton","FacebookMessengerIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","WhatsappIcon","ColorPalette","StrokeThickness","min","max","defaultValue","step","slider","parseInt","WordSelector","words","listWords","word","writeMessage","message","correctGuess","closeGuess","guessedMessage","serverMessage","p","createElement","chatBox","createTextNode","messages","span","textContent","classList","add","append","appendChild","scrollTop","scrollHeight","Game","setMessages","setIsDrawer","choosingWords","setChoosingWords","setWords","handleWordChoices","sendMessage","keyPressFunc","key","chatMessageHandler","data","closeGuessHandler","correctGuessHandler","messageData","timerHandler","timerValue","innerHTML","userCorrectGuessHandler","handleSelectedDrawing","guessedMessageHandler","handleWord","handleWordToGuess","hiddenWord","join","replace","handleEndRound","handleDrawingTeamMessage","drawingTeam","includes","wordStr","msg","scoreUpdateHandler","handleEndGame","userRanks","state","handleGameData","gameData","currentHint","FinalScores","PlaySound","isPlaying","setIsPlaying","autoLoad","Music","playStatus","status","PLAYING","STOPPED","playFromPosition","loop","App","setSocket","useHistory","domain","hostname","newSocket","io","transports","upgrade","secure","opts","removeAllListeners","close","exact","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a0643a2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inkee-logo.b7363c11.png\";","import React, { useContext, useRef, useState } from 'react';\nconst CanvasContext = React.createContext();\n\nexport const CanvasProvider = ({ children, socket = null }) => {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const undoList = useRef([]);\n  const redoList = useRef([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [canvasEmpty, setCanvasEmpty] = useState(true);\n  const [currentState, setCurrentState] = useState({\n    x: 0,\n    y: 0,\n    color: 'black',\n    lineThickness: 5,\n  });\n  \n  \n  const prepareCanvas = () => {\n    const canvas = canvasRef.current;\n    canvas.style.width ='100%';\n    canvas.style.height='100%';\n    canvas.width  = canvas.offsetWidth * 2;\n    canvas.height = canvas.offsetHeight * 2;\n    \n    const context = canvas.getContext('2d');\n    context.scale(2, 2);\n    context.lineCap = 'round';\n    context.strokeStyle = 'black';\n    context.lineWidth = 5;\n    contextRef.current = context;\n    renderSplashPrompt();\n    document.getElementById('canvas').changed = false;\n  };\n\n  const renderSplashPrompt = () => {\n    if (!socket) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      const drawing = new Image(canvas.width, canvas.height);\n      drawing.crossOrigin = 'anonymous';\n      drawing.onload = () => {\n        context.drawImage(drawing, 0, 0, canvas.width / 2, canvas.height / 2);\n      };\n      drawing.src = 'https://i.imgur.com/XhUhmR7.png';\n    }\n  };\n\n  const startDrawing = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent;\n    if (!socket && canvasEmpty) {\n      clearCanvas(false);\n      setCanvasEmpty(false);\n    }\n\n    setIsDrawing(true);\n    document.getElementById('canvas').changed = true;\n    const tempState = currentState;\n    tempState.x = offsetX;\n    tempState.y = offsetY;\n    setCurrentState(tempState);\n    saveCanvasState();\n    \n    if (socket) {\n      socket.emit('saveCanvasState');\n    }\n  };\n\n  const finishDrawing = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    const { offsetX, offsetY } = nativeEvent;\n    draw(currentState.x, currentState.y, offsetX, offsetY,\n      currentState.lineThickness, currentState.color, true);\n    setIsDrawing(false);\n  };\n\n  const inDrawing = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    const { offsetX, offsetY } = nativeEvent;\n    draw(currentState.x, currentState.y, offsetX, offsetY,\n      currentState.lineThickness, currentState.color, true);\n    \n    const tempState = currentState;\n    tempState.x = offsetX;\n    tempState.y = offsetY;\n    setCurrentState(tempState);\n  };\n\n  const draw = (x0, y0, x1, y1, lineThickness, color, emit) => {\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(x0, y0);\n    contextRef.current.lineTo(x1, y1);\n    contextRef.current.strokeStyle = color;\n    contextRef.current.lineWidth = lineThickness;\n    contextRef.current.stroke();\n    contextRef.current.closePath();\n\n    if (socket && emit) {\n      socket.emit('drawingEvent', {\n        x0: x0,\n        y0: y0,\n        x1: x1,\n        y1: y1,\n        lineThickness: lineThickness,\n        color: color,\n      });\n    }\n  };\n\n  // Saves the current state of canvas\n  const saveCanvasState = (list, keep_redo) => {\n    console.log(undoList.current);\n    keep_redo = keep_redo || false;\n    if (!keep_redo) {\n      redoList.current = [];\n    }\n    (list || undoList.current).push(document.getElementById('canvas').toDataURL());\n    console.log(undoList);\n  };\n\n  // Restore the canvas for redo or undo\n  const restoreCanvasState = (pop, push) => {\n    if (pop.length) {\n      saveCanvasState(push, true);\n      let restore_state = pop.pop();\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      let drawing = new Image(canvas.width, canvas.height);\n      drawing.src = restore_state;\n      drawing.onload = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.drawImage(drawing, 0, 0, canvas.width / 2, canvas.height / 2);\n      };\n    }\n  };\n\n  const undo = (emit) => {\n    console.log('undo');\n    restoreCanvasState(undoList.current, redoList.current);\n\n    if (emit && socket) {\n      socket.emit('undo');\n    }\n  };\n\n  const redo = (emit) => {\n    console.log('redo');\n    restoreCanvasState(redoList.current, undoList.current);\n\n    if (emit && socket) {\n      socket.emit('redo');\n    }\n  };\n\n  const clearCanvas = (emit) => {\n    console.log('clearCanvas');\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    setCanvasEmpty(true);\n    document.getElementById('canvas').changed = false;\n\n    undoList.current = [];\n    redoList.current = [];\n\n    if (socket && emit) {\n      socket.emit('clearCanvas');\n    }\n  };\n\n  const changeColor = color => () => {\n    const tempState = currentState;\n    tempState.color = color;\n    setCurrentState(tempState);\n  };\n\n  const changeLineWidth = (lineWidthValue) => {\n    const tempState = currentState;\n    tempState.lineThickness = lineWidthValue;\n    setCurrentState(tempState);\n  };\n\n  return (\n    <CanvasContext.Provider\n      value={{\n        canvasRef,\n        prepareCanvas,\n        startDrawing,\n        inDrawing,\n        finishDrawing,\n        clearCanvas,\n        changeColor,\n        changeLineWidth,\n        draw,\n        undo,\n        redo,\n        saveCanvasState,\n      }}\n    >\n      {children}\n    </CanvasContext.Provider>\n  );\n};\n\nexport const useCanvas = () => useContext(CanvasContext);","import React, { useEffect } from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport function GameCanvas({socket = null, isDrawer = true}) {\n  const {\n    canvasRef,\n    prepareCanvas,\n    startDrawing,\n    finishDrawing,\n    inDrawing,\n    draw,\n    clearCanvas,\n    redo,\n    undo,\n    saveCanvasState,\n  } = useCanvas();\n\n  useEffect(() => {\n    prepareCanvas();\n  }, []);\n\n  // Socket game handlers.\n  useEffect(() => {\n    const onDrawingEvent = (drawingData) => {\n      draw(drawingData.x0, drawingData.y0, drawingData.x1, drawingData.y1,\n        drawingData.lineThickness, drawingData.color, false);\n    };\n\n    const onClearCanvas = () => {\n      clearCanvas(false);\n    };\n\n    const handleUndo = () => {\n      undo(false);\n    };\n\n    const handleRedo = () => {\n      console.log('redo');\n      redo(false);\n    };\n\n    if (socket) {\n      socket.on('drawingEvent', onDrawingEvent);\n      socket.on('clearCanvas', onClearCanvas);\n      socket.on('undo', handleUndo);\n      socket.on('redo', handleRedo);\n      socket.on('saveCanvasState', saveCanvasState);\n    }\n    \n    return () => {\n      if (socket) {\n        socket.off('drawingEvent', onDrawingEvent);\n        socket.off('clearCanvas', onClearCanvas);\n        socket.off('undo', handleUndo);\n        socket.off('redo', handleRedo);\n        socket.off('saveCanvasState', saveCanvasState);\n      }\n    };\n  }, [socket]);\n\n  return (\n    <canvas\n      id='canvas'\n      onMouseDown={isDrawer ? startDrawing : undefined}\n      onMouseUp={isDrawer ? finishDrawing : undefined}\n      onMouseMove={isDrawer ? inDrawing : undefined}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default GameCanvas;","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const ClearCanvasButton = () => {\n  const { clearCanvas } = useCanvas();\n\n  return <button className=\"btn2\" onClick={clearCanvas}>clear</button>;\n};","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const UndoStrokeButton = () => {\n  const { undo } = useCanvas();\n\n  return <button className='btn2' onClick={() => {\n    undo(true);\n  }}>undo</button>;\n};","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const RedoStrokeButton = () => {\n  const { redo } = useCanvas();\n\n  return <button className='btn2' onClick={() => {\n    redo(true);\n  }}>redo</button>;\n};","export default __webpack_public_path__ + \"static/media/buttonClick.ed011a82.mp3\";","import './home.css';\nimport React, { useEffect } from 'react';\nimport Logo from '../../assets/inkee-logo.png';\nimport GameCanvas from '../../components/GameCanvas';\nimport { Button } from 'react-bootstrap';\nimport { CanvasProvider } from '../../components/CanvasContext';\nimport { ClearCanvasButton } from '../../components/ClearCanvasButton';\nimport { UndoStrokeButton } from '../../components/UndoStroke';\nimport { RedoStrokeButton } from '../../components/RedoStrokeButton';\nimport Sound from '../../assets/buttonClick.mp3';\n\nfunction Home({socket, history}) {\n  const query = new URLSearchParams(window.location.search);\n  const inviteCode = query.get('gameId');\n\n  if (inviteCode !== null) {\n    sessionStorage.setItem('inviteCode', inviteCode);\n  }\n\n  useEffect(() => {\n    sessionStorage.clear();\n  }, []);\n\n  useEffect(() => {\n    const startGameHandler = (inviteCode) => {\n      sessionStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/game',\n      });\n    };\n\n    const inviteCodeHandler = () => {\n      sessionStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby',\n      });\n    };\n\n    if (socket) {\n      socket.on('startGame', startGameHandler);\n      socket.on('inviteCode', inviteCodeHandler);\n    }\n\n    return () => {\n      if (socket) {\n        socket.off('startGame', startGameHandler);\n        socket.off('inviteCode', inviteCodeHandler);\n      }\n    };\n  }, [socket]);\n\n\n  const exportCanvasImage = () => {\n    const canvas = document.getElementById('canvas');\n    const uri = canvas.toDataURL('image/png');\n\n    if (canvas.changed === false) {\n      console.log('You haven\\'t drawn an avatar! Drawing something nice!');\n      alert('You haven\\'t drawn an avatar! Drawing something nice!');\n      return false;\n    }\n\n    sessionStorage.setItem('avatar', uri);\n    return true;\n  };\n\n  const handleHomeSubmit = (path, inviteCode = null) => {\n    const ButtonClick = new Audio (Sound);\n    ButtonClick.play();\n    const userNameInput = document.getElementById('username_input');\n    if (userNameInput.value !== '') {\n      sessionStorage.setItem('username', userNameInput.value);\n      console.log(userNameInput.value);\n    } else {\n      alert('Username cannot be empty!');\n      return;\n    }\n\n    if (!exportCanvasImage()) {\n      return;\n    }\n\n    if (inviteCode) {\n      socket.emit('joinRoom', {\n        userData: {\n          uid: sessionStorage.getItem('username'),\n          avatar: sessionStorage.getItem('avatar'),\n        },\n        inviteCode: sessionStorage.getItem('inviteCode'),\n      });\n    } else {\n      history.push({\n        pathname: path,\n      });\n    }\n  };\n\n  return (\n    <div className='root'>\n      <CanvasProvider>\n        <div className='purpleSplat'>\n          <div className='orangeSplat'>\n            <div className='header'>\n              <img className='logo' src={Logo} alt='inkee-logo'/>\n            </div>\n            <form>\n              <input className='username' id='username_input' type='text' placeholder=\"enter username...\" maxLength={8}/>\n            </form>\n            <div align=\"center\">\n              <div className=\"homeDrawArea\">\n                <GameCanvas />\n              </div>\n              <div>\n                <RedoStrokeButton/>\n                <UndoStrokeButton />\n                <ClearCanvasButton />\n              </div>\n              <div>\n                <Button onClick={() => {\n                  handleHomeSubmit('/joinLobby', sessionStorage.getItem('inviteCode')); \n                }} className='btn' variant=\"secondary\" size='lg'>join game</Button>\n              </div>\n              <div>\n                {\n                  !sessionStorage.getItem('inviteCode') &&\n                <Button onClick={() => {\n                  handleHomeSubmit('/createLobby');\n                }} className='btn' variant=\"outline-primary\" size='lg'>create game</Button>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </CanvasProvider>\n    </div>\n  );\n}\nexport default Home;","import {React, useEffect, useState} from 'react';\nimport { Button } from 'react-bootstrap';\nimport './createLobby.css';\nimport Sound from '../../assets/buttonClick.mp3';\n\nfunction CreateLobby({socket, history}) {\n  // Game Settings\n  const [numRounds, setNumRounds] = useState(undefined);\n  const [roundLength, setRoundLength] = useState(undefined);\n  \n  // Custom Words \n  const [textAreaContent, setTextAreaContent] = useState('');\n  const [usingCustomWords, setUsingCustomWords] = useState(undefined);\n  const [isPrivate, setIsPrivate] = useState(undefined);\n  \n  window.history.replaceState(null, 'Inkee Create Lobby', '/');\n\n  /**\n   * User sets round numbers\n   * @param {onChange} event \n   */\n  const handleNumRoundChange = (event) => {\n    setNumRounds(event.target.value);\n  };\n\n  /**\n   * User sets round lenght\n   * @param {onChange} event \n   */\n  const handleRoundLengthChange = (event) => {\n    setRoundLength(event.target.value);\n  };\n\n  /**\n   * User enters custom words in textArea\n   * @param {onChange} event \n   */\n  const handleTextAreaChange = (event) => {\n    let text = event.target.value;\n    setTextAreaContent(text); \n  };\n\n  const handleCustomWordsCheckChange = (event) => {\n    setUsingCustomWords(event.target.value);\n  };\n\n  const handlePrivateGameChange = (event) => {\n    setIsPrivate(event.target.value);\n  };\n\n  useEffect(() => {\n    socket.on('inviteCode', (inviteCode) => {\n      console.log(inviteCode);\n      // Join game room generated by server.\n      sessionStorage.setItem('inviteCode', inviteCode);\n      sessionStorage.setItem('isAdmin', true);\n      history.push({\n        pathname: '/prestartLobby'\n      });\n    });\n\n    return () => {\n      socket.off('inviteCode');\n    };\n  }, [socket, history]);\n\n  /**\n   * Submit game configeration to backend\n   * @param {onClick} event \n   */\n  const handleSubmit = (event) => {\n    const ButtonClick = new Audio (Sound);\n    ButtonClick.play();\n    event.preventDefault();\n\n    // create gameConfiguration\n    // Use default word list if custom_words is empty\n    const gameConfiguration = {\n      numRounds: numRounds,\n      roundLength: roundLength,\n      isPrivate: isPrivate,\n      customWords: [],\n      customWordsOnly: usingCustomWords,\n    };\n\n    const custom_words = document.getElementById('custom_words').value.split(/[ ,]+/);\n    \n    if (usingCustomWords === 'yes') {\n      if (custom_words.length >= 10) {\n        gameConfiguration.customWords = custom_words; \n      } else {\n        alert('There must be at least 10 custom words!');\n        return;\n      }\n    } else if (custom_words.length > 0) {\n      gameConfiguration.customWords = custom_words; \n    }\n\n    // create userData\n    const userData = {\n      uid: sessionStorage.getItem('username'),\n      avatar: sessionStorage.getItem('avatar'),\n    };\n    \n    //console.log(userData.avatar);\n    socket.emit('createGame', {\n      gameConfiguration,\n      userData,\n    });\n    console.log('socket emit invite code');\n  };\n\n  return (\n    <div className='lobbyRoot'>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <select\n          id=\"numRounds\"\n          name=\"numRounds\"\n          onChange={handleNumRoundChange}\n          value={numRounds}\n          className=\"select\"\n        >\n          <option value={undefined}>choose rounds</option>\n          <option value={1}>1</option>\n          <option value={2}>2</option>\n          <option value={3}>3</option>\n          <option value={4}>4</option>\n          <option value={5}>5</option>\n          <option value={6}>6</option>\n          <option value={7}>7</option>\n          <option value={8}>8</option>\n          <option value={9}>9</option>\n          <option value={10}>10</option>\n        </select>\n        <select\n          id=\"roundLength\"\n          name=\"roundLength\"\n          onChange={handleRoundLengthChange}\n          value={roundLength}\n          className=\"select\"\n        >\n          <option value={undefined}>drawing time</option>\n          <option value={30}>30</option>\n          <option value={40}>40</option>\n          <option value={50}>50</option>\n          <option value={60}>60</option>\n          <option value={70}>70</option>\n          <option value={80}>80</option>\n          <option value={90}>90</option>\n          <option value={120}>120</option>\n          <option value={180}>180</option>\n        </select>\n        <select\n          id=\"privateGame\"\n          name=\"privateGame\"\n          onChange={handlePrivateGameChange}\n          value={isPrivate}\n          className=\"select\"\n        >\n          <option value={undefined}>private game</option>\n          <option value={true}>yes</option>\n          <option value={false}>no</option>\n        </select>\n        <select\n          id=\"exclusiveCustomWords\"\n          name=\"customWords\"\n          onChange={handleCustomWordsCheckChange}\n          value={usingCustomWords}\n          className=\"select\"\n        >\n          <option value={undefined}>use custom words only</option>\n          <option value={false}>no</option>\n          <option value={true}>yes</option>\n        </select>\n        <div className='wordlist'>\n          <textarea className='words'\n            id='custom_words'\n            placeholder='enter comma-separated custom words...'\n            value={textAreaContent}\n            onChange={handleTextAreaChange}\n          >\n          </textarea>\n        </div> \n        <Button variant='primary' onClick={handleSubmit}>start game</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateLobby;","import React from 'react';\n// Assets\nimport Logo from '../../assets/inkee-logo.png';\n\nfunction CreateHeader() {\n  return (\n    <div className='header'>\n      <img className='logo' src={Logo} alt='inkee-logo' />\n    </div>\n  );\n} \n\nexport default CreateHeader;","import React, { useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport CreateHeader from '../../components/header/header';\nimport './joinLobby.css';\nimport Sound from '../../assets/buttonClick.mp3';\n\nfunction JoinLobby({socket, history}) {\n  window.history.replaceState(null, 'Inkee Join Lobby', '/');\n  useEffect(() => {\n    const startGameHandler = (inviteCode) => {\n      sessionStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/game',\n      });\n    };\n\n    const prestartLobbyHandler = (inviteCode) => {\n      sessionStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby',\n      });\n    };\n\n    socket.on('startGame', startGameHandler);\n    socket.on('inviteCode', prestartLobbyHandler);\n\n    return () => {\n      socket.off('startGame', startGameHandler);\n      socket.off('inviteCode', prestartLobbyHandler);\n    };\n  }, [socket, history]);\n\n  const handleSubmit = (inviteCode = null, joinById) => {\n    const ButtonClick = new Audio (Sound);\n    ButtonClick.play();\n    const userData = {\n      userData: {\n        uid: sessionStorage.getItem('username'),\n        avatar: sessionStorage.getItem('avatar'),\n      },\n      inviteCode: inviteCode,\n    };\n\n    if (joinById && inviteCode === '') {\n      alert('Game ID text box is empty!');\n    } else if (joinById && inviteCode !== '') {\n      userData['inviteCode'] = inviteCode;\n      socket.emit('joinRoom', userData);\n    } else if (!joinById) {\n      socket.emit('joinRandomRoom', userData);\n    }\n  };\n\n  return (\n    <div className='root'>\n      <div className='greenSplat'>\n        <div className='orangeSplatTwo'>\n          <CreateHeader/>\n          <form className='form-group'>\n            <input id='id_input' className='username' type=\"text\" placeholder=\"enter game ID...\"/><br />\n            <Button variant='primary' onClick={() => {\n              handleSubmit(document.getElementById('id_input').value, true);\n            }}>join with ID</Button>\n          </form>\n          <Button variant='primary' onClick={() => {\n            handleSubmit(document.getElementById('id_input').value, false);\n          }}>join random game</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default JoinLobby;","import { React } from 'react';\n\nexport function UserProfile({users = [], isPrestartLobby, isFinalScreen, currentUser = null, isAdmin = false, socket = null}) {\n  let listItems = users.map((user) =>\n    <div className=\"userProfile\" key={user.uid}>\n      <canvas className='avatar' id={user.uid + '-avatar'}/>\n      <div className='userText'>\n        <div>\n          <b>{user.uid}</b>\n        </div>\n        <div>\n          Score: {user.score}\n        </div>\n      </div>\n    </div>);\n    \n  if (isPrestartLobby) {\n    listItems = users.map((user) =>\n      <div className=\"userProfile\" key={user.uid}>\n        <canvas className='avatar' id={user.uid + '-avatar'}/>\n        <div className='userText'>\n          <div>\n            <b>{user.uid}</b>\n          </div>\n        </div>\n        { \n          currentUser !== user.uid && isAdmin &&\n          <button className='removePlayer' onClick={() => {\n            socket.emit('disconnectPlayer', user.uid);\n          }}>X</button>\n        }\n      </div>);\n\n    return (\n      <div className=\"profilesTwo\">\n        {listItems}\n      </div>\n    );\n  } else if (isFinalScreen) {\n    listItems = users.map((user) =>\n      <div className=\"userProfileTwo\" key={user.uid}>\n        <canvas className='avatar' id={user.uid + '-avatar'}/>\n        <div className='userText'>\n          <div>\n            <b>{user.uid}</b>\n          </div>\n          <div>\n            Score: {user.score}\n          </div>\n        </div>\n      </div>);\n  }\n\n  return (\n    <div className=\"profiles\">\n      {listItems}\n    </div>\n  );\n}\n\nexport default UserProfile;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './prestartLobby.css';\nimport { UserProfile } from '../../components/UserProfile';\nimport {\n  LinkedinShareButton,\n  FacebookMessengerShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  WhatsappShareButton\n} from 'react-share';\nimport {\n  LinkedinIcon,\n  FacebookMessengerIcon,\n  TelegramIcon,\n  TumblrIcon,\n  WhatsappIcon\n} from 'react-share';\nimport Sound from '../../assets/buttonClick.mp3';\n\n\n\nfunction PrestartLobby({socket, history}) {\n  const [inviteCode, setInviteCode] = useState('');\n  const [inviteCodeURL, setInviteCodeURL] = useState(window.location.origin);\n  const [users, setUsers] = useState([]);\n\n  window.history.replaceState(null, 'Inkee Prestart Lobby',\n    `/${sessionStorage.getItem('inviteCode')}`);\n\n  // Copy button setup.\n  useEffect(() => {\n    const copyBtn = document.querySelector('#copy.copyBtn');\n    const handleClick = (e) => {\n      const ButtonClick = new Audio(Sound);\n      ButtonClick.play();\n\n      e.preventDefault();\n      const gameLink = document.getElementById('gameLink').value;\n      navigator.clipboard.writeText(gameLink);\n    };\n\n    copyBtn.addEventListener('click', handleClick);\n\n    return () => {\n      copyBtn.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  \n  // User routines.\n  useEffect(() => {\n    const renderUserAvatar = (user) => {\n      const userCanvas = document.getElementById(`${user.uid}-avatar`);\n      const context = userCanvas.getContext('2d');\n      const image = new Image();\n      image.onload = () => {\n        context.drawImage(image, 0, 0, userCanvas.width, userCanvas.height);\n      };\n      image.src = user.avatar;\n    };\n\n    const renderAvatars = (users) => {\n      users.map((user) => {\n        renderUserAvatar(user);\n      });\n    };\n\n    const loadPlayers = (users) => {\n      setUsers(users);\n      renderAvatars(users);\n    };\n\n    socket.on('getPlayers', loadPlayers);\n  \n    const loadNewPlayer = (userData) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers, userData];\n        return newUsers;\n      });\n      console.log(userData);\n      renderUserAvatar(userData);\n    };\n\n    socket.on('newPlayer', loadNewPlayer);\n\n    const disconnectPlayer = (userId) => {\n      setUsers((prevUsers) => {\n        const newUsers = prevUsers.filter((user) => user.uid !== userId);\n        return newUsers;\n      });\n    };\n\n    socket.on('disconnection', disconnectPlayer);\n\n    const handleDisconnectPlayer = () => {\n      sessionStorage.clear();\n      history.push({\n        pathname: '/',\n      });\n    };\n    socket.on('disconnectPlayer', handleDisconnectPlayer);\n\n    socket.emit('getPlayers');\n\n    return () => {\n      socket.off('getPlayers', loadPlayers);\n      socket.off('newPlayer', loadNewPlayer);\n      socket.off('disconnection', disconnectPlayer);\n      socket.off('disconnectPlayer', handleDisconnectPlayer);\n    };\n  }, [socket]);\n\n  // Start-game routines.\n  useEffect(() => {\n    const startGame = () => {\n      history.push({\n        pathname: '/game',\n      });\n    };\n    socket.on('startGame', startGame);\n\n    return () => {\n      socket.off('startGame', startGame);\n    };\n  }, [socket, history]);\n\n  useEffect(() => {\n    setInviteCode(sessionStorage.getItem('inviteCode'));\n    setInviteCodeURL(inviteCodeURL + '/' + inviteCode);\n  }, [history]);\n\n  return (\n    <div className='prestartRoot'>\n      <div className=\"form\">\n        <p className='gameId'>game ID: {inviteCode}</p>\n        <div>\n          <input className=\"linkBox\" type=\"text\" id=\"gameLink\" \n            value={window.location.origin + '/' + inviteCode} readOnly>\n          </input>\n        </div>\n        <div className=\"shareContainer\">\n          <button className=\"copyBtn\" type=\"button\" id=\"copy\">Copy Link</button>\n          <div className=\"shareBtn\">\n            <LinkedinShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}\n            >\n              <LinkedinIcon size={43} />\n            </LinkedinShareButton>\n            <TwitterShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <TumblrIcon size={43}  />\n            </TwitterShareButton>\n            <FacebookMessengerShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <FacebookMessengerIcon size={43} />\n            </FacebookMessengerShareButton>\n            <TelegramShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <TelegramIcon size={43} />\n            </TelegramShareButton>\n            <WhatsappShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <WhatsappIcon size={43} />\n            </WhatsappShareButton>\n          </div>\n        </div>\n        {\n          sessionStorage.getItem('isAdmin') &&\n          <Button onClick={() => {\n            const ButtonClick = new Audio (Sound);\n            ButtonClick.play();\n            socket.emit('startGame');\n          }} variant='primary'>ready</Button>\n        }\n        <UserProfile users={users}\n          isAdmin={sessionStorage.getItem('isAdmin')}\n          currentUser={sessionStorage.getItem('username')}\n          isPrestartLobby={true}\n          isFinalScreen={false}\n          socket={socket} />\n      </div>\n    </div>\n  );\n}\n\nexport default PrestartLobby;","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const ColorPalette = () => {\n  const { changeColor } = useCanvas();\n\n  return (\n    <div>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('blue')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('red')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('green')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('yellow')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('pink')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('orange')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('purple')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('brown')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('black')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('white')}></button>\n    </div>\n  );\n};","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const StrokeThickness = () => {\n  const { changeLineWidth } = useCanvas();\n\n  return (\n    <div>\n      <input className=\"slider\" id=\"typeinp\"\n        type=\"range\"\n        min=\"1\"\n        max=\"30\"\n        defaultValue=\"15\"\n        step=\"1\"\n        onChange={(event) => {\n          let slider = (parseInt(event.target.value));\n          changeLineWidth(slider);\n        }}\n      />\n    </div>\n  );\n};\n","import { React } from 'react';\n\nexport function WordSelector({words = null, socket = null}) {\n  const listWords = words.map((word) =>\n    <button className=\"wordButton\" key={word + '-selector'} onClick={() => {\n      socket.emit('chooseWord', word);\n    }}>\n      {word}\n    </button>\n  );\n\n  return (\n    <div className=\"wordSelector\">\n      <div>\n        {listWords}\n      </div>\n    </div>\n  );\n}\n\nexport default WordSelector;","import React, { useEffect, useState } from 'react';\n//Style\nimport './game.css';\n// Assets\nimport GameCanvas from '../../components/GameCanvas';\nimport { CanvasProvider } from '../../components/CanvasContext';\nimport { ClearCanvasButton } from '../../components/ClearCanvasButton';\nimport { UndoStrokeButton } from '../../components/UndoStroke';\nimport { RedoStrokeButton } from '../../components/RedoStrokeButton';\nimport { ColorPalette } from '../../components/ColorPalette';\nimport { UserProfile } from '../../components/UserProfile';\nimport { StrokeThickness } from '../../components/StrokeThickness';\nimport { WordSelector } from '../../components/WordSelector';\n\nfunction Game({socket, history}) {\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  \n  // Round specific states.\n  const [isDrawer, setIsDrawer] = useState(false);\n  const [choosingWords, setChoosingWords] = useState(false);\n  const [words, setWords] = useState([]);\n\n  window.history.replaceState(null, 'Inkee',\n    `/${sessionStorage.getItem('inviteCode')}`);\n\n  /* Load player routine */\n  useEffect(() => {\n    const renderUserAvatar = (user) => {\n      const userCanvas = document.getElementById(`${user.uid}-avatar`);\n      const context = userCanvas.getContext('2d');\n      const image = new Image();\n      image.onload = () => {\n        context.drawImage(image, 0, 0, userCanvas.width, userCanvas.height);\n      };\n      image.src = user.avatar;\n    };\n\n    const renderAvatars = (users) => {\n      users.map((user) => {\n        renderUserAvatar(user);\n      });\n    };\n\n    const loadPlayers = (users) => {\n      console.log(users);\n      setUsers(users);\n      renderAvatars(users);\n    };\n\n    socket.on('getPlayers', loadPlayers);\n  \n    const loadNewPlayer = (userData) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers, userData];\n        return newUsers;\n      });\n      console.log(userData);\n      renderUserAvatar(userData);\n    };\n\n    socket.on('newPlayer', loadNewPlayer);\n\n    const disconnectPlayer = (userId) => {\n      setUsers((prevUsers) => {\n        const newUsers = prevUsers.filter((user) => user.uid !== userId);\n        return newUsers;\n      });\n    };\n\n    socket.on('disconnection', disconnectPlayer);\n\n    socket.emit('getPlayers');\n\n    const handleWordChoices = (words) => {\n      console.log(words);\n      setWords(words);\n      setChoosingWords(true);\n    };\n\n    socket.on('chooseWord', handleWordChoices);\n\n    return () => {\n      socket.off('getPlayers', loadPlayers);\n      socket.off('newPlayer', loadNewPlayer);\n      socket.off('disconnection', disconnectPlayer);\n      socket.off('chooseWord', handleWordChoices);\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    const sendMessage = document.querySelector('#sendMessage');\n    const keyPressFunc = (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        const message = sendMessage.value;\n        sendMessage.value = '';\n        socket.emit('chatMessage', { message });\n        console.log(message);\n      }\n    };\n    sendMessage.addEventListener('keypress', keyPressFunc);\n\n    const chatMessageHandler = (data) => {\n      console.log(data);\n      setMessages([...messages, data]);\n      writeMessage({\n        name: data.uid,\n        message: data.message\n      });\n    };\n\n    socket.on('chatMessage', chatMessageHandler);\n\n    const closeGuessHandler = (data) => {\n      console.log(data);\n      setMessages([...messages, data]);\n      writeMessage({\n        name: data.uid,\n        message: data.message,\n      }, { closeGuess: true });\n    };\n\n    socket.on('closeGuess', closeGuessHandler);\n\n    const correctGuessHandler = (messageData) => {\n      console.log(messageData);\n      setMessages([...messages, messageData]);\n      writeMessage({\n        name: messageData.uid,\n        message: messageData.message,\n      }, { correctGuess: true });\n    };\n\n    socket.on('correctGuess', correctGuessHandler);\n\n    const timerHandler = (timerValue) => {\n      document.getElementById('timer').innerHTML = `&nbsp;&nbsp;${timerValue}&nbsp;&nbsp;`;\n    };\n\n    socket.on('timer', timerHandler);\n\n    const userCorrectGuessHandler = (messageData) => {\n      setMessages([...messages, messageData]);\n      writeMessage({\n        message: messageData.message,\n      }, { correctGuess: true });\n    };\n    socket.on('userCorrectGuess', userCorrectGuessHandler);\n\n    const handleSelectedDrawing = () => {\n      document.getElementById('word').innerHTML = 'Your teammate is picking the word!';\n    };\n  \n    socket.on('selectedDrawing', handleSelectedDrawing);\n\n    const guessedMessageHandler = (messageData) => {\n      setMessages([...messages, messageData]);\n      writeMessage({\n        name: messageData.uid,\n        message: messageData.message,\n      }, { guessedMessage: true });\n    };\n    socket.on('guessedMessage', guessedMessageHandler);\n\n    const handleWord = (word) => {\n      setIsDrawer(true);\n      setChoosingWords(false);\n      document.getElementById('word').innerHTML = word;\n    };\n\n    socket.on('word', handleWord);\n\n    const handleWordToGuess = (word) => {\n      let hiddenWord = word.join('&nbsp;');\n      hiddenWord = hiddenWord.replace(/\\s/g, '&nbsp;');\n\n      document.getElementById('word').innerHTML = hiddenWord;\n      console.log(hiddenWord);\n    };\n    socket.on('wordToGuess', handleWordToGuess);\n\n    const handleEndRound = () => {\n      setIsDrawer(false);\n      setChoosingWords(false);\n      setWords([]);\n    };\n    socket.on('endRound', handleEndRound);\n\n    const handleDrawingTeamMessage = (messageData) => {\n      console.log(messageData);\n      if (!messageData.drawingTeam.includes(sessionStorage.getItem('username'))) {\n        let wordStr ='Drawer is selecting word.';\n        if (messageData.drawingTeam.length > 1) {\n          wordStr = 'Drawers are selecting word.';\n        }\n\n        document.getElementById('word').innerHTML = wordStr;\n      }\n      setMessages([...messages, messageData.msg]);\n      writeMessage({\n        message: messageData.msg,\n      }, {serverMessage: true});\n    };\n\n    // On drawing and choosing alert\n    socket.on('drawingTeam', handleDrawingTeamMessage);\n    \n    const scoreUpdateHandler = () => {\n      socket.emit('getPlayers');\n    };\n\n    socket.on('scoreUpdate', scoreUpdateHandler);\n\n    const handleEndGame = (userRanks) => {\n      history.push({\n        pathname: '/finalScore',\n        state: {\n          data: userRanks,\n        }\n      });\n    };\n\n    socket.on('endGame', handleEndGame);\n\n    return () => {\n      socket.off('correctGuess', correctGuessHandler);\n      socket.off('word', handleWord);\n      socket.off('wordToGuess', handleWordToGuess);\n      socket.off('closeGuess', closeGuessHandler);\n      socket.off('chatMessage', chatMessageHandler);\n      socket.off('guessedMessage', guessedMessageHandler);\n      socket.off('timer', timerHandler);\n      socket.off('userCorrectGuess', userCorrectGuessHandler);\n      socket.off('scoreUpdate', scoreUpdateHandler);\n      socket.off('selectedDrawing', handleSelectedDrawing);\n      socket.off('endRound', handleEndRound);\n      socket.off('drawingTeam', handleDrawingTeamMessage);\n      socket.off('endGame', handleEndGame);\n      sendMessage.removeEventListener('keypress', keyPressFunc);\n    };\n  }, [socket, messages]);\n\n  useEffect(() => {\n    const handleGameData = (gameData) => {\n      const msg = gameData.message;\n      setMessages([...messages, msg]);\n      console.log(msg);\n      writeMessage({\n        message: msg,\n      }, {serverMessage: true});\n\n      const currentHint = gameData.currentHint;\n      let hiddenWord = currentHint.join('&nbsp;');\n      hiddenWord = hiddenWord.replace(/\\s/g, '&nbsp;');\n      document.getElementById('word').innerHTML = hiddenWord;\n    };\n    socket.on('gameData', handleGameData);\n    socket.emit('getGameData');\n\n    return () => {\n      socket.off('gameData', handleGameData);\n    };\n  }, []);\n\n  return (\n    <div className='gameRoot'>\n      <CanvasProvider socket={socket}>\n        <div className='purpleSplatTwo'>\n          <div className='limeSplat'>\n            <div className=\"topContainer\" >\n              <div className='inkeeLogo' />\n              {\n                choosingWords ?\n                  <WordSelector words={words} socket={socket}></WordSelector> :\n                  <div id='word' className='word'>\n                    Drawer(s) is selecting word.\n                  </div>\n              }\n              <div className=\"time\" id=\"timer\">&nbsp;10&nbsp;</div>\n            </div>\n            <div className=\"middleContainer\">\n              <UserProfile users={users} isPrestartLobby={false} isFinalScreen={false}/>\n              <div className=\"drawArea\">\n                <GameCanvas socket={socket} isDrawer={isDrawer} />\n              </div>\n              <div className=\"chat\" id='chat'></div>\n            </div>\n            <div className=\"bottomContainer\">\n              <div className=\"sendMessage\">\n                <input type='text' id='sendMessage' placeholder=\"enter guess...\"/>\n              </div>\n              {isDrawer &&\n                <div className='drawingTools'>\n                  <ClearCanvasButton/>\n                  <UndoStrokeButton />\n                  <RedoStrokeButton />\n                  <StrokeThickness />\n                  <ColorPalette/>\n                </div>\n              }\n            </div>\n          </div>\n        \n        </div>\n      </CanvasProvider>\n    </div>\n  );\n}\n\nconst writeMessage = ({ name = '', message}, {correctGuess = false, closeGuess = false, guessedMessage = false, serverMessage = false} = {}) => {\n  const p = document.createElement('p');\n  const chatBox = document.createTextNode(`${message}`);\n  const messages = document.getElementById('chat');\n  \n  if (name !== '') {\n    const span = document.createElement('span');\n    span.textContent = `${name}: `;\n    span.classList.add('fw-bold');\n    p.append(span);\n  }\n\n  p.classList.add('p-2', 'mb-0');\n  if (closeGuess) {\n    p.classList.add('closeAnswer');\n  }\n\n  if (correctGuess) {\n    p.classList.add('correctAnswer');\n  }\n  p.append(chatBox);\n  \n  if (closeGuess) {\n    p.classList.add('closeAnswer');\n  }\n\n  if (correctGuess) {\n    p.classList.add('correctAnswer');\n  }\n\n  if (guessedMessage) {\n    p.classList.add('guessedMessage');\n  }\n\n  if (serverMessage) {\n    p.classList.add('serverMessage');\n  }\n\n  messages.appendChild(p);\n  messages.scrollTop = messages.scrollHeight;\n};\n\nexport default Game;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { UserProfile } from '../../components/UserProfile';\nimport Sound from '../../assets/buttonClick.mp3';\n\nfunction FinalScores({history}) {\n  const [users] = useState(history.location.state.data);\n  window.history.replaceState(null, 'Inkee',\n    `/${sessionStorage.getItem('inviteCode')}`);\n\n  useEffect(() => {\n    const renderUserAvatar = (user) => {\n      console.log('Rendering Avatar');\n      const userCanvas = document.getElementById(`${user.uid}-avatar`);\n      const context = userCanvas.getContext('2d');\n      const image = new Image();\n      image.onload = () => {\n        context.drawImage(image, 0, 0, userCanvas.width, userCanvas.height);\n      };\n      image.src = user.avatar;\n    };\n  \n    const renderAvatars = (users) => {\n      users.map((user) => {\n        renderUserAvatar(user);\n      });\n    };\n\n    renderAvatars(users);\n  }, []);\n  \n  return (\n    <div className='prestartRoot'>\n      <div className=\"formTwo\">\n        <h1 className=\"score\" >Final Scores</h1>\n        <div>\n          <Button variant='primary' onClick={() => {\n            const ButtonClick = new Audio(Sound);\n            ButtonClick.play();\n            sessionStorage.clear();\n            history.push({\n              pathname: '/',\n            });\n          }}>play again</Button>\n        </div>\n        <div>\n          <UserProfile users={users} isPrestartLobby={false} isFinalScreen={true}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FinalScores;","export default __webpack_public_path__ + \"static/media/vanille-fraise.0af1c8d2.mp3\";","import Music from '../assets/vanille-fraise.mp3';\nimport Sound from 'react-sound';\nimport React, {useState} from 'react';\n\n\n\nexport const PlaySound = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  return (\n    <div className=\"topLayer\">\n      <button className=\"btn3\" onClick={() => setIsPlaying(!isPlaying)}>{!isPlaying ? 'unmute' : 'mute'}</button>\n      <Sound\n        autoLoad={true}\n        url={Music}\n        playStatus={isPlaying ? Sound.status.PLAYING : Sound.status.STOPPED}\n        playFromPosition={300}\n        loop={true}\n      />\n    </div>\n  );\n};","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './pages/home/home';\nimport CreateLobby from './pages/createLobby/createLobby';\nimport JoinLobby from './pages/joinLobby/joinLobby';\nimport PrestartLobby from './pages/prestartLobby/prestartLobby';\nimport Game from './pages/game/game';\nimport FinalScores from './pages/finalScores/finalScores';\nimport io from 'socket.io-client';\nimport { PlaySound } from './components/PlaySound';\n\nfunction App() {\n  const [socket, setSocket] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    // Initialize Socket connection.\n    let domain;\n    if (window.location.hostname === 'localhost') {\n      domain = `http://${window.location.hostname}:8080`;\n    } else {\n      domain = `wss://${window.location.hostname}/`;\n    }\n    const newSocket = io(domain, {\n      transports: ['websocket', 'polling'],\n      upgrade: true,\n      secure: true,\n    });\n    \n    const reconnect = () => {\n      newSocket.io.opts.transports = ['polling', 'websocket'];\n    };\n\n    newSocket.on('connect_error', reconnect);\n    newSocket.on('ERROR', (msg) => {\n      console.log(msg);\n    });\n\n    setSocket(newSocket);\n\n    // Clean-up routine for socket.\n    return () => {\n      newSocket.removeAllListeners();\n      newSocket.close();\n    };\n  }, [setSocket]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/' exact render={(props) => (<Home socket={socket} history={history} {...props} />)}/>\n          <Route path='/createLobby' render={(props) => (<CreateLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/joinLobby' render={(props) => (<JoinLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/prestartLobby' render={(props) => (<PrestartLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/game' render={(props) => (<Game socket={socket} history={history} {...props} />)}/>\n          <Route path='/finalScore' render={(props) => (<FinalScores socket={socket} history={history} {...props} />)}/>\n        </Switch>\n      </div>\n      <PlaySound></PlaySound>\n    </Router>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}