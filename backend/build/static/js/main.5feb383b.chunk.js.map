{"version":3,"sources":["assets/inkee-logo.png","components/CanvasContext.js","components/GameCanvas.js","components/ClearCanvasButton.js","pages/home/home.js","components/header/header.js","pages/createLobby/createLobby.js","pages/joinLobby/joinLobby.js","pages/prestartLobby/prestartLobby.js","components/ColorPalette.js","components/UserProfile.js","components/StrokeThickness.js","pages/game/game.js","App.js","reportWebVitals.js","index.js"],"names":["CanvasContext","React","createContext","CanvasProvider","children","socket","canvasRef","useRef","contextRef","useState","isDrawing","setIsDrawing","canvasEmpty","setCanvasEmpty","x","y","color","lineThickness","currentState","setCurrentState","renderSplashPrompt","canvas","current","context","getContext","drawing","Image","width","height","crossOrigin","onload","drawImage","src","draw","x0","y0","x1","y1","emit","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","clearCanvas","clearRect","document","getElementById","changed","Provider","value","prepareCanvas","style","offsetWidth","offsetHeight","scale","lineCap","startDrawing","nativeEvent","offsetX","offsetY","tempState","inDrawing","finishDrawing","changeColor","changeLineWidth","lineWidthValue","undoStroke","undo","redoStroke","useCanvas","useContext","GameCanvas","useEffect","onDrawingEvent","drawingData","onClearCanvas","on","off","id","onMouseDown","onMouseUp","onMouseMove","ref","ClearCanvasButton","className","onClick","Home","history","inviteCode","URLSearchParams","window","location","search","get","sessionStorage","setItem","startGameHandler","push","pathname","inviteCodeHandler","exportCanvasImage","uri","toDataURL","console","log","handleHomeSubmit","path","userNameInput","userData","uid","getItem","avatar","alert","Logo","alt","type","placeholder","align","Button","variant","size","CreateHeader","CreateLobby","numRounds","setNumRounds","roundLength","setRoundLength","textAreaContent","setTextAreaContent","usingCustomWords","setUsingCustomWords","replaceState","handleSubmit","event","preventDefault","gameConfiguration","customWords","onlyCustomWords","custom_words","split","length","onSubmit","name","onChange","target","hidden","text","JoinLobby","prestartLobbyHandler","joinById","PrestartLobby","setInviteCode","origin","inviteCodeURL","setInviteCodeURL","setUsers","setSettings","copyBtn","querySelector","handleClick","e","gameLink","navigator","clipboard","writeText","addEventListener","removeEventListener","userListener","userToAdd","prevUsers","deleteUser","userId","filter","user","getPlayersListener","users","settingListener","settingUpdate","prevSettings","key","populateSettings","settingsData","settings","startGame","readOnly","EmailShareButton","url","quote","EmailIcon","TwitterShareButton","TumblrIcon","FacebookMessengerShareButton","FacebookMessengerIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","WhatsappIcon","ColorPalette","UserProfile","listItems","map","score","StrokeThickness","min","max","defaultValue","step","slider","parseInt","writeMessage","message","correctGuess","closeGuess","guessedMessage","p","createElement","chatBox","createTextNode","messages","span","textContent","classList","add","append","appendChild","scrollTop","scrollHeight","Game","setMessages","renderUserAvatar","userCanvas","image","loadPlayers","renderAvatars","loadNewPlayer","disconnectPlayer","sendMessage","keyPressFunc","chatMessageHandler","data","closeGuessHandler","correctGuessHandler","messageData","timerHandler","timerValue","minute","second","secondTimer","Math","round","innerHTML","userCorrectGuessHandler","guessedMessageHandler","scoreUpdateHandler","scoreUpdate","newScore","tempUsers","matchingUserIdx","findIndex","App","setSocket","useHistory","domain","hostname","newSocket","io","transports","upgrade","secure","opts","msg","removeAllListeners","close","exact","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5feb383b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inkee-logo.b7363c11.png\";","import React, { useContext, useRef, useState } from 'react';\n\nconst CanvasContext = React.createContext();\n\nexport const CanvasProvider = ({ children, socket = null }) => {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [canvasEmpty, setCanvasEmpty] = useState(true);\n  const [currentState, setCurrentState] = useState({\n    x: 0,\n    y: 0,\n    color: 'black',\n    lineThickness: 5,\n  });\n\n  const prepareCanvas = () => {\n    const canvas = canvasRef.current;\n    canvas.style.width ='100%';\n    canvas.style.height='100%';\n    canvas.width  = canvas.offsetWidth * 2;\n    canvas.height = canvas.offsetHeight * 2;\n    \n    const context = canvas.getContext('2d');\n    context.scale(2, 2);\n    context.lineCap = 'round';\n    context.strokeStyle = 'black';\n    context.lineWidth = 5;\n    contextRef.current = context;\n    renderSplashPrompt();\n    document.getElementById('canvas').changed = false;\n  };\n\n  const renderSplashPrompt = () => {\n    if (!socket) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      const drawing = new Image(canvas.width, canvas.height);\n      drawing.crossOrigin = 'anonymous';\n      drawing.onload = () => {\n        context.drawImage(drawing, 0, 0, canvas.width / 2, canvas.height / 2);\n      };\n      drawing.src = 'https://i.ibb.co/z4Gb7Sw/output-onlinepngtools-1.png';\n    }\n  };\n\n  const startDrawing = ({ nativeEvent }) => {\n    if (canvasEmpty) {\n      clearCanvas(false);\n      setCanvasEmpty(false);\n    }\n    const { offsetX, offsetY } = nativeEvent;\n    setIsDrawing(true);\n    document.getElementById('canvas').changed = true;\n    const tempState = currentState;\n    tempState.x = offsetX;\n    tempState.y = offsetY;\n    setCurrentState(tempState);\n  };\n\n  const finishDrawing = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    const { offsetX, offsetY } = nativeEvent;\n    draw(currentState.x, currentState.y, offsetX, offsetY,\n      currentState.lineThickness, currentState.color, true);\n    setIsDrawing(false);\n  };\n\n  const inDrawing = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    const { offsetX, offsetY } = nativeEvent;\n    draw(currentState.x, currentState.y, offsetX, offsetY,\n      currentState.lineThickness, currentState.color, true);\n    \n    const tempState = currentState;\n    tempState.x = offsetX;\n    tempState.y = offsetY;\n    setCurrentState(tempState);\n  };\n\n  const draw = (x0, y0, x1, y1, lineThickness, color, emit) => { //{ nativeEvent }) => {\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(x0, y0);\n    contextRef.current.lineTo(x1, y1);\n    contextRef.current.strokeStyle = color;\n    contextRef.current.lineWidth = lineThickness;\n    contextRef.current.stroke();\n\n    if (socket && emit) {\n      socket.emit('drawingEvent', {\n        x0: x0,\n        y0: y0,\n        x1: x1,\n        y1: y1,\n        lineThickness: lineThickness,\n        color: color,\n      });\n    }\n  };\n\n  const undoStroke = (emit) => {\n    contextRef.current.undo();\n\n    if (emit && socket) {\n      socket.emit('undo');\n    }\n  };\n\n  const redoStroke = (emit) => {\n    contextRef.current.undo();\n\n    if (emit && socket) {\n      socket.emit('redo');\n    }\n  };\n\n  const clearCanvas = (emit) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    setCanvasEmpty(true);\n    \n    document.getElementById('canvas').changed = false;\n\n    if (socket && emit) {\n      socket.emit('clearCanvas');\n    }\n  };\n\n  const changeColor = color => () => {\n    const tempState = currentState;\n    tempState.color = color;\n    setCurrentState(tempState);\n  };\n\n  const changeLineWidth = (lineWidthValue) => {\n    const tempState = currentState;\n    tempState.lineThickness = lineWidthValue;\n    setCurrentState(tempState);\n  };\n\n  return (\n    <CanvasContext.Provider\n      value={{\n        canvasRef,\n        prepareCanvas,\n        startDrawing,\n        inDrawing,\n        finishDrawing,\n        clearCanvas,\n        changeColor,\n        changeLineWidth,\n        draw,\n        undoStroke,\n        redoStroke,\n      }}\n    >\n      {children}\n    </CanvasContext.Provider>\n  );\n};\n\nexport const useCanvas = () => useContext(CanvasContext);","import React, { useEffect } from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport function GameCanvas({socket = null}) {\n  const {\n    canvasRef,\n    prepareCanvas,\n    startDrawing,\n    finishDrawing,\n    inDrawing,\n    draw,\n    clearCanvas,\n  } = useCanvas();\n\n  useEffect(() => {\n    prepareCanvas();\n  }, []);\n\n  // Socket game handlers.\n  useEffect(() => {\n    const onDrawingEvent = (drawingData) => {\n      draw(drawingData.x0, drawingData.y0, drawingData.x1, drawingData.y1,\n        drawingData.lineThickness, drawingData.color, false);\n    };\n\n    const onClearCanvas = () => {\n      clearCanvas(false);\n    };\n\n    if (socket) {\n      socket.on('drawingEvent', onDrawingEvent);\n      socket.on('clearCanvas', onClearCanvas);\n    }\n    \n    return () => {\n      if (socket) {\n        socket.off('drawingEvent', onDrawingEvent);\n        socket.off('clearCanvas', onClearCanvas);\n      }\n    };\n  }, [socket]);\n\n  return (\n    <canvas\n      id='canvas'\n      onMouseDown={startDrawing}\n      onMouseUp={finishDrawing}\n      onMouseMove={inDrawing}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default GameCanvas;","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const ClearCanvasButton = () => {\n  const { clearCanvas } = useCanvas();\n\n  return <button className=\"btn2\" onClick={clearCanvas}>Clear</button>;\n};","import './home.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport Logo from '../../assets/inkee-logo.png';\nimport GameCanvas from '../../components/GameCanvas';\nimport { Button } from 'react-bootstrap';\nimport { CanvasProvider } from '../../components/CanvasContext';\nimport { ClearCanvasButton } from '../../components/ClearCanvasButton';\n\nfunction Home({socket, history}) {\n  const query = new URLSearchParams(window.location.search);\n  const inviteCode = query.get('gameId');\n\n  if (inviteCode !== null) {\n    sessionStorage.setItem('inviteCode', inviteCode);\n  }\n\n  useEffect(() => {\n    const startGameHandler = (inviteCode) => {\n      sessionStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/game',\n      });\n    };\n\n    const inviteCodeHandler = () => {\n      sessionStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby',\n      });\n    };\n\n    if (socket) {\n      socket.on('startGame', startGameHandler);\n      socket.on('inviteCode', inviteCodeHandler);\n    }\n\n    return () => {\n      if (socket) {\n        socket.off('startGame', startGameHandler);\n        socket.off('inviteCode', inviteCodeHandler);\n      }\n    };\n  }, [socket]);\n\n  const exportCanvasImage = () => {\n    const canvas = document.getElementById('canvas');\n    const uri = canvas.toDataURL('image/png');\n\n    if (canvas.changed === false) {\n      console.log('You haven\\'t drawn an avatar! Drawing something nice!');\n      return false;\n    }\n\n    sessionStorage.setItem('avatar', uri);\n    return true;\n  };\n\n  const handleHomeSubmit = (path, inviteCode = null) => {\n    const userNameInput = document.getElementById('username_input');\n    if (userNameInput.value !== '') {\n      sessionStorage.setItem('username', userNameInput.value);\n      console.log(userNameInput.value);\n    } else {\n      alert('Username cannot be empty!');\n      return;\n    }\n\n    if (!exportCanvasImage()) {\n      return;\n    }\n\n    if (inviteCode) {\n      socket.emit('joinRoom', {\n        userData: {\n          uid: sessionStorage.getItem('username'),\n          avatar: sessionStorage.getItem('avatar'),\n        },\n        inviteCode: sessionStorage.getItem('inviteCode'),\n      });\n    } else {\n      history.push({\n        pathname: path,\n      });\n    }\n  };\n\n  return (\n    <div className='root'>\n      <CanvasProvider>\n        <div className='purpleSplat'>\n          <div className='orangeSplat'>\n            <div className='header'>\n              <img className='logo' src={Logo} alt='inkee-logo'/>\n            </div>\n            <form>\n              <input className='username' id='username_input' type='text' placeholder=\"enter username...\"/>\n            </form>\n            <div align=\"center\">\n              <div className=\"homeDrawArea\">\n                <GameCanvas />\n              </div>\n              <div>\n                <ClearCanvasButton />\n              </div>\n              <div>\n                <Button onClick={() => {\n                  handleHomeSubmit('/joinLobby', sessionStorage.getItem('inviteCode')); \n                }} className='btn' variant=\"secondary\" size='lg'>join game</Button>\n              </div>\n              <div>\n                {\n                  !sessionStorage.getItem('inviteCode') &&\n                <Button onClick={() => {\n                  handleHomeSubmit('/createLobby');\n                }} className='btn' variant=\"outline-primary\" size='lg'>create game</Button>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </CanvasProvider>\n    </div>\n  );\n}\nexport default Home;","import React from 'react';\n// Assets\nimport Logo from '../../assets/inkee-logo.png';\n\nfunction CreateHeader() {\n  return (\n    <div className='header'>\n      <img className='logo' src={Logo} alt='inkee-logo' />\n    </div>\n  );\n} \n\nexport default CreateHeader;","import {React, useEffect, useState} from 'react';\nimport { Link, history } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport CreateHeader from '../../components/header/header';\nimport './createLobby.css';\n\nfunction CreateLobby({socket, history}) {\n  // Game Settings\n  const [numRounds, setNumRounds] = useState(2);\n  const [roundLength, setRoundLength] = useState(30);\n  \n  // Custom Words \n  const [textAreaContent, setTextAreaContent] = useState('');\n  const [usingCustomWords, setUsingCustomWords] = useState(null);\n  \n  window.history.replaceState(null, 'Inkee Create Lobby', '/');\n\n  /**\n   * User sets round numbers\n   * @param {onChange} event \n   */\n  const handleNumRoundChange = (event) => {\n    setNumRounds(event.target.value);\n  };\n\n  /**\n   * User sets round lenght\n   * @param {onChange} event \n   */\n  const handleRoundLengthChange = (event) => {\n    setRoundLength(event.target.value);\n  };\n\n  /**\n   * User enters custom words in textArea\n   * @param {onChange} event \n   */\n  const handleTextAreaChange = (event) => {\n    let text = event.target.value;\n    setTextAreaContent(text); \n  };\n\n  const handleCustomWordsCheckChange = (event) => {\n    setUsingCustomWords(event.target.value);\n  };\n\n  useEffect(() => {\n    socket.on('inviteCode', (inviteCode) => {\n      console.log(inviteCode);\n      // Join game room generated by server.\n      sessionStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby'\n      });\n    });\n\n    return () => {\n      socket.off('inviteCode');\n    };\n  }, [socket, history]);\n\n  /**\n   * Submit game configeration to backend\n   * @param {onClick} event \n   */\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // create gameConfiguration\n    // Use default word list if custom_words is empty\n    const gameConfiguration = {\n      numRounds: numRounds,\n      roundLength: roundLength,\n      customWords: [],\n      onlyCustomWords: usingCustomWords === null\n        || usingCustomWords === 'no' ? false : true,\n    };\n\n    const custom_words = document.getElementById('custom_words').value.split(/[ ,]+/);\n    \n    if (usingCustomWords === 'yes') {\n      if (custom_words.length > 10) {\n        gameConfiguration.customWords = custom_words; \n      } else {\n        alert('There must be more than 10 custom words!');\n        return;\n      }\n    } else if (custom_words.length > 0) {\n      gameConfiguration.customWords = custom_words; \n    }\n\n    // create userData\n    const userData = {\n      uid: sessionStorage.getItem('username'),\n      avatar: sessionStorage.getItem('avatar'),\n    };\n    \n    console.log(userData.avatar);\n    socket.emit('createGame', {\n      gameConfiguration,\n      userData,\n    });\n    console.log('socket emit invite code');\n  };\n\n  return (\n    <div className='lobbyRoot'>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <select\n          id=\"numRounds\"\n          name=\"numRounds\"\n          onChange={handleNumRoundChange}\n          value={numRounds}\n          className=\"select\"\n        >\n          <option hidden={true}>choose rounds</option>\n          <option value=\"1rounds\">1</option>\n          <option value=\"2rounds\">2</option>\n          <option value=\"3rounds\">3</option>\n          <option value=\"4rounds\">4</option>\n          <option value=\"5rounds\">5</option>\n          <option value=\"6rounds\">6</option>\n          <option value=\"7rounds\">7</option>\n          <option value=\"8rounds\">8</option>\n          <option value=\"9rounds\">9</option>\n          <option value=\"10rounds\">10</option>\n        </select>\n        <select\n          id=\"roundLength\"\n          name=\"roundLength\"\n          onChange={handleRoundLengthChange}\n          value={roundLength}\n          className=\"select\"\n        >\n          <option hidden={true}>drawing time</option>\n          <option value=\"30seconds\">30</option>\n          <option value=\"40seconds\">40</option>\n          <option value=\"50seconds\">50</option>\n          <option value=\"60seconds\">60</option>\n          <option value=\"70seconds\">70</option>\n          <option value=\"80seconds\">80</option>\n          <option value=\"90seconds\">90</option>\n          <option value=\"120seconds\">120</option>\n          <option value=\"180seconds\">180</option>\n        </select>\n        <select\n          id=\"exclusiveCustomWords\"\n          name=\"customWords\"\n          onChange={handleCustomWordsCheckChange}\n          value={usingCustomWords}\n          className=\"select\"\n        >\n          <option hidden={true}>use custom words only</option>\n          <option value=\"yes\">yes</option>\n          <option value=\"no\">no</option>\n        </select>\n        <div className='wordlist'>\n          <textarea className='words'\n            id='custom_words'\n            placeholder='enter comma-separated custom words...'\n            value={textAreaContent}\n            onChange={handleTextAreaChange}\n          >\n          </textarea>\n        </div> \n        <Button variant='primary' onClick={handleSubmit}>start game</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateLobby;","import React, { useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport CreateHeader from '../../components/header/header';\nimport './joinLobby.css';\n\nfunction JoinLobby({socket, history}) {\n  window.history.replaceState(null, 'Inkee Join Lobby', '/');\n  useEffect(() => {\n    const startGameHandler = (inviteCode) => {\n      sessionStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/game',\n      });\n    };\n\n    const prestartLobbyHandler = (inviteCode) => {\n      sessionStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby',\n      });\n    };\n\n    socket.on('startGame', startGameHandler);\n    socket.on('inviteCode', prestartLobbyHandler);\n\n    return () => {\n      socket.off('startGame', startGameHandler);\n      socket.off('inviteCode', prestartLobbyHandler);\n    };\n  }, [socket, history]);\n\n  const handleSubmit = (inviteCode = null, joinById) => {\n    const userData = {\n      userData: {\n        uid: sessionStorage.getItem('username'),\n        avatar: sessionStorage.getItem('avatar'),\n      },\n      inviteCode: inviteCode,\n    };\n\n    if (joinById && inviteCode === '') {\n      alert('Game ID text box is empty!');\n    } else if (joinById && inviteCode !== '') {\n      userData['inviteCode'] = inviteCode;\n      socket.emit('joinRoom', userData);\n    } else if (!joinById) {\n      socket.emit('joinRandomRoom', userData);\n    }\n  };\n\n  return (\n    <div className='root'>\n      <div className='greenSplat'>\n        <div className='orangeSplatTwo'>\n          <CreateHeader/>\n          <form className='form-group'>\n            <input id='id_input' className='username' type=\"text\" placeholder=\"enter game ID...\"/><br />\n            <Button variant='primary' onClick={() => {\n              handleSubmit(document.getElementById('id_input').value, true);\n            }}>join with ID</Button>\n          </form>\n          <Button variant='primary' onClick={() => {\n            handleSubmit(document.getElementById('id_input').value, false);\n          }}>join random game</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default JoinLobby;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './prestartLobby.css';\nimport {\n  EmailShareButton,\n  FacebookMessengerShareButton,\n  TelegramShareButton,\n  TwitterShareButton,\n  WhatsappShareButton\n} from 'react-share';\nimport {\n  EmailIcon,\n  FacebookMessengerIcon,\n  TelegramIcon,\n  TumblrIcon,\n  WhatsappIcon\n} from 'react-share';\n\nfunction PrestartLobby({socket, history}) {\n  const [inviteCode, setInviteCode] = useState('');\n  const [inviteCodeURL, setInviteCodeURL] = useState(window.location.origin);\n  const [users, setUsers] = useState([]);\n  const [settings, setSettings] = useState({});\n  window.history.replaceState(null, 'Inkee Prestart Lobby',\n    `/${sessionStorage.getItem('inviteCode')}`);\n\n  // Copy button setup.\n  useEffect(() => {\n    const copyBtn = document.querySelector('#copy.copyBtn');\n    const handleClick = (e) => {\n      e.preventDefault();\n      const gameLink = document.getElementById('gameLink').value;\n      navigator.clipboard.writeText(gameLink);\n    };\n\n    copyBtn.addEventListener('click', handleClick);\n\n    return () => {\n      copyBtn.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  \n  // User routines.\n  useEffect(() => {\n    const userListener = (userToAdd) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers, userToAdd];\n        return newUsers;\n      });\n    };\n    \n    const deleteUser = (userId) => {\n      setUsers((prevUsers) => {\n        const newUsers = prevUsers.filter((user) => user.uid !== userId);\n        return newUsers;\n      });\n    };\n\n    const getPlayersListener = (users) => {\n      setUsers(users);\n    };\n    \n    socket.on('getPlayers', getPlayersListener);\n    socket.on('newUser', userListener);\n    socket.on('disconnection', deleteUser);\n    socket.emit('getPlayers');\n\n    return () => {\n      socket.off('getPlayers', getPlayersListener);\n      socket.off('newUser', userListener);\n      socket.off('disconnection', deleteUser);\n    };\n  }, [socket]);\n\n  // Setting routines.\n  useEffect(() => {\n    const settingListener = (settingUpdate) => {\n      setSettings((prevSettings) => {\n        const key = settingUpdate.key;\n        const value = settingUpdate.value;\n\n        prevSettings[key] = value;\n        return prevSettings;\n      });\n    };\n\n    const populateSettings = (settingsData) => {\n      setSettings(settingsData.settings);\n    };\n\n    socket.on('settingUpdate', settingListener);\n    socket.on('loadSettings', populateSettings);\n    socket.emit('getSettings');\n\n    return () => {\n      socket.off('settingUpdate', settingListener);\n      socket.off('loadSettings', populateSettings);\n    };\n  }, [socket]);\n\n  // Start-game routines.\n  useEffect(() => {\n    const startGame = () => {\n      history.push({\n        pathname: '/game',\n      });\n    };\n    socket.on('startGame', startGame);\n\n    return () => {\n      socket.off('startGame', startGame);\n    };\n  }, [socket, history]);\n\n  useEffect(() => {\n    setInviteCode(sessionStorage.getItem('inviteCode'));\n    setInviteCodeURL(inviteCodeURL + '/' + inviteCode);\n  }, [history]);\n\n  return (\n    <div className='prestartRoot'>\n      <div className=\"form\">\n        <p className='gameId'>game ID: {inviteCode}</p>\n        <div>\n          <input className=\"linkBox\" type=\"text\" id=\"gameLink\" \n            value={window.location.origin + '/' + inviteCode} readOnly>\n          </input>\n        </div>\n        <div className=\"shareContainer\">\n          <button className=\"copyBtn\" type=\"button\" id=\"copy\">Copy Link</button>\n          <div className=\"shareBtn\">\n            <EmailShareButton\n              url={inviteCodeURL}\n              quote={'Join my Inkee.io game!'}\n            >\n              <EmailIcon size={43} />\n            </EmailShareButton>\n            <TwitterShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <TumblrIcon size={43}  />\n            </TwitterShareButton>\n            <FacebookMessengerShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <FacebookMessengerIcon size={43} />\n            </FacebookMessengerShareButton>\n            <TelegramShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <TelegramIcon size={43} />\n            </TelegramShareButton>\n            <WhatsappShareButton\n              url={window.location.origin + '/' + inviteCode}\n              quote={'Join my Inkee.io game!'}>\n              <WhatsappIcon size={43} />\n            </WhatsappShareButton>\n          </div>\n        </div>\n        <Button onClick={() => {\n          socket.emit('startGame');\n        }} variant='primary'>ready</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default PrestartLobby;","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const ColorPalette = () => {\n  const { changeColor } = useCanvas();\n\n  return (\n    <div>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('blue')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('red')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('green')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('yellow')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('pink')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('orange')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('purple')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('brown')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('black')}></button>\n    </div>\n  );\n};","import { React } from 'react';\n\nexport function UserProfile({users = []}) {\n  const listItems = users.map((user) =>\n    <div className=\"userProfile\" key={user.uid}>\n      <canvas className='avatar' id={user.uid + '-avatar'}/>\n      <div className='userText'>\n        <div>\n          <b>{user.uid}</b>\n        </div>\n        <div>\n          Score: {user.score}\n        </div>\n      </div>\n    </div>);\n\n  return (\n    <div className=\"profiles\">\n      {listItems}\n    </div>\n  );\n}\n\nexport default UserProfile;","import React from 'react';\nimport { useState } from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const StrokeThickness = () => {\n  const { changeLineWidth } = useCanvas();\n\n  return (\n    <div>\n      <input id=\"typeinp\"\n        type=\"range\"\n        min=\"1\"\n        max=\"15\"\n        defaultValue=\"5\"\n        step=\"1\"\n        onChange={(event) => {\n          let slider = (parseInt(event.target.value));\n          changeLineWidth(slider);\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n//Style\nimport './game.css';\n// Assets\nimport GameCanvas from '../../components/GameCanvas';\nimport { CanvasProvider } from '../../components/CanvasContext';\nimport { ClearCanvasButton } from '../../components/ClearCanvasButton';\nimport { ColorPalette } from '../../components/ColorPalette';\nimport { UserProfile } from '../../components/UserProfile';\nimport { StrokeThickness } from '../../components/StrokeThickness';\n\nfunction Game({socket, history}) {\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  window.history.replaceState(null, 'Inkee',\n    `/${sessionStorage.getItem('inviteCode')}`);\n\n  /* Load player routine */\n  useEffect(() => {\n    const renderUserAvatar = (user) => {\n      const userCanvas = document.getElementById(`${user.uid}-avatar`);\n      const context = userCanvas.getContext('2d');\n      const image = new Image();\n      image.src = user.avatar;\n      image.onload = () => {\n        context.drawImage(image, 0, 0, userCanvas.width, userCanvas.height);\n      };\n    };\n\n    const renderAvatars = (users) => {\n      users.map((user) => {\n        renderUserAvatar(user);\n      });\n    };\n\n    const loadPlayers = (users) => {\n      setUsers(users);\n      renderAvatars(users);\n    };\n\n    socket.on('getPlayers', loadPlayers);\n  \n    const loadNewPlayer = (userData) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers, userData];\n        return newUsers;\n      });\n      console.log(userData);\n      renderUserAvatar(userData);\n    };\n\n    socket.on('newPlayer', loadNewPlayer);\n\n    const disconnectPlayer = (userId) => {\n      setUsers((prevUsers) => {\n        const newUsers = prevUsers.filter((user) => user.uid !== userId);\n        return newUsers;\n      });\n    };\n\n    socket.on('disconnection', disconnectPlayer);\n\n    socket.emit('getPlayers');\n\n    return () => {\n      socket.off('getPlayers', loadPlayers);\n      socket.off('newPlayer', loadNewPlayer);\n      socket.off('disconnection', disconnectPlayer);\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    const sendMessage = document.querySelector('#sendMessage');\n    const keyPressFunc = (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        const message = sendMessage.value;\n        sendMessage.value = '';\n        socket.emit('chatMessage', { message });\n        console.log(message);\n      }\n    };\n    sendMessage.addEventListener('keypress', keyPressFunc);\n\n    const chatMessageHandler = (data) => {\n      console.log(data);\n      setMessages([...messages, data]);\n      writeMessage({\n        name: data.uid,\n        message: data.message\n      });\n    };\n\n    socket.on('chatMessage', chatMessageHandler);\n\n    const closeGuessHandler = (data) => {\n      console.log(data);\n      setMessages([...messages, data]);\n      writeMessage({\n        name: data.uid,\n        message: data.message,\n      }, { closeGuess: true });\n    };\n\n    socket.on('closeGuess', closeGuessHandler);\n\n    const correctGuessHandler = (messageData) => {\n      console.log(messageData);\n      setMessages([...messages, messageData]);\n      writeMessage({\n        name: messageData.uid,\n        message: messageData.message,\n      }, { correctGuess: true });\n    };\n\n    socket.on('correctGuess', correctGuessHandler);\n\n    const timerHandler = (timerValue) => {\n      const minute = timerValue / 60;\n      let second = timerValue % 60;\n      const secondTimer = Math.round(second * 100) / 100;\n      document.getElementById('timer').innerHTML = ` ${minute}:${secondTimer} `;\n    };\n    socket.on('timer', timerHandler);\n\n    const userCorrectGuessHandler = (messageData) => {\n      setMessages([...messages, messageData]);\n      writeMessage({\n        message: messageData.message,\n      }, { correctGuess: true });\n    };\n    socket.on('userCorrectGuess', userCorrectGuessHandler);\n\n    const guessedMessageHandler = (messageData) => {\n      setMessages([...messages, messageData]);\n      writeMessage({\n        name: messageData.uid,\n        message: messageData.message,\n      }, { guessedMessage: true });\n    };\n    socket.on('guessedMessage', guessedMessageHandler);\n\n    const scoreUpdateHandler = (scoreUpdate) => {\n      const uid = scoreUpdate.uid;\n      const newScore = scoreUpdate.score;\n\n      const tempUsers = users;\n      const matchingUserIdx = tempUsers.findIndex((user => user.uid === uid));\n      tempUsers[matchingUserIdx].score = newScore;\n\n      setUsers(tempUsers);\n    };\n\n    socket.on('scoreUpdate', scoreUpdateHandler);\n\n    return () => {\n      socket.off('correctGuess', correctGuessHandler);\n      socket.off('closeGuess', closeGuessHandler);\n      socket.off('chatMessage', chatMessageHandler);\n      socket.off('guessedMessage', guessedMessageHandler);\n      socket.off('timer', timerHandler);\n      socket.off('userCorrectGuess', userCorrectGuessHandler);\n      socket.off('scoreUpdate', scoreUpdateHandler);\n      sendMessage.removeEventListener('keypress', keyPressFunc);\n    };\n  }, [socket, messages]);\n\n  return (\n    <div className='gameRoot'>\n      <CanvasProvider socket={socket}>\n        <div className='purpleSplatTwo'>\n          <div className='limeSplat'>\n            <div className='inkeeLogo'>\n              <div className=\"topContainer\" >\n                <div className=\"word\" >word</div>\n                <div className=\"time\" id=\"timer\"> 3:19 </div>\n              </div>\n              <div className=\"middleContainer\">\n                <UserProfile users={users}/>\n                <div className=\"drawArea\">\n                  <GameCanvas socket={socket}/>\n                </div>\n                <div className=\"chat\" id='chat'></div>\n              </div>\n              <div className=\"bottomContainer\">\n                <div className=\"sendMessage\">\n                  <input type='text' id='sendMessage' placeholder=\"enter guess...\"/>\n                </div>\n                <ClearCanvasButton/>\n                <StrokeThickness />\n                <ColorPalette/>\n              </div>\n            </div>\n          </div>\n        \n        </div>\n      </CanvasProvider>\n    </div>\n  );\n}\n\nconst writeMessage = ({ name = '', message}, {correctGuess = false, closeGuess = false, guessedMessage = false} = {}) => {\n  const p = document.createElement('p');\n  const chatBox = document.createTextNode(`${message}`);\n  const messages = document.getElementById('chat');\n  \n  if (name !== '') {\n    const span = document.createElement('span');\n    span.textContent = `${name}: `;\n    span.classList.add('fw-bold');\n    p.append(span);\n  }\n\n  p.classList.add('p-2', 'mb-0');\n  p.append(chatBox);\n  \n  if (closeGuess) {\n    p.classList.add('closeAnswer');\n  }\n\n  if (correctGuess) {\n    p.classList.add('correctAnswer');\n  }\n\n  if (guessedMessage) {\n    p.classList.add('guessedMessage');\n  }\n\n  messages.appendChild(p);\n  messages.scrollTop = messages.scrollHeight;\n};\n\nexport default Game;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './pages/home/home';\nimport CreateLobby from './pages/createLobby/createLobby';\nimport JoinLobby from './pages/joinLobby/joinLobby';\nimport PrestartLobby from './pages/prestartLobby/prestartLobby';\nimport Game from './pages/game/game';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [socket, setSocket] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    // Initialize Socket connection.\n    let domain;\n    if (window.location.hostname === 'localhost') {\n      domain = `http://${window.location.hostname}:8080`;\n    } else {\n      domain = `wss://${window.location.hostname}/`;\n    }\n    const newSocket = io(domain, {\n      transports: ['websocket', 'polling'],\n      upgrade: true,\n      secure: true,\n    });\n    \n    const reconnect = () => {\n      newSocket.io.opts.transports = ['polling', 'websocket'];\n    };\n\n    newSocket.on('connect_error', reconnect);\n    newSocket.on('ERROR', (msg) => {\n      console.log(msg);\n    });\n    setSocket(newSocket);\n\n    // Clean-up routine for socket.\n    return () => {\n      newSocket.removeAllListeners();\n      newSocket.close();\n    };\n  }, [setSocket]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/' exact render={(props) => (<Home socket={socket} history={history} {...props} />)}/>\n          <Route path='/createLobby' render={(props) => (<CreateLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/joinLobby' render={(props) => (<JoinLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/prestartLobby' render={(props) => (<PrestartLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/game' render={(props) => (<Game socket={socket} history={history} {...props} />)}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}