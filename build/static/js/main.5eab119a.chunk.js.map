{"version":3,"sources":["assets/inkee-logo.png","components/Canvas.js","pages/home/home.js","components/header/header.js","components/CSVReader2.js","pages/createLobby/createLobby.js","pages/joinLobby/joinLobby.js","pages/prestartLobby/prestartLobby.js","pages/setupProfile/setupProfile.js","components/CanvasContext.js","components/GameCanvas.js","components/ClearCanvasButton.js","components/ColorPalette.js","pages/game/game.js","reactTesting/components/testComponent.js","reactTesting/components/NewGoal.js","reactTesting/testPage.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","props","useState","customStrokeWidth","setStrokeWidth","customStrokeColor","canvas","ref","width","height","strokeWidth","strokeColor","style","border","onUpdate","update","length","setCanvasEmpty","className","onClick","current","clearCanvas","id","type","min","max","defaultValue","step","onChange","event","parseInt","target","value","Home","socket","history","inviteCode","canvasRef","useRef","canvasEmpty","localStorage","setItem","handleHomeSubmit","path","userNameInput","document","getElementById","console","log","emit","userData","uid","getItem","avatar","on","push","pathname","alert","src","Logo","alt","placeholder","align","Button","variant","size","CreateHeader","CSVReader2","handleOnDrop","data","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","onDrop","this","onError","addRemoveButton","onRemoveFile","Component","CreateLobby","numRounds","setNumRounds","roundLength","setRoundLength","customWordBox","setCustomWords","handleSubmit","preventDefault","customWordsList","lines","split","i","line","filter","Boolean","j","word","toLowerCase","includes","handleCustomWords","gameConfiguration","num_rounds","round_length","custom_words","onSubmit","htmlFor","name","customWordString","JoinLobby","to","PrestartLobby","setInviteCode","setUsers","setSettings","useEffect","querySelector","addEventListener","e","select","execCommand","userListener","userToAdd","prevUsers","newUsers","deleteUserListener","userToRemove","idx","findIndex","user","splice","off","settingListener","settingUpdate","prevSettings","key","populateSettings","settingsData","settings","class","window","location","protocol","hostname","readonly","SetupProfile","CanvasContext","React","createContext","CanvasProvider","children","isDrawing","setIsDrawing","contextRef","Provider","prepareCanvas","offsetWidth","offsetHeight","context","getContext","scale","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","finishDrawing","closePath","fillStyle","fillRect","changeColor","color","lineColor","draw","lineTo","x","y","thickness","drawEvent","stroke","useCanvas","useContext","GameCanvas","onMouseDown","onMouseUp","onMouseMove","ClearCanvasButton","ColorPalette","Game","CompoList","stuff","map","single_item","text","NewGoal","enteredText","setEnteredText","newGoal","Math","random","toString","onAddGoal","TestPage","courseGoals","setCourseGoals","prevCourseGoals","concat","App","setSocket","useHistory","clear","newSocket","io","transports","upgrade","reconnect","opts","close","render","component","testPage","exact","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5eab119a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inkee-logo.b7363c11.png\";","import React, { useState } from \"react\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\n\nfunction Canvas(props) {\n  const [numDrawingEvents, setNumDrawingEvents] = useState(0);\n  const [customStrokeWidth, setStrokeWidth] = useState(8);\n  const [customStrokeColor, setStrokeColor] = useState('black');\n  const canvas = props.canvas;\n\n  return (\n    <div>\n      <ReactSketchCanvas \n        ref={canvas}\n        width=\"24em\"\n        height=\"15rem\"\n        strokeWidth={customStrokeWidth}\n        strokeColor={customStrokeColor}\n        style={{\n        border: \".5rem solid black\",}} \n        onUpdate={(update) => {\n          if (update.length !== 0) {\n            props.setCanvasEmpty(false);\n          }\n        }}\n      />\n      <br/>\n      <button\n        className=\"btn2\"\n        onClick={() => {\n          canvas.current.clearCanvas();\n          props.setCanvasEmpty(true);\n        }}\n      >\n        Clear\n      </button>\n      <input id=\"typeinp\" type=\"range\" min=\"1\" max=\"15\" defaultValue=\"8\" step=\"1\"\n        onChange={(event) => {\n          setStrokeWidth(parseInt(event.target.value));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Canvas;","import './home.css'\nimport React, { useState, useRef } from 'react'\nimport Logo from '../../assets/inkee-logo.png'\nimport Canvas from '../../components/Canvas';\nimport { Button } from 'react-bootstrap';\n\nfunction Home({socket, history, inviteCode}) {\n  const canvasRef = useRef();\n  const [canvasEmpty, setCanvasEmpty] = useState(true);\n  localStorage.setItem('inviteCode', inviteCode);\n\n  const handleHomeSubmit = (path, inviteCode = null) => {\n    const userNameInput = document.getElementById('username_input');\n    if (userNameInput.value !== '') {\n      localStorage.setItem('username', userNameInput.value);\n      console.log(userNameInput.value);\n    } else {\n      alert('Username cannot be empty!');\n      return;\n    }\n\n    if (inviteCode) {\n      socket.emit('joinGame', {\n        userData: {\n          uid: localStorage.getItem('username'),\n          avatar: 'tempAvatar',\n        },\n        inviteCode: localStorage.getItem('inviteCode'),\n      });\n\n      socket.on('inviteCode', () => {\n        history.push({\n          pathname: '/prestartLobby',\n        });\n      });\n    } else {\n      history.push({\n        pathname: path,\n      });\n    }\n  };\n\n  return (\n    <div className='root'>\n      <div className='purpleSplat'>\n        <div className='orangeSplat'>\n          <div className='header'>\n          <img className='logo' src={Logo} alt='inkee-logo'/>\n          </div>\n          <form>\n            <input className='username' id='username_input' type='text' placeholder=\"enter username...\"/>\n          </form>\n          <div align=\"center\">\n            <Canvas canvas={canvasRef} canvasEmpty={canvasEmpty} setCanvasEmpty={setCanvasEmpty}></Canvas>\n            <div>\n              <Button onClick={() => {\n                handleHomeSubmit('/joinLobby', localStorage.getItem('inviteCode')); \n              }} className='btn' variant=\"secondary\" size='lg'>join game</Button>{' '}\n            </div>\n            <div>\n              {\n                !localStorage.getItem('inviteCode') &&\n                <Button onClick={() => {\n                  handleHomeSubmit('/createLobby')\n                }} className='btn' variant=\"outline-primary\" size='lg'>create game</Button>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Home;","import React from 'react';\n// Assets\nimport Logo from '../../assets/inkee-logo.png'\n\nfunction CreateHeader() {\n  return (\n    <div className='header'>\n      <img className='logo' src={Logo} alt='inkee-logo' />\n    </div>\n  );\n} \n\nexport default CreateHeader","import React, { Component } from 'react';\nimport { CSVReader } from 'react-papaparse';\n\nexport default class CSVReader2 extends Component {\n  handleOnDrop = (data) => {\n    console.log('---------------------------');\n    console.log(`Data Len: ${data.length}`)\n  };\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  render() {\n    return (\n      <>\n        <h5>Or Upload a CSV File</h5>\n        <CSVReader\n          onDrop={this.handleOnDrop}\n          onError={this.handleOnError}\n          addRemoveButton\n          onRemoveFile={this.handleOnRemoveFile}\n        >\n          <span>Drop CSV file here or click to upload.</span>\n        </CSVReader>\n      </>\n    );\n  }\n}","import React, { useState } from \"react\";\nimport { Link, history } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n// Components\nimport CreateHeader from \"../../components/header/header\";\nimport CSVReader2 from \"../../components/CSVReader2\";\nimport './createLobby.css'\n\nfunction CreateLobby({socket, history}) {\n  const [numRounds, setNumRounds] = useState(2);\n  const [roundLength, setRoundLength] = useState(30);\n\n  // if (localStorage.getItem('username') === null || localStorage.getItem('avatar') === null) {\n  //   history.push({\n  //     pathname: '/'\n  //   });\n  // }\n  const [customWordBox, setCustomWords] = useState('');\n\n  const handleNumRoundChange = (event) => {\n    //console.log(`Num Rounds: ${event.target.value}`);\n    setNumRounds(event.target.value);\n  };\n\n  const handleRoundLengthChange = (event) => {\n    //console.log(`Round Length: ${event.target.value}`);\n    setRoundLength(event.target.value);\n  };\n\n  const handleCustomWordChange = (event) => {\n    let customWordString = event.target.value;\n    setCustomWords(customWordString);\n  }\n\n  const handleCustomWords = (customWordBox) => {\n    let customWordsList = [];\n    // Parse Custom Words if present\n    if (customWordBox.length > 0) {\n      let lines = customWordBox.split(/\\r\\n|\\r|\\n/);\n      for (let i = 0; i < lines.length; i++) {\n        // prase if each lime has more than one word\n        let line = lines[i].split(/[ ,]+/).filter(Boolean);\n        for (let j = 0; j < line.length; j++) {\n          const word = line[j].toLowerCase();\n          if (customWordsList.includes(word) === false) customWordsList.push(word);\n        }\n      }\n    } \n    return customWordsList;\n  }\n  \n  const handleSubmit = (event) => {\n    console.log('submit')\n    event.preventDefault();\n    console.log('Form Submit');\n    console.log(`Submit: numRounds: ${numRounds}`);\n    console.log(`Submit: roundLength: ${roundLength}`);\n\n    let customWordsList = handleCustomWords(customWordBox);\n\n    console.log(`Custom words: ${customWordsList}`);\n    \n    // Game configuration setup\n    const gameConfiguration = {\n      num_rounds: numRounds,\n      round_length: roundLength,\n      custom_words: '',\n    }\n\n    // add custom words if possible\n    if (customWordsList.length > 0) {\n      gameConfiguration['custom_words'] = customWordsList;\n    }\n    \n    // send\n    socket.emit('createGame', {\n      gameConfiguration,\n      userData: {\n        uid: localStorage.getItem('username'),\n        avatar: 'tempavatar', //localStorage.getItem('avatar'),\n      },\n    });\n\n    socket.on('inviteCode', (inviteCode) => {\n      console.log(inviteCode);\n      // Join game room generated by server.\n      localStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby'\n      });\n    });\n  };\n\n  return (\n    <div className='root'>\n      <CreateHeader />\n      <div className='content'>\n        <h2>Select Game Settings</h2>\n        <form className='lobby-creation-form' onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n              <label htmlFor=\"numRounds\">Rounds: </label>\n              <br/>\n              <select\n                id=\"numRounds\"\n                name=\"numRounds\"\n                onChange={handleNumRoundChange}\n                value={numRounds}\n              >\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n          </div> \n          <div className=\"form-group\">\n            <label htmlFor=\"roundLength\">Drawing Time (seconds): </label>\n            <br/>\n            <select\n              id=\"roundLength\"\n              name=\"roundLength\"\n              onChange={handleRoundLengthChange}\n              value={roundLength}\n            >\n              <option value=\"30\">30</option>\n              <option value=\"40\">40</option>\n              <option value=\"50\">50</option>\n              <option value=\"60\">60</option>\n              <option value=\"70\">70</option>\n              <option value=\"80\">80</option>\n              <option value=\"90\">90</option>\n              <option value=\"100\">100</option>\n              <option value=\"110\">110</option>\n              <option value=\"120\">120</option>\n              <option value=\"130\">130</option>\n              <option value=\"140\">140</option>\n              <option value=\"150\">150</option>\n              <option value=\"160\">160</option>\n              <option value=\"170\">170</option>\n              <option value=\"180\">180</option>\n            </select>\n          </div>\n          <div className='wordlist-container'>\n            <label>Custom Words:</label>\n            <br/>\n            <textarea\n              placeholder='Enter Custom Words...'\n              value={customWordBox}\n              onChange={handleCustomWordChange}\n              >\n            </textarea>\n            <CSVReader2/>\n          </div> \n          <Button onClick={handleSubmit}>Create Game</Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateLobby","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport CreateHeader from \"../../components/header/header\";\nimport './joinLobby.css'\n\nfunction JoinLobby({socket, history}) {\n  return (\n    <div className='root'>\n      <div className='greenSplat'>\n        <div className='orangeSplatTwo'>\n        <CreateHeader/>\n          <form className='form-group'>\n              <input className='username' type=\"text\" placeholder=\"enter game ID...\"/><br />\n              <Link to='../game/game.js'>\n                <Button variant='primary'>join with ID</Button>\n              </Link>\n          </form>\n          <Link to='../prestartLobby/prestartLobby.js'>\n              <Button variant='primary'>join random game</Button>\n          </Link>\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default JoinLobby","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport CreateHeader from \"../../components/header/header\";\nimport GameLink from \"../../components/GameLink\";\nimport './prestartLobby.css'\n\nfunction PrestartLobby({socket, history}) {\n  const [inviteCode, setInviteCode] = useState('');\n  const [users, setUsers] = useState([]);\n  const [settings, setSettings] = useState({});\n  \n  // Copy button setup.\n  useEffect(() => {\n    const copyBtn = document.querySelector('#copy.copyBtn');\n\n    copyBtn.addEventListener('click', (e) => {\n      e.preventDefault();\n      document.querySelector('#gameLink').select();\n      document.execCommand('copy');\n    });\n  }, []);\n  \n  // User routines.\n  useEffect(() => {\n    const userListener = (userToAdd) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers];\n        newUsers.push(userToAdd);\n        return newUsers;\n      });\n    };\n  \n    const deleteUserListener = (userToRemove) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers];\n        const idx = newUsers.findIndex(user => user.id === userToRemove.id);\n        return newUsers.splice(idx);\n      });\n    };\n  \n    socket.on('newUser', userListener);\n    socket.on('deleteUser', deleteUserListener);\n    socket.emit('getUsers');\n\n    return () => {\n      socket.off('newUser', userListener);\n      socket.off('deleteUser', deleteUserListener);\n    };\n  }, [socket]);\n\n  // Setting routines.\n  useEffect(() => {\n    const settingListener = (settingUpdate) => {\n      setSettings((prevSettings) => {\n        const key = settingUpdate.key;\n        const value = settingUpdate.value;\n\n        prevSettings[key] = value;\n        return prevSettings;\n      });\n    };\n\n    const populateSettings = (settingsData) => {\n      setSettings(settingsData.settings);\n    }\n\n    socket.on('settingUpdate', settingListener);\n    socket.on('loadSettings', populateSettings);\n    socket.emit('getSettings');\n\n    return () => {\n      socket.off('settingUpdate', settingListener);\n      socket.off('loadSettings', populateSettings);\n    }\n  }, [socket]);\n\n  useEffect(() => {\n    setInviteCode(localStorage.getItem('inviteCode'));\n  }, [history]);\n\n  return (\n    <div className='root'>\n      <CreateHeader/>\n      <div className='content'>\n        <div className='game-id'>\n          <p>Game ID: {inviteCode}</p>\n        </div>\n         <div class=\"mt-5\">\n        <h1 class=\"text-white text-center\">Invite your friends!</h1>\n        <div class=\"input-group mb-3\">\n            <input type=\"text\" id=\"gameLink\" class=\"form-control text-center fw-bold bg-white\"\n              value={window.location.protocol + '//' + window.location.hostname + '/' + inviteCode} readonly>\n            </input>\n            <button class=\"copyBtn\" type=\"button\" id=\"copy\">Copy Link</button>\n          </div>\n        </div>\n        <div className='lobby-players'>\n          <ul>\n            <li>Coffee</li>\n            <li>Tea</li>\n            <li>Milk</li>\n          </ul>\n        </div>\n        <Link to='../game/game.js'>\n          <Button variant='primary'>Ready</Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default PrestartLobby\n","import React from \"react\";\n\nfunction SetupProfile({socket, history}) {\n  <div>\n    <div className='setupProfile'>\n      <div classname='usernameContainer'>\n        {/* username component for updating username. Using input\n        form as placeholder */}\n        \n        <input></input>\n      </div>\n    </div>\n  </div>\n}\n\nexport default SetupProfile","import React, { useContext, useRef, useState } from \"react\";\n\nconst CanvasContext = React.createContext();\n\nexport const CanvasProvider = ({ children, socket = null }) => {\n  const [isDrawing, setIsDrawing] = useState(false)\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const color = null;\n\n  const prepareCanvas = () => {\n    const canvas = canvasRef.current\n    canvas.style.width ='100%';\n    canvas.style.height='100%';\n    canvas.width  = canvas.offsetWidth * 2;\n    canvas.height = canvas.offsetHeight * 2;\n    \n    const context = canvas.getContext(\"2d\")\n    context.scale(2, 2);\n    context.lineCap = \"round\";\n    context.strokeStyle = \"black\";\n    context.lineWidth = 5;\n    contextRef.current = context;\n  };\n\n  const startDrawing = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n    socket.emit('startDrawing');\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n    socket.emit('finishDrawing');\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n\n    if (socket) {\n      socket.emit('drawingEvent', ({\n        x: offsetX,\n        y: offsetY,\n        color: context.strokeStyle,\n        thickness: context.lineWidth,\n        drawEvent: nativeEvent,\n      }));\n    }\n    contextRef.current.stroke();\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\")\n    context.fillStyle = \"white\"\n    context.fillRect(0, 0, canvas.width, canvas.height)\n    if (socket) {\n      socket.emit('clearCanvas');\n    }\n  }\n\n  const changeColor = color => () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    const lineColor = color;\n    context.strokeStyle = lineColor;\n  }\n\n  return (\n    <CanvasContext.Provider\n      value={{\n        canvasRef,\n        contextRef,\n        prepareCanvas,\n        startDrawing,\n        finishDrawing,\n        clearCanvas,\n        changeColor,\n        draw,\n      }}\n    >\n      {children}\n    </CanvasContext.Provider>\n  );\n};\n\nexport const useCanvas = () => useContext(CanvasContext);","import React, { useEffect } from \"react\";\nimport { useCanvas } from \"./CanvasContext\";\n\nexport function GameCanvas() {\n  const {\n    canvasRef,\n    prepareCanvas,\n    startDrawing,\n    finishDrawing,\n    draw,\n  } = useCanvas();\n\n  useEffect(() => {\n    prepareCanvas();\n  }, []);\n\n  return (\n    <div className=\"drawArea\">\n        <canvas\n        onMouseDown={startDrawing}\n        onMouseUp={finishDrawing}\n        onMouseMove={draw}\n        ref={canvasRef}\n        />\n    </div>\n  );\n}\n\nexport default GameCanvas;","import React from 'react'\nimport { useCanvas } from './CanvasContext'\n\nexport const ClearCanvasButton = () => {\n  const { clearCanvas } = useCanvas()\n\n  return <button className=\"btn2\" onClick={clearCanvas}>Clear</button>\n}","import React from 'react'\nimport { useCanvas } from './CanvasContext'\n\nexport const ColorPalette = () => {\n  const { changeColor } = useCanvas()\n\n  return (\n    <div>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor(\"blue\")}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor(\"red\")}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor(\"green\")}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor(\"yellow\")}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor(\"pink\")}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor(\"orange\")}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor(\"purple\")}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor(\"brown\")}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor(\"black\")}></button>\n    </div>\n  );\n}","import React, { useEffect } from 'react'\n//Style\nimport './game.css'\n// Assets\nimport GameCanvas from '../../components/GameCanvas';\nimport { CanvasProvider } from \"../../components/CanvasContext\";\nimport { ClearCanvasButton } from \"../../components/ClearCanvasButton\";\nimport { ColorPalette } from \"../../components/ColorPalette\";\n\nfunction Game({socket, history}) {\n  // Socket game handlers.\n  useEffect(() => {\n    socket.on('drawingEvent', (data) => {\n      console.log(data);\n    });\n  }, [socket]);\n\n  return (\n    <div className='gameRoot'>\n      <CanvasProvider socket={socket}>\n        <div className='purpleSplatTwo'>\n          <div className='limeSplat'>\n            <div className='inkeeLogo'>\n              <div className=\"topContainer\" >\n                <div className=\"word\" >word</div>\n                <div className=\"time\" > 3:19 </div>\n              </div>\n              <div className=\"middleContainer\">\n                <div className=\"profiles\">profile</div>\n                  <GameCanvas/>\n                <div className=\"chat\">chat</div>\n              </div>\n              <div className=\"bottomContainer\">\n                <input type='text' placeholder=\"enter guess...\"/>\n                <ClearCanvasButton/>\n                <ColorPalette/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CanvasProvider>\n    </div>\n  );\n}\nexport default Game","import React from \"react\";\n\nfunction CompoList(props) {\n  console.log(props.stuff);\n\n  // You need to map() eveyr prop into something that jsx can redner \n  return (\n    <ul className='goal-list'> {\n      props.stuff.map((single_item) => {\n        return <li key={single_item.id}>{single_item.text}</li>\n      })\n    }\n    </ul>\n  );\n}\n\nexport default CompoList","import React from \"react\";\nimport { useState } from \"react\";\n\nconst NewGoal = (props) => {\n  // let enteredText = ''; // This only sets a variable. Use states\n  const [enteredText, setEnteredText] = useState('');\n\n  // used for the event listener \n  const addGoalHandler = (event) => {\n    event.preventDefault(); \n    \n    // will get generated every time the form is submitted\n    // How do we pass new goal into the parent component? -> callback from parent to child\n    const newGoal = {\n      id: Math.random().toString(),\n      text: enteredText\n    };    \n\n    props.onAddGoal(newGoal); // executes the function pointed by onAddGoal()\n    console.log(`@addGoalHandler: ${newGoal.id}`);\n\n    setEnteredText('');\n  }\n\n  // For capturiing user input with the onChange() handler\n  const textChangeHandler = event => {\n    //enteredText = event.target.value;\n    setEnteredText(event.target.value); // update the state\n  };\n\n  // add eventlisterns by onSomething\n  // pass in a function (it just points to it for now)\n  return (\n    <form className='new-goal' onSubmit={addGoalHandler}>\n      <input type='text' value={enteredText} onChange={textChangeHandler}/>\n      <button type='submit'>Add Goal</button>\n    </form>\n  );\n}\n\nexport default NewGoal ","import React from \"react\";\nimport { useState } from \"react\";  // react Hook for functional components\nimport CompoList from \"./components/testComponent\";\nimport NewGoal from \"./components/NewGoal\";\n\nfunction TestPage() {\n  // testing with props\n  const goalsList = [{id: 'cg1', text: 'Finish CS 490'},\n                    {id: 'cg2', text: 'Start STAT 417'}];\n\n  // Create an initial state -> array of goals\n  const [courseGoals, setCourseGoals] = useState([{id: 'cg1', text: 'Finish CS 490'},\n                                                  {id: 'cg2', text: 'Start STAT 417'}]); // extract out of useState\n\n  const addNewGoalHandler = (newGoal) => {\n    //setCourseGoals(courseGoals.concat(newGoal)); // concats it to the list created by use state\n    // you can do the same thing with a function (bulletproof appraoch)\n    setCourseGoals((prevCourseGoals) => {\n      return prevCourseGoals.concat(newGoal);\n    })\n  }\n\n  return (\n    <div>\n      <div className='input'>\n        <h3> Testing with input </h3>\n        <NewGoal onAddGoal={addNewGoalHandler /* send in a pointer to addNewGoalHandler() */}/>\n        <h3>Prop a list into page</h3>\n        <CompoList stuff={courseGoals} />\n      </div>\n    </div>\n  ); \n}\n\nexport default TestPage","import './App.css';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Home from './pages/home/home';\nimport CreateLobby from './pages/createLobby/createLobby';\nimport JoinLobby from './pages/joinLobby/joinLobby';\nimport PrestartLobby from './pages/prestartLobby/prestartLobby';\nimport SetupProfile from './pages/setupProfile/setupProfile'\nimport Game from './pages/game/game';\nimport testPage from './reactTesting/testPage';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [socket, setSocket] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    return () => {\n      localStorage.clear();\n    }\n  }, []);\n\n  useEffect(() => {\n    // Initialize Socket connection.\n    const newSocket = io(`http://${window.location.hostname}:3001`, {\n      transports: ['websocket', 'polling'],\n      upgrade: true,\n    });\n    \n    const reconnect = () => {\n      newSocket.io.opts.transports = [\"polling\", \"websocket\"];\n    };\n\n    newSocket.on(\"connect_error\", reconnect);\n    setSocket(newSocket);\n\n    // Clean-up routine for socket.\n    return () => {\n      newSocket.close();\n      newSocket.off(\"connect_error\", reconnect);\n    }\n  }, [setSocket]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/createLobby' render={(props) => (<CreateLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/joinLobby' render={(props) => (<JoinLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/prestartLobby' render={(props) => (<PrestartLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/setupProfile' render={(props) => (<SetupProfile socket={socket} history={history} {...props} />)}/>\n          <Route path='/game' render={(props) => (<Game socket={socket} history={history} {...props} />)}/>\n          <Route path='/testPage' component={testPage} />\n          <Route path='/:inviteCode?' exact render={(props) => (<Home socket={socket} history={history} inviteCode={props.match.params.inviteCode} {...props} />)}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}