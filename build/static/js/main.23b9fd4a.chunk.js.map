{"version":3,"sources":["assets/inkee-logo.png","components/CanvasContext.js","components/GameCanvas.js","components/ClearCanvasButton.js","pages/home/home.js","components/header/header.js","pages/createLobby/createLobby.js","pages/joinLobby/joinLobby.js","pages/prestartLobby/prestartLobby.js","components/ColorPalette.js","components/UserProfile.js","components/StrokeThickness.js","pages/game/game.js","App.js","reportWebVitals.js","index.js"],"names":["CanvasContext","React","createContext","CanvasProvider","children","socket","canvasRef","useRef","contextRef","useState","isDrawing","setIsDrawing","canvasEmpty","setCanvasEmpty","x","y","color","lineThickness","currentState","setCurrentState","draw","x0","y0","x1","y1","emit","current","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","Provider","value","prepareCanvas","canvas","style","width","height","offsetWidth","offsetHeight","context","getContext","scale","lineCap","startDrawing","nativeEvent","offsetX","offsetY","tempState","inDrawing","finishDrawing","clearCanvas","fillStyle","fillRect","changeColor","changeLineWidth","lineWidthValue","exportImage","uri","toDataURL","console","log","undoStroke","undo","redoStroke","useCanvas","useContext","GameCanvas","useEffect","onDrawingEvent","drawingData","onClearCanvas","on","off","onMouseDown","onMouseUp","onMouseMove","ref","ClearCanvasButton","className","onClick","Home","history","inviteCode","URLSearchParams","window","location","search","get","localStorage","setItem","handleHomeSubmit","path","userNameInput","document","getElementById","push","pathname","userData","uid","getItem","avatar","alert","src","Logo","alt","id","type","placeholder","align","Button","variant","size","CreateHeader","CreateLobby","numRounds","setNumRounds","roundLength","setRoundLength","textAreaContent","setTextAreaContent","csvContent","setCsvContent","replaceState","handleSubmit","event","preventDefault","customWords","length","lines","split","i","line","filter","Boolean","j","word","toLowerCase","includes","parseCustomWords","gameConfiguration","num_rounds","round_length","custom_words","onSubmit","name","onChange","target","hidden","text","onDrop","words","data","onError","err","file","inputElem","reason","addRemoveButton","onRemoveFile","JoinLobby","joinById","PrestartLobby","setInviteCode","setUsers","setSettings","copyBtn","querySelector","handleClick","e","select","execCommand","addEventListener","removeEventListener","userListener","userToAdd","prevUsers","deleteUser","userId","user","settingListener","settingUpdate","prevSettings","key","populateSettings","settingsData","settings","startGame","defaultValue","origin","readOnly","ColorPalette","UserProfile","users","listItems","map","score","StrokeThickness","min","max","step","slider","parseInt","writeMessage","message","correctGuess","closeGuess","p","createElement","chatBox","createTextNode","messages","span","textContent","classList","add","append","appendChild","scrollTop","scrollHeight","Game","setMessages","loadPlayers","loadNewPlayer","disconnectPlayer","sendMessage","keyPressFunc","messageData","App","setSocket","useHistory","clear","domain","hostname","newSocket","io","transports","upgrade","secure","opts","msg","removeAllListeners","close","exact","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.23b9fd4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/inkee-logo.b7363c11.png\";","import React, { useContext, useRef, useState } from 'react';\n\nconst CanvasContext = React.createContext();\n\nexport const CanvasProvider = ({ children, socket = null }) => {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [canvasEmpty, setCanvasEmpty] = useState(true);\n  const [currentState, setCurrentState] = useState({\n    x: 0,\n    y: 0,\n    color: 'black',\n    lineThickness: 5,\n  });\n\n  const prepareCanvas = () => {\n    const canvas = canvasRef.current;\n    canvas.style.width ='100%';\n    canvas.style.height='100%';\n    canvas.width  = canvas.offsetWidth * 2;\n    canvas.height = canvas.offsetHeight * 2;\n    \n    const context = canvas.getContext('2d');\n    context.scale(2, 2);\n    context.lineCap = 'round';\n    context.strokeStyle = 'black';\n    context.lineWidth = 5;\n    contextRef.current = context;\n  };\n\n  const startDrawing = ({ nativeEvent }) => {\n    const { offsetX, offsetY } = nativeEvent;\n    setIsDrawing(true);\n    const tempState = currentState;\n    tempState.x = offsetX;\n    tempState.y = offsetY;\n    setCurrentState(tempState);\n  };\n\n  const finishDrawing = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    const { offsetX, offsetY } = nativeEvent;\n    draw(currentState.x, currentState.y, offsetX, offsetY,\n      currentState.lineThickness, currentState.color, true);\n    setIsDrawing(false);\n  };\n\n  const inDrawing = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n\n    const { offsetX, offsetY } = nativeEvent;\n    draw(currentState.x, currentState.y, offsetX, offsetY,\n      currentState.lineThickness, currentState.color, true);\n    \n    const tempState = currentState;\n    tempState.x = offsetX;\n    tempState.y = offsetY;\n    setCurrentState(tempState);\n  };\n\n  const draw = (x0, y0, x1, y1, lineThickness, color, emit) => { //{ nativeEvent }) => {\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(x0, y0);\n    contextRef.current.lineTo(x1, y1);\n    contextRef.current.strokeStyle = color;\n    contextRef.current.lineWidth = lineThickness;\n    contextRef.current.stroke();\n\n    if (socket && emit) {\n      socket.emit('drawingEvent', {\n        x0: x0,\n        y0: y0,\n        x1: x1,\n        y1: y1,\n        lineThickness: lineThickness,\n        color: color,\n      });\n    }\n  };\n\n  const undoStroke = (emit) => {\n    contextRef.current.undo();\n\n    if (emit && socket) {\n      socket.emit('undo');\n    }\n  }\n\n  const redoStroke = (emit) => {\n    contextRef.current.undo();\n\n    if (emit && socket) {\n      socket.emit('redo');\n    }\n  }\n\n  const clearCanvas = (emit) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    setCanvasEmpty(true);\n    if (socket && emit) {\n      socket.emit('clearCanvas');\n    }\n  };\n\n  const changeColor = color => () => {\n    const tempState = currentState;\n    tempState.color = color;\n    setCurrentState(tempState);\n  };\n\n  const changeLineWidth = (lineWidthValue) => {\n    const tempState = currentState;\n    tempState.lineThickness = lineWidthValue;\n    setCurrentState(tempState);\n  };\n\n  const exportImage = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const uri = canvas.toDataURL('image/png');\n    \n    if (canvasEmpty) {\n      throw 'Canvas is empty!';\n    }\n    console.log(uri);\n  };\n\n  return (\n    <CanvasContext.Provider\n      value={{\n        canvasRef,\n        prepareCanvas,\n        startDrawing,\n        inDrawing,\n        finishDrawing,\n        clearCanvas,\n        changeColor,\n        changeLineWidth,\n        exportImage,\n        draw,\n        undoStroke,\n        redoStroke,\n      }}\n    >\n      {children}\n    </CanvasContext.Provider>\n  );\n};\n\nexport const useCanvas = () => useContext(CanvasContext);","import React, { useEffect } from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport function GameCanvas({socket = null}) {\n  const {\n    canvasRef,\n    prepareCanvas,\n    startDrawing,\n    finishDrawing,\n    inDrawing,\n    draw,\n    clearCanvas,\n  } = useCanvas();\n\n  useEffect(() => {\n    prepareCanvas();\n  }, []);\n\n  // Socket game handlers.\n  useEffect(() => {\n    const onDrawingEvent = (drawingData) => {\n      draw(drawingData.x0, drawingData.y0, drawingData.x1, drawingData.y1,\n        drawingData.lineThickness, drawingData.color, false);\n    }\n\n    const onClearCanvas = () => {\n      clearCanvas(false);\n    }\n\n    if (socket) {\n      socket.on('drawingEvent', onDrawingEvent);\n      socket.on('clearCanvas', onClearCanvas);\n    }\n    \n    return () => {\n      if (socket) {\n        socket.off('drawingEvent', onDrawingEvent);\n        socket.off('clearCanvas', onClearCanvas);\n      }\n    };\n  }, [socket]);\n\n  return (\n    <canvas\n      onMouseDown={startDrawing}\n      onMouseUp={finishDrawing}\n      onMouseMove={inDrawing}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default GameCanvas;","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const ClearCanvasButton = () => {\n  const { clearCanvas } = useCanvas();\n\n  return <button className=\"btn2\" onClick={clearCanvas}>Clear</button>;\n};","import './home.css';\nimport React, { useState, useRef } from 'react';\nimport Logo from '../../assets/inkee-logo.png';\nimport GameCanvas from '../../components/GameCanvas';\nimport { Button } from 'react-bootstrap';\nimport { CanvasProvider } from '../../components/CanvasContext';\nimport { ClearCanvasButton } from '../../components/ClearCanvasButton';\n\nfunction Home({socket, history}) {\n  const canvasRef = useRef();\n  const [canvasEmpty, setCanvasEmpty] = useState(true);\n  const query = new URLSearchParams(window.location.search);\n  const inviteCode = query.get('gameId');\n\n  if (inviteCode !== null) {\n    localStorage.setItem('inviteCode', inviteCode);\n  }\n\n  const handleHomeSubmit = (path, inviteCode = null) => {\n    const userNameInput = document.getElementById('username_input');\n    if (userNameInput.value !== '') {\n      localStorage.setItem('username', userNameInput.value);\n      console.log(userNameInput.value);\n    } else {\n      alert('Username cannot be empty!');\n      return;\n    }\n\n    if (inviteCode) {\n      socket.on('startGame', (inviteCode) => {\n        localStorage.setItem('inviteCode', inviteCode);\n        history.push({\n          pathname: '/game',\n        });\n      });\n\n      socket.on('inviteCode', () => {\n        localStorage.setItem('inviteCode', inviteCode);\n        history.push({\n          pathname: '/prestartLobby',\n        });\n      });\n\n      socket.emit('joinRoom', {\n        userData: {\n          uid: localStorage.getItem('username'),\n          avatar: 'tempAvatar',\n        },\n        inviteCode: localStorage.getItem('inviteCode'),\n      });\n    } else {\n      history.push({\n        pathname: path,\n      });\n    }\n  };\n\n  return (\n    <div className='root'>\n      <CanvasProvider>\n        <div className='purpleSplat'>\n          <div className='orangeSplat'>\n            <div className='header'>\n              <img className='logo' src={Logo} alt='inkee-logo'/>\n            </div>\n            <form>\n              <input className='username' id='username_input' type='text' placeholder=\"enter username...\"/>\n            </form>\n            <div align=\"center\">\n              <div className=\"homeDrawArea\">\n                <GameCanvas />\n              </div>\n              <div>\n                <Button onClick={() => {\n                  handleHomeSubmit('/joinLobby', localStorage.getItem('inviteCode')); \n                }} className='btn' variant=\"secondary\" size='lg'>join game</Button>\n              </div>\n              <div>\n                {\n                  !localStorage.getItem('inviteCode') &&\n                <Button onClick={() => {\n                  handleHomeSubmit('/createLobby');\n                }} className='btn' variant=\"outline-primary\" size='lg'>create game</Button>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </CanvasProvider>\n    </div>\n  );\n}\nexport default Home;","import React from 'react';\n// Assets\nimport Logo from '../../assets/inkee-logo.png';\n\nfunction CreateHeader() {\n  return (\n    <div className='header'>\n      <img className='logo' src={Logo} alt='inkee-logo' />\n    </div>\n  );\n} \n\nexport default CreateHeader;","import {React, useEffect, useState} from 'react';\nimport { Link, history } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport CreateHeader from '../../components/header/header';\nimport { CSVReader } from 'react-papaparse';\nimport './createLobby.css';\n\nfunction CreateLobby({socket, history}) {\n  // Game Settings\n  const [numRounds, setNumRounds] = useState(2);\n  const [roundLength, setRoundLength] = useState(30);\n  // Custom Words \n  const [textAreaContent, setTextAreaContent] = useState('');\n  const [csvContent, setCsvContent] = useState(null);\n  window.history.replaceState(null, 'Inkee Create Lobby', '/');\n\n  /**\n   * User sets round numbers\n   * @param {onChange} event \n   */\n  const handleNumRoundChange = (event) => {\n    setNumRounds(event.target.value);\n  };\n\n  /**\n   * User sets round lenght\n   * @param {onChange} event \n   */\n  const handleRoundLengthChange = (event) => {\n    setRoundLength(event.target.value);\n  };\n\n  /**\n   * User enters custom words in textArea\n   * @param {onChange} event \n   */\n  const handleTextAreaChange = (event) => {\n    let text = event.target.value;\n    setTextAreaContent(text); \n  };\n\n  /**\n   *  User drops csv file into CSVReader\n   * @param {onDrop} event \n   */\n  const handleOnDrop = (event) => {\n    let words = [];\n    for (let i=0; i<event.length; i++) {\n      let word = event[i].data;\n      if (!words.includes(word[0])) words.push(word[0]);\n    }\n    setCsvContent(words);\n  };\n\n  /**\n   * User removes csv file from CSVReader\n   * @param {onRemoveFile} event \n   */\n  const handleOnRemoveFile = (event) => {\n    setCsvContent(null);\n  };\n\n  /**\n   * Error\n   */\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  /**\n   *  Parses through text area content and csv content and adds them to the\n   * custom word list.\n   * @param {String} textAreaContent \n   * @param {List} csvContent \n   */\n  const parseCustomWords = (textAreaContent, csvContent) => {\n    console.log('Parse Custom Words');\n    let customWords = [];\n    if (textAreaContent.length > 0) {\n      let lines = textAreaContent.split(/\\r\\n|\\r|\\n/);\n      for (let i=0; i<lines.length; i++) {\n        let line = lines[i].split(/[ ,]+/).filter(Boolean);\n        for (let j = 0; j < line.length; j++) {\n          const word = line[j].toLowerCase();\n          if (!customWords.includes(word)) {\n            customWords.push(word);\n          }\n        }\n      }\n      console.log('textAreaContent Created');\n    }\n\n    if (csvContent != null) {\n      for (let i=0; i < csvContent.length; i++) {\n        let word = csvContent[i];\n        word = word.toLowerCase();\n        if (!customWords.includes(word)) {\n          customWords.push(word);\n        }\n      }\n      console.log('csvContent Created');\n    }\n\n    // delete after sprint reivew\n    if (customWords.length < 10 && customWords.length > 0) {\n      alert('Entered less than 10 custom words');\n    }\n\n    return customWords;\n  };\n\n  useEffect(() => {\n    socket.on('inviteCode', (inviteCode) => {\n      console.log(inviteCode);\n      // Join game room generated by server.\n      localStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby'\n      });\n    });\n\n    return () => {\n      socket.off('inviteCode');\n    };\n  }, [socket, history]);\n\n  /**\n   * Submit game configeration to backend\n   * @param {onClick} event \n   */\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Populate customWordList\n    let customWords = parseCustomWords(textAreaContent, csvContent);\n\n    // create gameConfiguration\n    // Use default word list if custom_words is empty\n    let gameConfiguration = {\n      num_rounds: numRounds,\n      round_length: roundLength,\n      custom_words: [],\n    };\n\n    // add custom words if possible\n    if (customWords.length > 0) {\n      gameConfiguration['custom_words'] = customWords;\n    }\n\n    //console.log(gameConfiguration)\n\n    // create userData\n    const userData = {\n      uid: localStorage.getItem('username'),\n      avatar: 'tempAvatar',\n    };\n    \n    socket.emit('createGame', {\n      gameConfiguration,\n      userData,\n    });\n    console.log('socket emit invite code');\n  };\n\n  return (\n    <div className='lobbyRoot'>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <select\n          id=\"numRounds\"\n          name=\"numRounds\"\n          onChange={handleNumRoundChange}\n          value={numRounds}\n          className=\"select\"\n        >\n          <option hidden={true}>choose rounds</option>\n          <option value=\"1rounds\">1</option>\n          <option value=\"2rounds\">2</option>\n          <option value=\"3rounds\">3</option>\n          <option value=\"4rounds\">4</option>\n          <option value=\"5rounds\">5</option>\n          <option value=\"6rounds\">6</option>\n          <option value=\"7rounds\">7</option>\n          <option value=\"8rounds\">8</option>\n          <option value=\"9rounds\">9</option>\n          <option value=\"10rounds\">10</option>\n        </select>\n        <select\n          id=\"roundLength\"\n          name=\"roundLength\"\n          onChange={handleRoundLengthChange}\n          value={roundLength}\n          className=\"select\"\n        >\n          <option hidden={true}>drawing time</option>\n          <option value=\"30seconds\">30</option>\n          <option value=\"40seconds\">40</option>\n          <option value=\"50seconds\">50</option>\n          <option value=\"60seconds\">60</option>\n          <option value=\"70seconds\">70</option>\n          <option value=\"80seconds\">80</option>\n          <option value=\"90seconds\">90</option>\n          <option value=\"120seconds\">120</option>\n          <option value=\"180seconds\">180</option>\n        </select>\n        <div className='wordlist'>\n          <label>Custom Words:</label>\n          <br/>\n          <textarea\n            placeholder='Enter Custom Words...'\n            value={textAreaContent}\n            onChange={handleTextAreaChange}\n          >\n          </textarea>\n          <div className='csvReader'>\n            <h5>Or Upload a CSV File</h5>\n            <CSVReader\n              onDrop={handleOnDrop}\n              onError={handleOnError}\n              addRemoveButton\n              onRemoveFile={handleOnRemoveFile}\n            >\n              <span>Drop CSV file here or click to upload.</span>\n            </CSVReader>\n          </div>\n        </div> \n        <Button variant='primary' onClick={handleSubmit}>start game</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateLobby;","import React, { useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport CreateHeader from '../../components/header/header';\nimport './joinLobby.css';\n\nfunction JoinLobby({socket, history}) {\n  window.history.replaceState(null, 'Inkee Join Lobby', '/');\n  useEffect(() => {\n    socket.on('startGame', (inviteCode) => {\n      localStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/game',\n      });\n    });\n\n    socket.on('inviteCode', (inviteCode) => {\n      localStorage.setItem('inviteCode', inviteCode);\n      history.push({\n        pathname: '/prestartLobby',\n      });\n    });\n  }, [socket, history]);\n\n  const handleSubmit = (inviteCode = null, joinById) => {\n    const userData = {\n      userData: {\n        uid: localStorage.getItem('username'),\n        avatar: 'tempAvatar',\n      },\n      inviteCode: inviteCode,\n    };\n\n    if (joinById && inviteCode === '') {\n      alert('Game ID text box is empty!');\n    } else if (joinById && inviteCode !== '') {\n      userData['inviteCode'] = inviteCode;\n      socket.emit('joinRoom', userData);\n    } else if (!joinById) {\n      socket.emit('joinRandomRoom', userData);\n    }\n  };\n\n  return (\n    <div className='root'>\n      <div className='greenSplat'>\n        <div className='orangeSplatTwo'>\n          <CreateHeader/>\n          <form className='form-group'>\n            <input id='id_input' className='username' type=\"text\" placeholder=\"enter game ID...\"/><br />\n            <Button variant='primary' onClick={() => {\n              handleSubmit(document.getElementById('id_input').value, true);\n            }}>join with ID</Button>\n          </form>\n          <Button variant='primary' onClick={() => {\n            handleSubmit(document.getElementById('id_input').value, false);\n          }}>join random game</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default JoinLobby;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport CreateHeader from '../../components/header/header';\nimport './prestartLobby.css';\n\nfunction PrestartLobby({socket, history}) {\n  const [inviteCode, setInviteCode] = useState('');\n  const [users, setUsers] = useState([]);\n  const [settings, setSettings] = useState({});\n  window.history.replaceState(null, 'Inkee Prestart Lobby',\n    `/${localStorage.getItem('inviteCode')}`);\n\n  // Copy button setup.\n  useEffect(() => {\n    const copyBtn = document.querySelector('#copy.copyBtn');\n    const handleClick = (e) => {\n      e.preventDefault();\n      document.querySelector('#gameLink').select();\n      document.execCommand('copy');\n    };\n\n    copyBtn.addEventListener('click', handleClick);\n\n    return () => {\n      copyBtn.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  \n  // User routines.\n  useEffect(() => {\n    const userListener = (userToAdd) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers, userToAdd];\n        return newUsers;\n      });\n    };\n    \n    const deleteUser = (userId) => {\n      setUsers((prevUsers) => {\n        const newUsers = prevUsers.filter((user) => user.uid !== userId);\n        return newUsers;\n      });\n    };\n  \n    socket.on('newUser', userListener);\n    socket.on('disconnection', deleteUser);\n    socket.emit('getPlayers');\n\n    return () => {\n      socket.off('newUser', userListener);\n      socket.off('disconnection', deleteUser);\n    };\n  }, [socket]);\n\n  // Setting routines.\n  useEffect(() => {\n    const settingListener = (settingUpdate) => {\n      setSettings((prevSettings) => {\n        const key = settingUpdate.key;\n        const value = settingUpdate.value;\n\n        prevSettings[key] = value;\n        return prevSettings;\n      });\n    };\n\n    const populateSettings = (settingsData) => {\n      setSettings(settingsData.settings);\n    };\n\n    socket.on('settingUpdate', settingListener);\n    socket.on('loadSettings', populateSettings);\n    socket.emit('getSettings');\n\n    return () => {\n      socket.off('settingUpdate', settingListener);\n      socket.off('loadSettings', populateSettings);\n    };\n  }, [socket]);\n\n  // Start-game routines.\n  useEffect(() => {\n    const startGame = () => {\n      history.push({\n        pathname: '/game',\n      });\n    };\n    socket.on('startGame', startGame);\n\n    return () => {\n      socket.off('startGame', startGame);\n    };\n  }, [socket, history]);\n\n  useEffect(() => {\n    setInviteCode(localStorage.getItem('inviteCode'));\n  }, [history]);\n\n  return (\n    <div className='root'>\n      <CreateHeader/>\n      <div className='content'>\n        <div className='game-id'>\n          <p>Game ID: {inviteCode}</p>\n        </div>\n        <div className=\"mt-5\">\n          <h1 className=\"text-white text-center\">Invite your friends!</h1>\n          <div className=\"input-group mb-3\">\n            <input type=\"text\" id=\"gameLink\" className=\"form-control text-center fw-bold bg-white\"\n              defaultValue={window.location.origin + '/' + inviteCode} readOnly>\n            </input>\n            <button className=\"copyBtn\" type=\"button\" id=\"copy\">Copy Link</button>\n          </div>\n        </div>\n        <div className='lobby-players'>\n          <ul>\n            <li>Coffee</li>\n            <li>Tea</li>\n            <li>Milk</li>\n          </ul>\n        </div>\n        <Button onClick={() => {\n          socket.emit('startGame');\n        }} variant='primary'>Ready</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default PrestartLobby;\n","import React from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const ColorPalette = () => {\n  const { changeColor } = useCanvas();\n\n  return (\n    <div>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('blue')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('red')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('green')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('yellow')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('pink')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('orange')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('purple')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('brown')}></button>\n      <button id=\"colorButton\" className=\"color\" onClick={changeColor('black')}></button>\n    </div>\n  );\n};","import { React } from 'react';\n\nexport function UserProfile({users = []}) {\n  const listItems = users.map((user) =>\n    <div className=\"userProfile\" key={user.uid}>\n      <div>\n        <b>{user.uid}</b>\n      </div>\n      <div>\n        Score: {user.score}\n      </div>\n    </div>);\n\n  return (\n    <div className=\"profiles\">\n      {listItems}\n    </div>\n  );\n}\n\nexport default UserProfile;","import React from 'react';\nimport { useState } from 'react';\nimport { useCanvas } from './CanvasContext';\n\nexport const StrokeThickness = () => {\n  const { changeLineWidth } = useCanvas();\n\n  return (\n    <div>\n      <input id=\"typeinp\"\n        type=\"range\"\n        min=\"1\"\n        max=\"15\"\n        defaultValue=\"5\"\n        step=\"1\"\n        onChange={(event) => {\n          let slider = (parseInt(event.target.value));\n          changeLineWidth(slider);\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n//Style\nimport './game.css';\n// Assets\nimport GameCanvas from '../../components/GameCanvas';\nimport { CanvasProvider } from '../../components/CanvasContext';\nimport { ClearCanvasButton } from '../../components/ClearCanvasButton';\nimport { ColorPalette } from '../../components/ColorPalette';\nimport { UserProfile } from '../../components/UserProfile';\nimport { StrokeThickness } from '../../components/StrokeThickness';\n\nfunction Game({socket, history}) {\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  window.history.replaceState(null, 'Inkee',\n    `/${localStorage.getItem('inviteCode')}`);\n\n  /* Load player routine */\n  useEffect(() => {\n    const loadPlayers = (users) => {\n      setUsers(users);\n    };\n\n    socket.on('getPlayers', loadPlayers);\n  \n    const loadNewPlayer = (userData) => {\n      setUsers((prevUsers) => {\n        const newUsers = [...prevUsers, userData];\n        return newUsers;\n      });\n    };\n\n    socket.on('newPlayer', loadNewPlayer);\n\n    const disconnectPlayer = (userId) => {\n      setUsers((prevUsers) => {\n        const newUsers = prevUsers.filter((user) => user.uid !== userId);\n        return newUsers;\n      });\n    };\n\n    socket.on('disconnection', disconnectPlayer);\n\n    socket.emit('getPlayers');\n\n    return () => {\n      socket.off('getPlayers', loadPlayers);\n      socket.off('newPlayer', loadNewPlayer);\n      socket.off('disconnection', disconnectPlayer);\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    const sendMessage = document.querySelector('#sendMessage');\n    const keyPressFunc = (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        const message = sendMessage.value;\n        sendMessage.value = '';\n        socket.emit('chatMessage', { message });\n        console.log(message);\n      }\n    };\n    sendMessage.addEventListener('keypress', keyPressFunc);\n\n    socket.on('chatMessage', (data) => {\n      console.log(data);\n      setMessages([...messages, data]);\n      writeMessage({\n        name: data.uid,\n        message: data.message\n      });\n    });\n\n    socket.on('closeGuess', (data) => {\n      console.log(data);\n      setMessages([...messages, data]);\n      writeMessage({\n        name: data.uid,\n        message: data.message,\n      }, { closeGuess: true });\n    });\n\n    socket.on('correctGuess', (messageData) => {\n      console.log(messageData);\n      setMessages([...messages, messageData]);\n      writeMessage({\n        name: messageData.uid,\n        message: messageData.message,\n      }, { correctGuess: true });\n    });\n\n    return () => {\n      socket.off('ERROR');\n      socket.off('correctGuess');\n      socket.off('closeGuess');\n      socket.off('chatMessage');\n      sendMessage.removeEventListener('keypress', keyPressFunc);\n    };\n  }, [socket, messages]);\n\n  return (\n    <div className='gameRoot'>\n      <CanvasProvider socket={socket}>\n        <div className='purpleSplatTwo'>\n          <div className='limeSplat'>\n            <div className='inkeeLogo'>\n              <div className=\"topContainer\" >\n                <div className=\"word\" >word</div>\n                <div className=\"time\" > 3:19 </div>\n              </div>\n              <div className=\"middleContainer\">\n                <UserProfile users={users}/>\n                <div className=\"drawArea\">\n                  <GameCanvas socket={socket}/>\n                </div>\n                <div className=\"chat\" id='chat'></div>\n              </div>\n              <div className=\"bottomContainer\">\n                <div className=\"sendMessage\">\n                  <input type='text' id='sendMessage' placeholder=\"enter guess...\"/>\n                </div>\n                <ClearCanvasButton/>\n                <StrokeThickness />\n                <ColorPalette/>\n              </div>\n            </div>\n          </div>\n        \n        </div>\n      </CanvasProvider>\n    </div>\n  );\n}\n\nconst writeMessage = ({ name = '', message}, {correctGuess = false, closeGuess = false} = {}) => {\n  const p = document.createElement('p');\n  const chatBox = document.createTextNode(`${message}`);\n  const messages = document.getElementById('chat');\n  if (name !== '') {\n    const span = document.createElement('span');\n    span.textContent = `${name}: `;\n    span.classList.add('fw-bold');\n    p.append(span);\n  }\n  p.classList.add('p-2', 'mb-0');\n  p.append(chatBox);\n  if (closeGuess) {\n    p.classList.add('closeAnswer');\n  }\n\n  if (correctGuess) {\n    p.classList.add('correctAnswer');\n  }\n\n  messages.appendChild(p);\n  messages.scrollTop = messages.scrollHeight;\n};\n\nexport default Game;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './pages/home/home';\nimport CreateLobby from './pages/createLobby/createLobby';\nimport JoinLobby from './pages/joinLobby/joinLobby';\nimport PrestartLobby from './pages/prestartLobby/prestartLobby';\nimport Game from './pages/game/game';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [socket, setSocket] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    localStorage.clear();\n\n    return () => {\n      localStorage.clear();\n    };\n  }, []);\n\n  useEffect(() => {\n    // Initialize Socket connection.\n    let domain;\n    if (window.location.hostname === 'localhost') {\n      domain = `http://${window.location.hostname}:8080`;\n    } else {\n      domain = `wss://${window.location.hostname}/`;\n    }\n    const newSocket = io(domain, {\n      transports: ['websocket', 'polling'],\n      upgrade: true,\n      secure: true,\n    });\n    \n    const reconnect = () => {\n      newSocket.io.opts.transports = ['polling', 'websocket'];\n    };\n\n    newSocket.on('connect_error', reconnect);\n    newSocket.on('ERROR', (msg) => {\n      console.log(msg);\n    });\n    setSocket(newSocket);\n\n    // Clean-up routine for socket.\n    return () => {\n      newSocket.removeAllListeners();\n      newSocket.close();\n    };\n  }, [setSocket]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/' exact render={(props) => (<Home socket={socket} history={history} {...props} />)}/>\n          <Route path='/createLobby' render={(props) => (<CreateLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/joinLobby' render={(props) => (<JoinLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/prestartLobby' render={(props) => (<PrestartLobby socket={socket} history={history} {...props} />)}/>\n          <Route path='/game' render={(props) => (<Game socket={socket} history={history} {...props} />)}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}